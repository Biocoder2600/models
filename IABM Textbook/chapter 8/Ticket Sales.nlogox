<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## ACKNOWLEDGMENT

This model is from Chapter Eight of the book "Introduction to Agent-Based Modeling: Modeling Natural, Social and Engineered Complex Systems with NetLogo", by Uri Wilensky & William Rand.

* Wilensky, U. & Rand, W. (2015). Introduction to Agent-Based Modeling: Modeling Natural, Social and Engineered Complex Systems with NetLogo. Cambridge, MA. MIT Press.

This model is in the IABM Textbook folder of the NetLogo Models Library. The model, as well as any updates to the model, can also be found on the textbook website: http://www.intro-to-abm.com/.

## WHAT IS IT?

The general intent of this model is to simulate how individuals within a limited geographic region decide to buy tickets to a live event.

## HOW IT WORKS

During setup, census tract definitions and census tract data are read from external files. The GIS extension is used to read in the tract definitions. The data is read from census files. After this data is read in, households are created in each patch to represent the underlying population present in those location. Finally, a venue is randomly created somewhere in the space.

Once the model runs, in each time step, agents who have not bought tickets calculate the expected utility of attending the event. Then, based on that probability, they decide whether or not to buy the ticket at that time step. This random draw simulates the fact that the particular period in which they decide or not to buy the ticket is stochastic. To make it more realistic you can elaborate the model so that it determines who buys early and who buys late.

## HOW TO USE IT

To run the model, simply set the parameters and let the model run. If after running the model you want to view a different setup with the same parameters, use the RESET-SALE button. Since the GIS data can take a while to load this is a faster way to examine multiple runs.

EVENT-WEEK controls how many weeks until the event occurs.

CONSUMER-UNCERTAINTY controls how uncertain the consumers are in the quality of the event.

CONSUMER-EXPECTED-VALUE controls what value the consumers expect to get out of attending the event.

DISTANCE-SENSITIVITY controls how sensitive consumers are about the distance they are from the event.

## THINGS TO NOTICE

The basic pattern grows outward from the venue.

The density of sales decreases as we get further away from the venue.

The number of sales increases quickly at first, and then slows down.

## THINGS TO TRY

Adjust the CONSUMER-UNCERTAINTY and CONSUMER-EXPECTED-VALUE and see how it affects the results. Number of sales should increase as uncertainty decreases and should decrease as the expected value decreases.

## EXTENDING THE MODEL

Make the process of when consumers buy less stochastic.

Add pricing tiers.

## NETLOGO FEATURES

This model demonstrates the use of the NetLogo GIS extension. It uses the extension to load two GIS datasets for New York City: one for the census tracts and one for the roads. Information about the population in the various census tracts is then loaded from a text file using NetLogo's `file-*` primitives.

## RELATED MODELS

GIS General Examples

## CREDITS AND REFERENCES

This model was inspired by the work of Peggy Tseng and Wendy Moe. Especially, Peggy's dissertation:

Tseng, P. (2009) Effects of Performance Schedules on Event Ticket Sales. Dissertation, University of Maryland Robert H. Smith School of Business. Chair: Moe, W.

## HOW TO CITE

This model is part of the textbook, “Introduction to Agent-Based Modeling: Modeling Natural, Social and Engineered Complex Systems with NetLogo.”

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Rand, W. & Wilensky, U. (2011).  NetLogo Ticket Sales model.  http://ccl.northwestern.edu/netlogo/models/TicketSales.  Center for Connected Learning and Computer-Based Modeling, Northwestern Institute on Complex Systems, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the textbook as:

* Wilensky, U. & Rand, W. (2015). Introduction to Agent-Based Modeling: Modeling Natural, Social and Engineered Complex Systems with NetLogo. Cambridge, MA. MIT Press.

## COPYRIGHT AND LICENSE

Copyright 2011 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2011 Cite: Rand, W. & Wilensky, U. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="10" bottom="774" right="774" top="10" left="261"><dimensions maxPycor="150" minPycor="0" maxPxcor="100" minPxcor="0" wrapInY="true" wrapInX="true" patchSize="5.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button ticksEnabled="false" forever="false" bottom="218" right="100" top="185" left="15"><source><![CDATA[setup]]></source><display><![CDATA[setup]]></display></button><button ticksEnabled="true" forever="true" bottom="218" right="240" top="185" left="105"><source><![CDATA[go]]></source></button><plot bottom="435" right="240" top="285" left="15" ymax="10.0" ymin="0.0" xmax="10.0" xmin="0.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Tickets vs. Time]]></display><xAxis><![CDATA[Time]]></xAxis><yAxis><![CDATA[Tickets]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-16777216" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot count consumers with [ bought? ]]]></update><display><![CDATA[default]]></display></pen></pens></plot><slider direction="horizontal" default="0.15" bottom="93" right="240" top="60" left="15"><maximum><![CDATA[1.0]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[.01]]></step><variable><![CDATA[consumer-uncertainty]]></variable></slider><slider direction="horizontal" default="1.0" bottom="133" right="240" top="100" left="15"><maximum><![CDATA[1]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[.01]]></step><variable><![CDATA[consumer-expected-value]]></variable></slider><slider direction="horizontal" default="15.0" bottom="53" right="240" top="20" left="15"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[event-week]]></variable></slider><slider direction="horizontal" default="0.15" bottom="173" right="240" top="140" left="15"><maximum><![CDATA[1.0]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[0.01]]></step><variable><![CDATA[distance-sensitivity]]></variable></slider><button ticksEnabled="true" forever="false" bottom="258" right="240" top="225" left="105"><source><![CDATA[display-roads]]></source><display><![CDATA[toggle road display]]></display></button><button ticksEnabled="true" forever="false" bottom="258" right="100" top="225" left="15"><source><![CDATA[reset-event]]></source></button></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[extensions [ gis ]            ;; the gis extension allows us to read standard GIS data

breed [ consumers consumer ]  ;; consumers are the ones purchasing tickets
breed [ venues venue ]        ;; where the event will occur

consumers-own [
  bought?                     ;; whether or not they have bought a ticket
  my-uncertainty              ;; uncertainty in the underlying quality of the event
  my-expected-value           ;; what they expect to get out of the event
]

patches-own [
  tract-id                    ;; maps the patch on to a census track
  population                  ;; number of households on the patch
]

globals [
  event-quality-this-week     ;; the actual quality of the event
  nyc-roads-dataset           ;; GIS data file for roads
  nyc-tracts-dataset          ;; GIS data file for the census tracts
  roads-displayed?            ;; a boolean that controls whether or not the roads are being displayed
]

to setup
  clear-all
  setup-maps  ;; load in the GIS data
  ask patches with [ population > 0 ] [
    ;; create the consumers, this creates one household for every 100 in the census data in order to speed up processing
    sprout-consumers population / 100 [
      set my-uncertainty consumer-uncertainty
      set my-expected-value consumer-expected-value
      set bought? false
      set shape "person"
      set color white
      set heading random 360
      fd 0.1
    ]
  ]
  create-venue ;; create the venue for the event
  reset-ticks
end

;; create-venue chooses a random location where there is a household and places the venue there
;;  since we know that all consumers live inside the space of the model this simplifies the
;;  process of finding a point located in the gis data space
to create-venue
  create-venues 1 [
    set shape "house"
    set color yellow
    set size 2
    let target one-of consumers
    set xcor [ xcor ] of target
    set ycor [ ycor ] of target
  ]
end

;; reset-sale sets the status of all consumers to not having been bought, kills the venue and creates a new one
to reset-event
  ask consumers [
    set bought? false
    set color white
  ]
  ask venues [
    die
  ]
  create-venue
  clear-all-plots
  reset-ticks
end

to go
  ;; if all consumers have bought or if time has run out then stop the simulation
  if all? consumers [ bought? ] or fraction-of-time-left <= 0 [
    stop
  ]
  ;; consumers who have not bought are given a chance to buy
  ask consumers with [ not bought? ] [
    if random-float 1.0 < willingness-to-buy [
      buy
    ]
  ]
  tick
end

to load-patch-data
  ;; We check to make sure the file exists first
  ifelse file-exists? "data/households.txt"
  [
    file-open "data/households.txt"
    ;; Read in all the data in the file
    while [ not file-at-end? ]
    [
      let geo_id file-read
      let geo_id2 file-read
      let sumlevel file-read
      let geo_name file-read
      let household-population file-read
      ;; set the population of a patch based on the population of the tract
      ask patches with [ tract-id = geo_id2 ] [
        set population read-from-string household-population
      ]
    ]
    ;; since multiple patches could be part of the same census tract, this code divides the households up evenly among all
    ;;  patches that are part of the same census tract
    ask patches with [ population > 0 ] [
      set population population / count patches with [ tract-id = [ tract-id ] of myself ]
    ]
    ;; Done reading in patch information.  Close the file.
    file-close
  ]
  [ user-message "There is no data/households.txt file in current directory!" ]
end

to setup-maps
  ; Load all of our datasets
  set nyc-roads-dataset gis:load-dataset "data/roads.shp"
  set nyc-tracts-dataset gis:load-dataset "data/tracts.shp"
  ; Set the world envelope to the union of all of our dataset's envelopes
  gis:set-world-envelope (gis:envelope-union-of (gis:envelope-of nyc-roads-dataset) (gis:envelope-of nyc-tracts-dataset))
  set roads-displayed? false

  display-roads  ;; display the roads
  display-tracts ;; display the tract borders

  ;; locate whether a patch intersects a tract, if it does assign it that tract
  foreach gis:feature-list-of nyc-tracts-dataset [ feature ->
    ask patches gis:intersecting feature [
      set tract-id gis:property-value feature "STFID"
    ]
  ]

  ;; load the census data in to the patches
  load-patch-data
end

to display-roads
  ifelse roads-displayed? [
    ;; if the roads aren't displayed clear the drawing and reload the census tract borders
    clear-drawing
    display-tracts
    set roads-displayed? false
  ][
    ;; if they are then draw the streets in red
    gis:set-drawing-color red
    set roads-displayed? true
    gis:draw nyc-roads-dataset 1
  ]
end

to display-tracts
  ;; draw the census tracts in blue
  gis:set-drawing-color blue
  gis:draw nyc-tracts-dataset 1
end

to-report willingness-to-buy
  ;; willingness-to-buy is a factor of the uncertainty the consumer has in the event, the time left, and how close the consumer
  ;;   is to the venue
  let my-discounted-certainty (1 - my-uncertainty) * fraction-of-time-left
  let nearness (1 - distance-sensitivity) ^ (distance one-of venues)
  report my-expected-value * my-discounted-certainty * nearness
end

;; this normalizes the amount of time left between 0 and 1
to-report fraction-of-time-left
  report (event-week - ticks) / (event-week)
end

;; to buy update the variables and change the color of the consumer
to buy
  set bought? true
  set color green
end


; Copyright 2011 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings snapToGrid="true"/><hubnet/></model>
