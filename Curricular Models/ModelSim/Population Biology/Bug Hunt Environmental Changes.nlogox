<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

This model explores the stability of consumer producer ecosystems and both temporary disturbances and more sustained environmental changes affect the stability of the population and the ecosystem.

## HOW IT WORKS

Bugs wander randomly around one of two regions (left or right). Each region is a self contained ecosystem in the world. Bugs in one region never go into the other region. As bugs reach the edge of their region, they wrap around to other side of their own region.

Each time step, each bug loses one unit of energy and they must consume a food source (grass) to replenish their energy. When they run out of energy, they die. To allow the population to continue, each bug must have enough energy to have an offspring. When that threshold is reached, the offspring and parent split the energy amongst themselves.

Different amounts of grassland can be assigned to each region. Within each region, those grassland spots will regrow grass at a fixed rate, when it is eaten. Grass is eaten when a bug moves over that patch. When this happens, a fixed amount of grass energy is deducted from the patch (square) where the grass was eaten.

Different disturbances can be tested in this system, including temporary removal of grass (simulating a fire) and infection of some percentage of the bugs (simulating transmittable disease).

## HOW TO USE IT

1. Adjust the slider parameters (see below), or use the default settings.

2. Press the SETUP button.

4. Press the GO button to begin the model run.

5. View the LEFT REGION POPULATION SIZE VS. TIME and RIGHT REGION POPULATION SIZE VS. TIME plot to watch the bug and grass populations fluctuate over time in each of the regions on the screen.

6. View the BUGS IN LEFT ECOSYSTEM and BUGS IN RIGHT ECOSYSTEM monitors to keep track of the total number of new bugs that that are in each region.

7. View the number of ticks the simulation has run for in the TIME monitor.

Initial Settings:

CONSTANT-SIMULATION-LENGTH: When turned "on" the model run will automatically stop at 1000 ticks. When turned "off" the model run will continue running without automatically stopping.

LEFT-REGION-%-OF-GRASSLAND and RIGHT-REGION-%-OF-GRASSLAND: The percentage of patches in the world & view that produce grass in that region. The grasses that don't produce grass will show "gray" rocks/gravel in that patch.

FOOD-LEFT-BUGS-EAT and FOOD-RIGHT-BUGS-EAT: Sets the amount of energy that all bugs in that region gain from eating grass at a patch as well as the amount of energy deducted from that grass.

LEFT-BUGS-TO-ADD and RIGHT-BUGS-TO-ADD: Determine the initial size of bug population in that region and also determines how many bugs will be added to the model run when the L-ADD-MORE-BUGS or R-ADD-MORE-BUGS button is pressed.

LEFT-BUGS-TO-INFECT and RIGHT-BUGS-TO-INFECT: Determine the % the bug population in that region that will be instantly infected with a disease. The disease is transmitted by contact with other bugs in that region. Bugs die after a fixed time period of carrying the disease.

L-START WILD FIRE and R-START WILD FIRE: start a wild fire in a patch that has grass on the left side of the region. Fire moves from burning patches to adjacent patches that have grass in that region.

## THINGS TO NOTICE

Watch as the grass and bug populations fluctuate. How are increases and decreases in the sizes of each population related?

Adding bugs, or infecting bugs affects the size of the populations in the short term, but not in the long term. What causes this behavior?

Different percentages of grassland values affect the carrying capacity (average values) for both the bugs and grass. Why?

## THINGS TO TRY

Try adjusting the parameters under various settings. How sensitive is the stability of the model to the particular parameters. Does the parameter setting affect the amount of fluctuations, the average values of bugs and grass, or does it lead to the collapse of the ecosystem (death of all the bugs)?

## EXTENDING THE MODEL

In this model, all the bugs are identical to each other and follow the same rules. Try modeling variation in the bug population that would make it easier for some bugs to get food.

## NETLOGO FEATURES

The visualization of fire embers uses the transparency value for the color to gradually fade out the color of the fire and let the background show through, before the embers disappear completely.

## RELATED MODELS

Refer to Bug Hunt Predators and Invasive Species - Two Regions for extensions of this model that include predators (birds that eat bugs) and an invasive species (another population of consumers).

## CREDITS AND REFERENCES

This model is part of the Ecology & Population Biology unit of the ModelSim curriculum, sponsored by NSF grant DRL-1020101.

For more information about the project and the curriculum, see the ModelSim project website: http://ccl.northwestern.edu/modelsim/.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Novak, M. and Wilensky, U. (2015).  NetLogo Bug Hunt Environmental Changes model.  http://ccl.northwestern.edu/netlogo/models/BugHuntEnvironmentalChanges.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2015 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2015 Cite: Novak, M. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="10" bottom="552" right="1240" top="120" left="395"><dimensions maxPycor="23" minPycor="-23" maxPxcor="46" minPxcor="-46" wrapInY="true" wrapInX="true" patchSize="9.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button ticksEnabled="false" forever="false" bottom="43" right="84" top="10" left="10"><source><![CDATA[setup]]></source><display><![CDATA[setup]]></display></button><button ticksEnabled="true" forever="true" bottom="44" right="185" top="10" left="94"><source><![CDATA[go]]></source><display><![CDATA[go/pause]]></display></button><plot bottom="345" right="385" top="140" left="10" ymax="1200.0" ymin="0.0" xmax="1000.0" xmin="0.0" legendOn="true" autoPlotOn="true"><display><![CDATA[Left Region Population Size vs. Time]]></display><xAxis><![CDATA[time]]></xAxis><yAxis><![CDATA[population size]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[set-plot-y-range 0 max-plot-y-max]]></update><pens><pen inLegend="true" color="-5825686" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot count bugs with [ region = 1 ]]]></update><display><![CDATA[bugs]]></display></pen><pen inLegend="true" color="-10899396" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot sum [ plant-energy ] of patches with [ region = 1 ] / max-plant-energy]]></update><display><![CDATA[grass]]></display></pen><pen inLegend="true" color="-5987164" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[foreach [ disruption-tick ] of disruptions with [ disruption-region = 1 ] draw-vert-line]]></update><display><![CDATA[disrupt]]></display></pen></pens></plot><slider direction="horizontal" default="0.0" bottom="118" right="990" top="85" left="830"><maximum><![CDATA[300]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[right-bugs-to-add]]></variable></slider><switch isOn="true" bottom="86" right="230" top="53" left="10"><variable><![CDATA[constant-simulation-length?]]></variable></switch><button ticksEnabled="true" forever="false" bottom="118" right="812" top="85" left="680"><source><![CDATA[start-fire 1]]></source><display><![CDATA[L - start wild fire]]></display></button><button ticksEnabled="true" forever="false" bottom="83" right="675" top="50" left="555"><source><![CDATA[infect-a-%-of-bugs 1]]></source><display><![CDATA[L - infect bugs]]></display></button><slider direction="horizontal" default="81.0" bottom="83" right="555" top="50" left="395"><maximum><![CDATA[90]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><units><![CDATA[%]]></units><variable><![CDATA[left-bugs-to-infect]]></variable></slider><slider direction="horizontal" default="100.0" bottom="118" right="555" top="85" left="395"><maximum><![CDATA[300]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[left-bugs-to-add]]></variable></slider><plot bottom="551" right="385" top="347" left="10" ymax="1200.0" ymin="0.0" xmax="1000.0" xmin="0.0" legendOn="true" autoPlotOn="true"><display><![CDATA[Right Region Population Size vs. Time]]></display><xAxis><![CDATA[time]]></xAxis><yAxis><![CDATA[population size]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[set-plot-y-range 0 max-plot-y-max]]></update><pens><pen inLegend="true" color="-13345367" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot count bugs with [ region = 2 ]]]></update><display><![CDATA[bugs]]></display></pen><pen inLegend="true" color="-10899396" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot sum [ plant-energy ] of patches with [ region = 2 ] / max-plant-energy]]></update><display><![CDATA[grass]]></display></pen><pen inLegend="true" color="-5987164" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[foreach [ disruption-tick ] of disruptions with [ disruption-region = 2 ] draw-vert-line]]></update><display><![CDATA[disrupt]]></display></pen></pens></plot><button ticksEnabled="true" forever="false" bottom="118" right="675" top="85" left="555"><source><![CDATA[add-more-bugs 1]]></source><display><![CDATA[L - add more bugs]]></display></button><button ticksEnabled="true" forever="false" bottom="118" right="1122" top="85" left="997"><source><![CDATA[add-more-bugs 2]]></source><display><![CDATA[R - add more bugs]]></display></button><button ticksEnabled="true" forever="false" bottom="118" right="1240" top="85" left="1125"><source><![CDATA[start-fire 2]]></source><display><![CDATA[R - start wild fire]]></display></button><textbox transparent="true" color="#000000" fontSize="50" bottom="120" right="830" top="10" left="810"><display><![CDATA[|
|]]></display></textbox><textbox transparent="true" color="#8D008D" fontSize="48" bottom="125" right="828" top="9" left="808"><display><![CDATA[|
|]]></display></textbox><slider direction="horizontal" default="50.0" bottom="83" right="990" top="50" left="830"><maximum><![CDATA[90]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><units><![CDATA[%]]></units><variable><![CDATA[right-bugs-to-infect]]></variable></slider><button ticksEnabled="true" forever="false" bottom="83" right="1122" top="50" left="997"><source><![CDATA[infect-a-%-of-bugs 2]]></source><display><![CDATA[R - infect bugs]]></display></button><textbox transparent="true" color="#100041" fontSize="13" bottom="73" right="800" top="55" left="700"><display><![CDATA[Left Region]]></display></textbox><textbox transparent="true" color="#5D00A9" fontSize="13" bottom="73" right="1245" top="55" left="1135"><display><![CDATA[Right Region]]></display></textbox><monitor precision="0" fontSize="11" bottom="135" right="165" top="90" left="10"><source><![CDATA[count bugs with [region = 1]]]></source><display><![CDATA[bugs in left region]]></display></monitor><monitor precision="17" fontSize="11" bottom="135" right="330" top="90" left="170"><source><![CDATA[count bugs with [region = 2]]]></source><display><![CDATA[bugs in right region]]></display></monitor><slider direction="horizontal" default="60.0" bottom="43" right="630" top="10" left="395"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[left-region-%-grassland]]></variable></slider><slider direction="horizontal" default="100.0" bottom="43" right="1050" top="10" left="830"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[right-region-%-grassland]]></variable></slider><slider direction="horizontal" default="4.0" bottom="43" right="800" top="10" left="635"><maximum><![CDATA[8]]></maximum><minimum><![CDATA[0.1]]></minimum><step><![CDATA[.1]]></step><variable><![CDATA[food-left-bugs-eat]]></variable></slider><slider direction="horizontal" default="4.0" bottom="43" right="1222" top="10" left="1057"><maximum><![CDATA[8]]></maximum><minimum><![CDATA[.1]]></minimum><step><![CDATA[.1]]></step><variable><![CDATA[food-right-bugs-eat]]></variable></slider><monitor precision="17" fontSize="11" bottom="85" right="325" top="40" left="240"><source><![CDATA[ticks]]></source><display><![CDATA[time]]></display></monitor></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="1" rotatable="false" name="block"><elements><rect marked="true" filled="true" color="#D73229" height="300" width="135" y="0" x="0"/><rect marked="false" filled="true" color="#8D8D8D" height="300" width="105" y="0" x="195"/><rect marked="false" filled="true" color="#000000" height="300" width="45" y="0" x="135"/><rect marked="false" filled="true" color="#FFFFFF" height="300" width="30" y="0" x="165"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="10" rotatable="true" name="bug-infected"><elements><circle marked="false" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="false" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="false" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="false" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="false" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="14" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#000000" diameter="300" cy="0" cx="0"/><circle marked="false" filled="false" color="#FFFFFF" diameter="242" cy="29" cx="29"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="empty"><elements/></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fire"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,286 134,282 103,282 59,248 40,210 32,157 37,108 68,146 71,109 83,72 111,27 127,55 148,11 167,41 180,112 195,57 217,91 226,126 227,203 256,156 256,201 238,263 213,278 183,281"/><polygon marked="false" filled="true" color="#F16A15" points="126,284 91,251 85,212 91,168 103,132 118,153 125,181 135,141 151,96 185,161 195,203 193,253 164,286"/><polygon marked="false" filled="true" color="#EDED31" points="155,284 172,268 172,243 162,224 148,201 130,233 131,260 135,282"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="rock-0"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="0" cx="105"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="114" cx="174"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="240" cx="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="39" cx="204"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="234" cx="69"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="129" cx="234"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="9" cx="249"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="234" cx="249"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="69" cx="-6"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="219" cx="204"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="rock-1"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="0,300 60,300 45,270 30,255 15,255"/><polygon marked="true" filled="true" color="#8D8D8D" points="0,30 0,75 45,90 60,60 45,15 30,0"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,255 285,285 285,300 255,300 240,270 270,255"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,60 240,90 210,60 240,15 255,0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="rock-2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="0,105 -15,150 0,180 30,195 75,195 105,165 105,135 75,105 45,90 15,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,0 165,0 195,30 195,45 180,60 150,60 120,45 105,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,75 135,75 105,105 105,120 120,135 150,135 180,120 195,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,90 210,180 240,225 270,225 300,180 300,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,240 75,285 165,300 210,270 210,240 165,210 90,210"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="rock-3"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="180,165 135,150 105,165 90,195 75,240 105,285 165,285 195,255 195,210 195,180"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,60 75,60 105,90 105,105 90,120 60,120 30,105 15,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,150 120,105 90,75 75,75 60,90 60,120 75,150 105,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,180 195,165 165,105 180,45 240,30 270,75 270,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="rock-4"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 0,165 15,195 45,210 75,195 75,180 90,150 90,120 60,105 30,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,0 165,0 195,30 195,45 180,60 150,60 120,45 105,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="270,105 225,105 195,135 195,150 210,165 240,165 270,150 285,120"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,75 180,90 195,180 165,225 135,225 105,180 105,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,240 120,285 210,300 255,270 255,240 210,210 135,225"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="rocks-4"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="60" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="189" cx="84"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="69" cx="129"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="105" cx="180"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="240" cx="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="129" cx="114"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="39" cx="204"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="-6" cx="84"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="234" cx="69"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="129" cx="264"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="249" cx="9"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="-21" cx="264"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="264" cx="264"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="-6" cx="-6"/><circle marked="true" filled="true" color="#8D8D8D" diameter="42" cy="219" cx="204"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sheep"><elements><rect marked="true" filled="true" color="#8D8D8D" height="60" width="29" y="225" x="151"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="28" y="225" x="47"/><rect marked="true" filled="true" color="#8D8D8D" height="150" width="195" y="75" x="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="75" cx="135"/><circle marked="false" filled="true" color="#000000" diameter="116" cy="76" cx="165"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[globals [
  bugs-stride               ;; how much a bug moves in each simulation step
  bug-size                  ;; the size of the shape for a bug
  bug-reproduce-age         ;; age at which bug reproduces
  bugs-born                 ;; number of bugs born
  bugs-died                 ;; number of bugs that died
  max-bugs-age
  min-reproduce-energy-bugs ;; how much energy, at minimum, bug needs to reproduce
  max-bugs-offspring        ;; max offspring a bug can have

  max-plant-energy          ;; the maximum amount of energy a plant in a patch can accumulate
  sprout-delay-time         ;; number of ticks before grass starts regrowing
  grass-level               ;; a measure of the amount of grass currently in the ecosystem
  grass-growth-rate         ;; the amount of energy units a plant gains every tick from regrowth

  rock-color
  bug-color-region-1
  bug-color-region-2
  grass-color
  dirt-color
  disease-age
  disease-color

  region-boundaries
]


breed [rocks rock]
breed [disease-markers disease-marker]   ;; visual cue, red "X" that bug has a disease and will die
breed [bugs bug]
breed [dividers divider]                 ;; dummy turtles that separate the view in regions
breed [embers ember]                     ;; visual cue that a grass patch is on fire
breed [disruptions disruption]           ;; dummy turtles that record the disruption events

bugs-own [
  energy
  current-age
  max-age
  female?
  #-offspring
]

embers-own [
  current-age
]

disease-markers-own [
 current-age
]

patches-own [
  fertile?
  plant-energy
  countdown
  region
]

disruptions-own [
  disruption-region         ;; the region in which the disruption happened
  disruption-tick           ;; the tick at which the disruption happened
  disruption-description    ;; "infected bugs", "added more bugs" or "started a wild fire"
]


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; setup procedures ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to startup
  setup-regions 2
end



to setup

  clear-all

  set bugs-born 0
  set bugs-died 0

  set bug-size 1.2
  set bugs-stride 0.3
  set bug-reproduce-age 20
  set min-reproduce-energy-bugs 10
  set max-bugs-offspring 2
  set max-bugs-age 100
  set grass-level 0
  set disease-age 20
  set sprout-delay-time 25
  set grass-growth-rate 10
  set max-plant-energy 100

  set bug-color-region-1 magenta
  set bug-color-region-2 blue
  set grass-color green
  set dirt-color white
  set disease-color black
  set rock-color [216 212 196]

  set-default-shape bugs "bug"
  set-default-shape disease-markers "circle"
  set-default-shape embers "fire"
  set-default-shape disruptions "empty"

  setup-regions 2
  add-starting-grass
  add-bugs 1
  add-bugs 2

  reset-ticks

end

to add-starting-grass
  ask patches [
    set fertile? false
    set plant-energy 0
    set pcolor dirt-color
  ]
  add-grass-in-region 1 left-region-%-grassland
  add-grass-in-region 2 right-region-%-grassland
  add-rocks
end

to add-grass-in-region [ which-region %-grassland ]
  let region-patches patches with [ region = which-region ]
  let n floor ((%-grassland / 100) * count region-patches)
  ask n-of n region-patches [
    set fertile? true
    set plant-energy max-plant-energy / 2
    color-grass
  ]

end



to add-more-bugs [which-region]
  ifelse any? disruptions with [ disruption-region = which-region ]
    [inform-user-about-max-disruptions which-region]
  [
    add-bugs which-region
    record-disruption which-region "added more bugs"
  ]
end


to add-bugs [which-region]
  let region-patches patches with [ region = which-region ]
  let bugs-to-add item (which-region - 1) (list left-bugs-to-add right-bugs-to-add)
  let bug-color item (which-region - 1) (list bug-color-region-1 bug-color-region-2)
  create-bugs bugs-to-add [                  ;; create the bugs, then initialize their variables
    set color bug-color
    set size bug-size
    set energy 20 + random 20 - random 20    ;; randomize starting energies
    set current-age 0  + random max-bugs-age ;; start out bugs at different ages
    set max-age max-bugs-age
    set #-offspring 0
    move-to one-of region-patches
  ]
end



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; runtime procedures ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to go
  if ticks >= 999 and constant-simulation-length? [ stop ]
  ask bugs [
    bugs-live
    reproduce-bugs
  ]
  ask patches [
    set countdown random sprout-delay-time
    grow-grass ;; only the fertile patches can grow grass
  ]
  age-and-spread-embers
  update-disease
  tick
end

to record-disruption [ which-region description ]
  create-disruptions 1 [
    set disruption-region which-region
    set disruption-description description
    set disruption-tick ticks
  ]
  update-plots
end

to inform-user-about-max-disruptions [which-region]
  ask one-of disruptions with [ disruption-region = which-region ] [
    let region-side item (which-region - 1) ["left" "right"]
    user-message (word
      "You are allowed only one disruption in each ecosystem every time you run the model.\n\n"
      "You have already " disruption-description " in the " region-side " ecosystem.")
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; disease procedures ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to update-disease
  ask disease-markers [
    set current-age (current-age + 1)
    if current-age > disease-age or (ticks = 999 and constant-simulation-length?) [
      ask in-link-neighbors [ die ]
      die
    ]
  ]
  infect-others
end

to infect-others
  ask bugs with [ has-disease? ] [
    ask turtle-set one-of other bugs-here with [ not has-disease? ] [
      infect-this-bug
    ]
  ]
end



to infect-a-%-of-bugs [which-region]
  ;; procedure for removing a percentage of bugs (when button is clicked)
  ifelse any? disruptions with [ disruption-region = which-region ] [
    inform-user-about-max-disruptions which-region
  ]
  [
    let bugs-in-region bugs with [ region = which-region ]
    let bugs-to-infect 0
    if which-region = 1 [ set bugs-to-infect left-bugs-to-infect ]
    if which-region = 2 [ set bugs-to-infect right-bugs-to-infect ]
    let number-bugs count bugs-in-region
    ask n-of floor (number-bugs * bugs-to-infect / 100) bugs-in-region [
      infect-this-bug
    ]
    record-disruption which-region "infected bugs"
  ]
end


to infect-this-bug
  hatch-disease-markers 1 [
    set current-age 0
    set size 1.5
    set color disease-color
    create-link-from myself [ tie ]
  ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; fire procedures ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to start-fire [ which-region ]
  ifelse any? disruptions with [ disruption-region = which-region ] [
    inform-user-about-max-disruptions which-region
  ]
  [
    let current-grass-patches patches with [ fertile? and region = which-region ]
    let edge-pxcor min-pxcor + 1
    if which-region = 2 [ set edge-pxcor max-pxcor - 1 ]
    ask current-grass-patches with [ pxcor = edge-pxcor ] [
      set countdown sprout-delay-time
      set plant-energy 0
      color-grass
      create-ember
    ]
    record-disruption which-region "started a wild fire"
  ]
end

to create-ember ;; patch procedure
  sprout 1 [
    set breed embers
    set current-age (sprout-delay-time / 2)
    set color [255 0 0 255]
    set size 1.5
  ]
end

to age-and-spread-embers
  ask embers [
    set plant-energy 0
    set countdown sprout-delay-time
    set current-age (current-age - 1)
    if current-age <= 0 [ die ]
    let my-region region
    ask neighbors4 with [ region = [ region ] of myself and fertile? and plant-energy > (max-plant-energy / 4) and not any? embers-here ] [
      create-ember
    ]
    let transparency round floor current-age * 255 / sprout-delay-time
    set color lput transparency [255 155 0]
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; bug procedures ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to bugs-live
  move-bugs
  set energy (energy - 1)  ;; bugs lose energy as they move
  set current-age (current-age + 1)
  bugs-eat-grass
  bug-death
end

to move-bugs
  rt random 50 - random 50
  let current-region region
  fd bugs-stride
  keep-in-region current-region
end


to bugs-eat-grass  ;; bugs procedure
  ;; if there is enough grass to eat at this patch, the bugs eat it
  ;; and then gain energy from it.
  if region = 1 [
    if plant-energy > food-left-bugs-eat [
      ;; plants lose ten times as much energy as the bugs gains (trophic level assumption)
      set plant-energy (plant-energy - (food-left-bugs-eat * 10))
      set energy energy + food-left-bugs-eat ;; bugs gain energy by eating
    ]
    ;; if plant-energy is negative, make it positive
    if plant-energy <= food-left-bugs-eat [ set countdown sprout-delay-time ]
  ]
  if region = 2 [
    if plant-energy > food-right-bugs-eat [
      ;; plants lose ten times as much energy as the bugs gains (trophic level assumption)
      set plant-energy (plant-energy - (food-right-bugs-eat * 10))
      set energy energy + food-right-bugs-eat ;; bugs gain energy by eating
    ]
    ;; if plant-energy is negative, make it positive
    if plant-energy <=  food-right-bugs-eat [ set countdown sprout-delay-time ]
  ]
end

to reproduce-bugs  ;; bugs procedure
  let number-new-offspring (random (max-bugs-offspring + 1)) ;; set number of potential offpsring from 1 to (max-bugs-offspring)
  if (energy > ((number-new-offspring + 1) * min-reproduce-energy-bugs) and current-age > bug-reproduce-age) [
    set energy (energy - (number-new-offspring * min-reproduce-energy-bugs)) ;;lose energy when reproducing --- given to children
    set #-offspring #-offspring + number-new-offspring
    set bugs-born bugs-born + number-new-offspring
    ;; hatch an offspring set it heading off in a a random direction and move it forward a step
    hatch number-new-offspring [
      set energy min-reproduce-energy-bugs ;; split remaining half of energy amongst litter
      set current-age 0
      set #-offspring 0
      rt random 360
      move-bugs
    ]
  ]
end

to bug-death
  ;; a bug dies when energy dips below zero (starvation), or it gets too old
  if (current-age > max-age) or (energy < 0) [
    set bugs-died bugs-died + 1
    ask out-link-neighbors [ die ]
    die
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; grass procedures ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to grow-grass ;; patch procedure
  set countdown (countdown - 1)
  ;; fertile patches gain 1 energy unit per turn, up to a maximum max-plant-energy threshold
  if fertile? and countdown <= 0 [
    set plant-energy (plant-energy + grass-growth-rate)
    if plant-energy > max-plant-energy [
      set plant-energy max-plant-energy
    ]
  ]
  if not fertile? [
    set plant-energy 0
  ]
  if plant-energy < 0 [
    set plant-energy 0
    set countdown sprout-delay-time
  ]
  color-grass
end


to color-grass
  if region > 0 [
    ifelse fertile? [
      ifelse plant-energy > 0
        ;; scale color of patch from whitish green for low energy (less foliage) to green - high energy (lots of foliage)
        [ set pcolor (scale-color green plant-energy (max-plant-energy * 2) 0) ]
        [ set pcolor dirt-color ]
    ]
    [ set pcolor rock-color ]
  ]
end


to add-rocks
  ask patches with [ not fertile? and (region = 1 or region = 2) ]  [
    sprout 1 [
      set size 1.1
      set shape "square"
      set color gray - 0.5
      stamp
      set size 1
      set heading random 360
      set shape "rock-3"
      set color gray - random-float 1 + random-float 1
      stamp
      set heading random 360
      set shape "rock-2"
      set color gray + 1 + random-float 1
      stamp
      set heading random 360
      ifelse random 2 = 0 [ set shape "rock-4" ] [ set shape "rock-0" ]
      set color gray + 2 + random-float 0.5
      stamp
      die
    ]
    set pcolor rock-color
  ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GRAPHING;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to draw-vert-line [ xval ]
  plotxy xval plot-y-min
  plot-pen-down
  plotxy xval plot-y-max
  plot-pen-up
end

to-report max-plot-y-max
  ;; Reports the highest plot-y-max of the two plots.
  ;; Used for maintaining the same y-scale in both plots.
  let name plot-name ;; save the name of the current plot
  set-current-plot "Left Region Population Size vs. Time"
  let ys (list plot-y-max)
  set-current-plot "Right Region Population Size vs. Time"
  set ys lput plot-y-max ys
  set-current-plot name ;; restore current plot to what it was
  report max ys
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;REPORTERS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to-report has-disease?
  report any? out-link-neighbors
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; REGION MANAGEMENT CODE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to setup-regions [ num-regions ]
  ; Store our region definitions globally for faster access:
  set region-boundaries calculate-region-boundaries num-regions
  ; Set the `region` variable for all patches included in regions:
  let region-numbers n-values num-regions [ n -> n + 1 ]
  (foreach region-boundaries region-numbers [ [boundaries region-number] ->
    ask patches with [ pxcor >= first boundaries and pxcor <= last boundaries ] [
      set region region-number
    ]
  ])
  add-dividers
end

to add-dividers
  set-default-shape dividers "block"
  ask patches with [ region = 0 ] [
    sprout-dividers 1 [
      set color gray + 2
      set size 1.2
    ]
  ]
end

to-report calculate-region-boundaries [ num-regions ]
  ; The region definitions are built from the region divisions:
  let divisions region-divisions num-regions
  ; Each region definition lists the min-pxcor and max-pxcor of the region.
  ; To get those, we use `map` on two "shifted" copies of the division list,
  ; which allow us to scan through all pairs of dividers
  ; and built our list of definitions from those pairs:
  report (map [ [d1 d2] -> list (d1 + 1) (d2 - 1) ] (but-last divisions) (but-first divisions))
end

to-report region-divisions [ num-regions ]
  ; This procedure reports a list of pxcor that should be outside every region.
  ; Patches with these pxcor will act as "dividers" between regions.
  report n-values (num-regions + 1) [ n ->
    [ pxcor ] of patch (min-pxcor + (n * ((max-pxcor - min-pxcor) / num-regions))) 0
  ]
end

to keep-in-region [ which-region ] ; turtle procedure
  ; This is the procedure that make sure that turtles don't leave the region they're
  ; supposed to be in. It is your responsibility to call this whenever a turtle moves.
  if region != which-region [
    ; Get our region boundaries from the global region list:
    let region-min-pxcor first item (which-region - 1) region-boundaries
    let region-max-pxcor last item (which-region - 1) region-boundaries
    ; The total width is (min - max) + 1 because `pxcor`s are in the middle of patches:
    let region-width (region-max-pxcor - region-min-pxcor) + 1
    ifelse xcor < region-min-pxcor [ ; if we crossed to the left,
      set xcor xcor + region-width   ; jump to the right boundary
    ] [
      if xcor > region-max-pxcor [   ; if we crossed to the right,
        set xcor xcor - region-width ; jump to the left boundary
      ]
    ]
  ]
end


; Copyright 2015 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings snapToGrid="true"/><hubnet/></model>
