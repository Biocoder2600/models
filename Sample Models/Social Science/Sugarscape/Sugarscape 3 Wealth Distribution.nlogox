<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

This third model in the NetLogo Sugarscape suite implements Epstein & Axtell's Sugarscape Wealth Distribution model, as described in chapter 2 of their book Growing Artificial Societies: Social Science from the Bottom Up. It provides a ground-up simulation of inequality in wealth. Only a minority of the population have above average wealth, while most agents have wealth near the same level as the initial endowment.

The inequity of the resulting distribution can be described graphically by the Lorenz curve and quantitatively by the Gini coefficient.

## HOW IT WORKS

Each patch contains some sugar, the maximum amount of which is predetermined. At each tick, each patch regains one unit of sugar, until it reaches the maximum amount.
The amount of sugar a patch currently contains is indicated by its color; the darker the yellow, the more sugar.

At setup, agents are placed at random within the world. Each agent can only see a certain distance horizontally and vertically. At each tick, each agent will move to the nearest unoccupied location within their vision range with the most sugar, and collect all the sugar there.  If its current location has as much or more sugar than any unoccupied location it can see, it will stay put.

Agents also use (and thus lose) a certain amount of sugar each tick, based on their metabolism rates. If an agent runs out of sugar, it dies.

Each agent also has a maximum age, which is assigned randomly from the range 60 to 100 ticks.  When the agent reaches an age beyond its maximum age, it dies.

Whenever an agent dies (either from starvation or old age), a new randomly initialized agent is created somewhere in the world; hence, in this model the global population count stays constant.

## HOW TO USE IT

The INITIAL-POPULATION slider sets how many agents are in the world.

The MINIMUM-SUGAR-ENDOWMENT and MAXIMUM-SUGAR-ENDOWMENT sliders set the initial amount of sugar ("wealth") each agent has when it hatches. The actual value is randomly chosen from the given range.

Press SETUP to populate the world with agents and import the sugar map data. GO will run the simulation continuously, while GO ONCE will run one tick.

The VISUALIZATION chooser gives different visualization options and may be changed while the GO button is pressed. When NO-VISUALIZATION is selected all the agents will be red. When COLOR-AGENTS-BY-VISION is selected the agents with the longest vision will be darkest and, similarly, when COLOR-AGENTS-BY-METABOLISM is selected the agents with the lowest metabolism will be darkest.

The WEALTH-DISTRIBUTION histogram on the right shows the distribution of wealth.

The LORENZ CURVE plot shows what percent of the wealth is held by what percent of the population, and the the GINI-INDEX V. TIME plot shows a measure of the inequity of the distribution over time.  A GINI-INDEX of 0 equates to everyone having the exact same amount of wealth (collected sugar), and a GINI-INDEX of 1 equates to the most skewed wealth distribution possible, where a single person has all the sugar, and no one else has any.

## THINGS TO NOTICE

After running the model for a while, the wealth distribution histogram shows that there are many more agents with low wealth than agents with high wealth.

Some agents will have less than the minimum initial wealth (MINIMUM-SUGAR-ENDOWMENT), if the minimum initial wealth was greater than 0.

## THINGS TO TRY

How does the initial population affect the wealth distribution? How long does it take for the skewed distribution to emerge?

How is the wealth distribution affected when you change the initial endowments of wealth?

## NETLOGO FEATURES

All of the Sugarscape models create the world by using `file-read` to import data from an external file, `sugar-map.txt`. This file defines both the initial and the maximum sugar value for each patch in the world.

Since agents cannot see diagonally we cannot use `in-radius` to find the patches in the agents' vision.  Instead, we use `at-points`.

## RELATED MODELS

Other models in the NetLogo Sugarscape suite include:

* Sugarscape 1 Immediate Growback
* Sugarscape 2 Constant Growback

For more explanation of the Lorenz curve and the Gini index, see the Info tab of the Wealth Distribution model.  (That model is also based on Epstein and Axtell's Sugarscape model, but more loosely.)

## CREDITS AND REFERENCES

Epstein, J. and Axtell, R. (1996). Growing Artificial Societies: Social Science from the Bottom Up.  Washington, D.C.: Brookings Institution Press.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Li, J. and Wilensky, U. (2009).  NetLogo Sugarscape 3 Wealth Distribution model.  http://ccl.northwestern.edu/netlogo/models/Sugarscape3WealthDistribution.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2009 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2009 Cite: Li, J. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="10" bottom="419" right="708" top="10" left="300"><dimensions maxPycor="49" minPycor="0" maxPxcor="49" minPxcor="0" wrapInY="true" wrapInX="true" patchSize="8.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button ticksEnabled="false" forever="false" bottom="175" right="90" top="135" left="10"><source><![CDATA[setup]]></source></button><button ticksEnabled="true" forever="true" bottom="175" right="190" top="135" left="100"><source><![CDATA[go]]></source></button><button ticksEnabled="true" forever="false" bottom="175" right="290" top="135" left="200"><source><![CDATA[go]]></source><display><![CDATA[go once]]></display></button><chooser currentChoice="0" bottom="235" right="290" top="190" left="10"><variable><![CDATA[visualization]]></variable><choices><stringChoice><![CDATA[no-visualization]]></stringChoice><stringChoice><![CDATA[color-agents-by-vision]]></stringChoice><stringChoice><![CDATA[color-agents-by-metabolism]]></stringChoice></choices></chooser><plot bottom="140" right="925" top="10" left="720" ymax="10.0" ymin="0.0" xmax="10.0" xmin="0.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Wealth distribution]]></display><setup><![CDATA[]]></setup><update><![CDATA[set-histogram-num-bars 10
set-plot-x-range 0 (max [sugar] of turtles)
set-plot-pen-interval ((max [sugar] of turtles) / 10)]]></update><pens><pen inLegend="true" color="-16777216" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[histogram ([sugar] of turtles)]]></update><display><![CDATA[default]]></display></pen></pens></plot><slider direction="horizontal" default="400.0" bottom="43" right="290" top="10" left="10"><maximum><![CDATA[1000]]></maximum><minimum><![CDATA[10]]></minimum><step><![CDATA[10]]></step><variable><![CDATA[initial-population]]></variable></slider><slider direction="horizontal" default="5.0" bottom="83" right="290" top="50" left="10"><maximum><![CDATA[200]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[minimum-sugar-endowment]]></variable></slider><plot bottom="295" right="925" top="145" left="720" ymax="100.0" ymin="0.0" xmax="100.0" xmin="0.0" legendOn="true" autoPlotOn="false"><display><![CDATA[Lorenz curve]]></display><xAxis><![CDATA[Pop %]]></xAxis><yAxis><![CDATA[Wealth %]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-16777216" mode="0" interval="100.0"><setup><![CDATA[;; draw a straight line from lower left to upper right
set-current-plot-pen "equal"
plot 0
plot 100]]></setup><update><![CDATA[]]></update><display><![CDATA[equal]]></display></pen><pen inLegend="true" color="-2674135" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot-pen-reset
set-plot-pen-interval 100 / count turtles
plot 0
foreach lorenz-points plot]]></update><display><![CDATA[lorenz]]></display></pen></pens></plot><plot bottom="440" right="925" top="300" left="720" ymax="1.0" ymin="0.0" xmax="100.0" xmin="0.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Gini index vs. time]]></display><xAxis><![CDATA[Time]]></xAxis><yAxis><![CDATA[Gini]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-13345367" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot (gini-index-reserve / count turtles) * 2]]></update><display><![CDATA[default]]></display></pen></pens></plot><slider direction="horizontal" default="25.0" bottom="123" right="290" top="90" left="10"><maximum><![CDATA[200]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[maximum-sugar-endowment]]></variable></slider></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[globals [
  gini-index-reserve
  lorenz-points
]

turtles-own [
  sugar           ;; the amount of sugar this turtle has
  metabolism      ;; the amount of sugar that each turtles loses each tick
  vision          ;; the distance that this turtle can see in the horizontal and vertical directions
  vision-points   ;; the points that this turtle can see in relative to it's current position (based on vision)
  age             ;; the current age of this turtle (in ticks)
  max-age         ;; the age at which this turtle will die of natural causes
]

patches-own [
  psugar           ;; the amount of sugar on this patch
  max-psugar       ;; the maximum amount of sugar that can be on this patch
]

;;
;; Setup Procedures
;;

to setup
  if maximum-sugar-endowment <= minimum-sugar-endowment [
    user-message "Oops: the maximum-sugar-endowment must be larger than the minimum-sugar-endowment"
    stop
  ]
  clear-all
  create-turtles initial-population [ turtle-setup ]
  setup-patches
  update-lorenz-and-gini
  reset-ticks
end

to turtle-setup ;; turtle procedure
  set color red
  set shape "circle"
  move-to one-of patches with [not any? other turtles-here]
  set sugar random-in-range minimum-sugar-endowment maximum-sugar-endowment
  set metabolism random-in-range 1 4
  set max-age random-in-range 60 100
  set age 0
  set vision random-in-range 1 6
  ;; turtles can look horizontally and vertically up to vision patches
  ;; but cannot look diagonally at all
  set vision-points []
  foreach (range 1 (vision + 1)) [ n ->
    set vision-points sentence vision-points (list (list 0 n) (list n 0) (list 0 (- n)) (list (- n) 0))
  ]
  run visualization
end

to setup-patches
  file-open "sugar-map.txt"
  foreach sort patches [ p ->
    ask p [
      set max-psugar file-read
      set psugar max-psugar
      patch-recolor
    ]
  ]
  file-close
end

;;
;; Runtime Procedures
;;

to go
  if not any? turtles [
    stop
  ]
  ask patches [
    patch-growback
    patch-recolor
  ]
  ask turtles [
    turtle-move
    turtle-eat
    set age (age + 1)
    if sugar <= 0 or age > max-age [
      hatch 1 [ turtle-setup ]
      die
    ]
    run visualization
  ]
  update-lorenz-and-gini
  tick
end

to turtle-move ;; turtle procedure
  ;; consider moving to unoccupied patches in our vision, as well as staying at the current patch
  let move-candidates (patch-set patch-here (patches at-points vision-points) with [not any? turtles-here])
  let possible-winners move-candidates with-max [psugar]
  if any? possible-winners [
    ;; if there are any such patches move to one of the patches that is closest
    move-to min-one-of possible-winners [distance myself]
  ]
end

to turtle-eat ;; turtle procedure
  ;; metabolize some sugar, and eat all the sugar on the current patch
  set sugar (sugar - metabolism + psugar)
  set psugar 0
end

to patch-recolor ;; patch procedure
  ;; color patches based on the amount of sugar they have
  set pcolor (yellow + 4.9 - psugar)
end

to patch-growback ;; patch procedure
  ;; gradually grow back all of the sugar for the patch
  set psugar min (list max-psugar (psugar + 1))
end

to update-lorenz-and-gini
  let num-people count turtles
  let sorted-wealths sort [sugar] of turtles
  let total-wealth sum sorted-wealths
  let wealth-sum-so-far 0
  let index 0
  set gini-index-reserve 0
  set lorenz-points []
  repeat num-people [
    set wealth-sum-so-far (wealth-sum-so-far + item index sorted-wealths)
    set lorenz-points lput ((wealth-sum-so-far / total-wealth) * 100) lorenz-points
    set index (index + 1)
    set gini-index-reserve
      gini-index-reserve +
      (index / num-people) -
      (wealth-sum-so-far / total-wealth)
  ]
end

;;
;; Utilities
;;

to-report random-in-range [low high]
  report low + random (high - low + 1)
end

;;
;; Visualization Procedures
;;

to no-visualization ;; turtle procedure
  set color red
end

to color-agents-by-vision ;; turtle procedure
  set color red - (vision - 3.5)
end

to color-agents-by-metabolism ;; turtle procedure
  set color red + (metabolism - 2.5)
end


; Copyright 2009 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings snapToGrid="true"/><hubnet/></model>
