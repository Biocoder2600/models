<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

This model is designed as a "thought experiment" to shed light on the ongoing debate between two theories of learning, constructivism and social constructivism. In it, agents "learn" through playing a game either as individuals, social interactors, or both.

This model of "learning through playing" was created with the following objectives:

1. to demonstrate the viability of agent-based modeling (ABM) for examining socio/developmental-psychological phenomena;

2. to illustrate the potential of ABM as a platform enabling discourse and collaboration between psychologists with different theoretical commitments;

3. to visualize the complementarity of Piagetian and Vygotskiian explanations of how people learn.

## HOW IT WORKS

The design problem for this model-based thought experiment was to create a single environment in which we could simulate both “Piagetian” and “Vygotskiian” learning.

We chose to model a game in which contestants all stand behind a line and each throws a marble, trying to land it as close as possible to a target line some "yards" away (30 NetLogo patches): Players stand in a row. They each roll a marble at a target line. Some players undershoot the line, some overshoot it. Players collect their marbles, adjust the force of their roll, and, on a subsequent trial, improve on their first trial—they have “learned” as individuals.

To show the difference between the “Piagetian” and “Vygotskiian” perspectives, we focus on the differential emphases they put on the contribution of the social milieu to individual learning.

We simulated four learning strategies:

- **“Random”**: a control condition, in which players’ achievement does not inform their performance on subsequent attempts, unless they are exactly on target.

- **“Piagetian”**: players learn only from their own past attempts.

- **“Vygotskiian”**: players learn only by watching other players nearby, not from their own attempts.

- **“Piagetian–Vygotskiian”**: players learn from both their own and a neighbor’s performance.

## HOW TO USE IT

To run this simulation, press SETUP and then GO. To execute the simulation one attempt at a time, press GO ONCE.

The NUMBER-OF-PLAYERS slider controls how many players there are in the game.

You can change the number of attemps that each player makes in a simulation run using the ATTEMPTS-PER-RUN slider.

To run the simulation under a particular learning mode (Random/Piagetian/Vygotskiian/Piagetian-Vygotskiian), use the STRATEGY chooser and select the strategy from its drop-down menu. Make sure the switch RANDOMIZE-STRATEGY-EACH-RUN? is set to "Off."

Adjust the value of the ZPD slider to set the maximum difference between a player's score and its selected neighbor's score that still allows the player to learn from that neighbor (applies under the Vygotskiian and Piagetian-Vygotskiian strategies).

Adjust the value of the MOVE-ERROR slider to set the level of "noise" in the players' perception and execution.

Adjust the value of the #-VYGOTSKIIAN-NEIGHBORS slider to set the number of neighbors that players see under the Vygotskiian and Piagetian-Vygotskiian strategy.

If the TRAILS? switch is "On", each player will leave a colored trail behind when they make an attempt, making it easier to see where they end up.

Set the switch RANDOMIZE-STRATEGY-EACH-RUN? to "On" in order to view multiple runs under the different conditions. This is helpful for comparing between different experimental outcomes. Note that the target line, in the middle of the view, changes color to reflect the condition you are running the simulation under -- these are the same colors as in the graph and histogram.

If the STOP-AFTER-EACH-RUN? switch is set to "On", the simulation will stop after ATTEMPTS-PER-RUN attempts have been made.

## THINGS TO NOTICE

Note that the learning process involves “feedback loops.” That is, a player’s learning—the individual “output” of a single attempt—constitutes “input” for the subsequent attempt. In the “Piagetian” condition, this is a player-specific internal loop, and in the “Vygotskiian” condition one person’s output may be another person’s input on a subsequent attempt, and so on.

Note also that over the course of a “Piagetian–Vygotskiian” run of the simulation, players might learn on one attempt from their own performance and on another from the performance of a neighbor. Both sources of information are simultaneously available for each player to act upon.

## THINGS TO TRY

The combined “Piagetian–Vygotskiian” strategy tends to be the best one, but whether the Piagetian learning is greater than the Vygotskiian learning or vice versa depends on combinations of the settings of the parameters #-VYGOTSKIIAN-NEIGHBORS, ZPD, and MOVE-ERROR. Try to find some settings under which Piagetian works better and some settings under which Vygotskiian works better. Can you explain where the difference comes from?

## EXTENDING THE MODEL

Try to implement a modified version of the “Vygotskiian” strategy, where the better performing players modify their next move to be within the ZPD of a less well performing neighbor, making a play that is worse than they know how to make, in order to help the less well performing player learn to play better.

## CREDITS AND REFERENCES

This model is a modernized version of the model presented in:

- Abrahamson, D., & Wilensky, U. (2005). "Piaget? Vygotsky? I'm game!: Agent-based modeling for psychology research". Paper presented at the annual meeting of the Jean Piaget Society. https://ccl.northwestern.edu/papers/Abrahamson_Wilensky_JPS20.pdf

The original model is available at:
http://ccl.sesp.northwestern.edu/research/conferences/JPS2005/JPS2005.nlogo

For more about the additions suggested in EXTENDING THE MODEL, see:

- Abrahamson, D., Wilensky, U. & Levin, J. (2007) "Agent-Based Modeling as a Bridge Between Cognitive and Social Perspectives on Learning". Paper presented at the annual meeting of the American Educational Research Association, Chicago, IL. http://ccl.northwestern.edu/2007/abr-wil-levin-aera2007.pdf

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Abrahamson, D. and Wilensky, U. (2005).  NetLogo Piaget-Vygotsky Game model.  http://ccl.northwestern.edu/netlogo/models/Piaget-VygotskyGame.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2005 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2005 Cite: Abrahamson, D. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" updateMode="continuous" fontSize="10" bottom="274" right="627" top="10" left="14"><dimensions maxPycor="25" minPycor="-25" maxPxcor="60" minPxcor="-60" wrapInY="false" wrapInX="false" patchSize="5.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><chooser currentChoice="3" bottom="436" right="116" top="391" left="16"><variable><![CDATA[strategy]]></variable><choices><stringChoice><![CDATA[Random]]></stringChoice><stringChoice><![CDATA[Piagetian]]></stringChoice><stringChoice><![CDATA[Vygotskiian]]></stringChoice><stringChoice><![CDATA[P-V]]></stringChoice></choices></chooser><button ticksEnabled="false" forever="false" bottom="350" right="125" top="305" left="15"><source><![CDATA[setup]]></source></button><button ticksEnabled="true" forever="true" bottom="350" right="220" top="305" left="130"><source><![CDATA[go]]></source></button><plot bottom="548" right="629" top="303" left="324" ymax="50.0" ymin="0.0" xmax="30.0" xmin="1.0" legendOn="true" autoPlotOn="true"><display><![CDATA[Avg Distance From Target]]></display><xAxis><![CDATA[Attempts]]></xAxis><yAxis><![CDATA[Distance From Target]]></yAxis><setup><![CDATA[set-plot-x-range 1 attempts-per-run]]></setup><update><![CDATA[if attempts > 0 [
  set-current-plot-pen strategy
  plotxy attempts (mean [ score ] of turtles)
]]]></update><pens><pen inLegend="true" color="-10899396" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[Random]]></display></pen><pen inLegend="true" color="-13345367" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[Piagetian]]></display></pen><pen inLegend="true" color="-2674135" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[Vygotskiian]]></display></pen><pen inLegend="true" color="-16777216" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[P-V]]></display></pen></pens></plot><slider direction="horizontal" default="30.0" bottom="388" right="165" top="355" left="15"><maximum><![CDATA[50]]></maximum><minimum><![CDATA[10]]></minimum><step><![CDATA[10]]></step><variable><![CDATA[number-of-players]]></variable></slider><slider direction="horizontal" default="4.0" bottom="428" right="315" top="395" left="215"><maximum><![CDATA[30]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[move-error]]></variable></slider><switch isOn="true" bottom="473" right="315" top="440" left="225"><variable><![CDATA[trails?]]></variable></switch><button ticksEnabled="true" forever="false" bottom="350" right="315" top="305" left="225"><source><![CDATA[go]]></source><display><![CDATA[go once]]></display></button><switch isOn="true" bottom="513" right="315" top="480" left="15"><variable><![CDATA[randomize-strategy-each-run?]]></variable></switch><plot bottom="546" right="873" top="11" left="635" ymax="15.0" ymin="0.0" xmax="4.0" xmin="0.0" legendOn="true" autoPlotOn="true"><display><![CDATA[Strategy Avgs]]></display><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-10899396" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[if not empty? r-results [
  plot-pen-reset
  plotxy 0 mean r-results
]]]></update><display><![CDATA[Random]]></display></pen><pen inLegend="true" color="-13345367" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[if not empty? p-results [
  plot-pen-reset
  plotxy 1 mean p-results
]]]></update><display><![CDATA[Piagetian]]></display></pen><pen inLegend="true" color="-2674135" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[if not empty? v-results [
  plot-pen-reset
  plotxy 2 mean v-results
]]]></update><display><![CDATA[Vygotskiian]]></display></pen><pen inLegend="true" color="-16777216" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[if not empty? pv-results [
  plot-pen-reset
  plotxy 3 mean pv-results
]]]></update><display><![CDATA[P-V]]></display></pen></pens></plot><slider direction="horizontal" default="4.0" bottom="473" right="220" top="440" left="15"><maximum><![CDATA[18]]></maximum><minimum><![CDATA[2]]></minimum><step><![CDATA[2]]></step><variable><![CDATA[#-vygotskiian-neighbors]]></variable></slider><slider direction="horizontal" default="15.0" bottom="428" right="212" top="395" left="120"><maximum><![CDATA[60]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[5]]></step><variable><![CDATA[ZPD]]></variable></slider><slider direction="horizontal" default="30.0" bottom="388" right="315" top="355" left="170"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[attempts-per-run]]></variable></slider><switch isOn="false" bottom="548" right="315" top="515" left="15"><variable><![CDATA[stop-after-each-run?]]></variable></switch></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="ant"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="136,61 129,46 144,30 119,45 124,60 114,82 97,37 132,10 93,36 111,84 127,105 172,105 189,84 208,35 171,11 202,35 204,37 186,82 177,60 180,44 159,32 170,44 165,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,95 135,103 139,117 125,149 137,180 135,196 150,204 166,195 161,180 174,150 158,116 164,102"/><polygon marked="true" filled="true" color="#8D8D8D" points="149,186 128,197 114,232 134,270 149,282 166,270 185,232 171,195 149,186"/><polygon marked="true" filled="true" color="#8D8D8D" points="225,66 230,107 159,122 161,127 234,111 236,106"/><polygon marked="true" filled="true" color="#8D8D8D" points="78,58 99,116 139,123 137,128 95,119"/><polygon marked="true" filled="true" color="#8D8D8D" points="48,103 90,147 129,147 130,151 86,151"/><polygon marked="true" filled="true" color="#8D8D8D" points="65,224 92,171 134,160 135,164 95,175"/><polygon marked="true" filled="true" color="#8D8D8D" points="235,222 210,170 163,162 161,166 208,174"/><polygon marked="true" filled="true" color="#8D8D8D" points="249,107 211,147 168,147 168,150 213,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bee"><elements><polygon marked="false" filled="true" color="#EDED31" points="152,149 77,163 67,195 67,211 74,234 85,252 100,264 116,276 134,286 151,300 167,285 182,278 206,260 220,242 226,218 226,195 222,166"/><polygon marked="false" filled="true" color="#000000" points="150,149 128,151 114,151 98,145 80,122 80,103 81,83 95,67 117,58 141,54 151,53 177,55 195,66 207,82 211,94 211,116 204,139 189,149 171,152"/><polygon marked="true" filled="true" color="#8D8D8D" points="151,54 119,59 96,60 81,50 78,39 87,25 103,18 115,23 121,13 150,1 180,14 189,23 197,17 210,19 222,30 222,44 212,57 192,58"/><polygon marked="false" filled="true" color="#000000" points="70,185 74,171 223,172 224,186"/><polygon marked="false" filled="true" color="#000000" points="67,211 71,226 224,226 225,211 67,211"/><polygon marked="false" filled="true" color="#000000" points="91,257 106,269 195,269 211,255"/><line marked="false" filled="false" color="#FFFFFF" y2="87" x2="70" y1="100" x1="144"/><line marked="false" filled="false" color="#FFFFFF" y2="87" x2="45" y1="87" x1="70"/><line marked="false" filled="false" color="#FFFFFF" y2="97" x2="26" y1="86" x1="45"/><line marked="false" filled="false" color="#FFFFFF" y2="115" x2="22" y1="96" x1="26"/><line marked="false" filled="false" color="#FFFFFF" y2="130" x2="25" y1="115" x1="22"/><line marked="false" filled="false" color="#FFFFFF" y2="141" x2="37" y1="131" x1="26"/><line marked="false" filled="false" color="#FFFFFF" y2="144" x2="55" y1="141" x1="37"/><line marked="false" filled="false" color="#FFFFFF" y2="101" x2="143" y1="143" x1="55"/><line marked="false" filled="false" color="#FFFFFF" y2="138" x2="227" y1="100" x1="141"/><line marked="false" filled="false" color="#FFFFFF" y2="137" x2="241" y1="138" x1="227"/><line marked="false" filled="false" color="#FFFFFF" y2="129" x2="249" y1="137" x1="241"/><line marked="false" filled="false" color="#FFFFFF" y2="110" x2="254" y1="129" x1="249"/><line marked="false" filled="false" color="#FFFFFF" y2="97" x2="248" y1="108" x1="253"/><line marked="false" filled="false" color="#FFFFFF" y2="82" x2="235" y1="95" x1="249"/><line marked="false" filled="false" color="#FFFFFF" y2="100" x2="144" y1="82" x1="235"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="bird1"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="2,6 2,39 270,298 297,298 299,271 187,160 279,75 276,22 100,67 31,0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="bird2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="2,4 33,4 298,270 298,298 272,298 155,184 117,289 61,295 61,105 0,43"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="boat1"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="63,162 90,207 223,207 290,162"/><rect marked="false" filled="true" color="#9D6E48" height="130" width="7" y="32" x="150"/><polygon marked="false" filled="true" color="#345DA9" points="150,34 131,49 145,47 147,48 149,49"/><polygon marked="true" filled="true" color="#8D8D8D" points="158,33 230,157 182,150 169,151 157,156"/><polygon marked="true" filled="true" color="#8D8D8D" points="149,55 88,143 103,139 111,136 117,139 126,145 130,147 139,147 146,146 149,55"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="boat2"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="63,162 90,207 223,207 290,162"/><rect marked="false" filled="true" color="#9D6E48" height="130" width="7" y="32" x="150"/><polygon marked="false" filled="true" color="#345DA9" points="150,34 131,49 145,47 147,48 149,49"/><polygon marked="true" filled="true" color="#8D8D8D" points="157,54 175,79 174,96 185,102 178,112 194,124 196,131 190,139 192,146 211,151 216,154 157,154"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,74 146,91 139,99 143,114 141,123 137,126 131,129 132,139 142,136 126,142 119,147 148,147"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="boat3"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="63,162 90,207 223,207 290,162"/><rect marked="false" filled="true" color="#9D6E48" height="130" width="7" y="32" x="150"/><polygon marked="false" filled="true" color="#345DA9" points="150,34 131,49 145,47 147,48 149,49"/><polygon marked="true" filled="true" color="#8D8D8D" points="158,37 172,45 188,59 202,79 217,109 220,130 218,147 204,156 158,156 161,142 170,123 170,102 169,88 165,62"/><polygon marked="true" filled="true" color="#8D8D8D" points="149,66 142,78 139,96 141,111 146,139 148,147 110,147 113,131 118,106 126,71"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="45,255 255,255 255,45 45,45"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly1"><elements><polygon marked="false" filled="true" color="#000000" points="151,76 138,91 138,284 150,296 162,286 162,91"/><polygon marked="true" filled="true" color="#8D8D8D" points="164,106 184,79 205,61 236,48 259,53 279,86 287,119 289,158 278,177 256,182 164,181"/><polygon marked="true" filled="true" color="#8D8D8D" points="136,110 119,82 110,71 85,61 59,48 36,56 17,88 6,115 2,147 15,178 134,178"/><polygon marked="true" filled="true" color="#8D8D8D" points="46,181 28,227 50,255 77,273 112,283 135,274 135,180"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,185 254,184 272,224 255,251 236,267 191,283 164,276"/><line marked="true" filled="false" color="#8D8D8D" y2="82" x2="159" y1="47" x1="167"/><line marked="true" filled="false" color="#8D8D8D" y2="81" x2="145" y1="47" x1="136"/><circle marked="true" filled="true" color="#8D8D8D" diameter="8" cy="45" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="6" cy="45" cx="134"/><circle marked="true" filled="true" color="#8D8D8D" diameter="7" cy="44" cx="133"/><circle marked="true" filled="true" color="#8D8D8D" diameter="8" cy="43" cx="133"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="230" cy="35" cx="35"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="circle-arrow"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="283" cy="8" cx="8"/><polygon marked="false" filled="true" color="#FFFFFF" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="link"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="225" x2="30" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="225" x2="270" y1="150" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="63" cy="20" cx="155"/><rect marked="true" filled="true" color="#8D8D8D" height="85" width="59" y="79" x="158"/><polygon marked="true" filled="true" color="#8D8D8D" points="158,81 110,129 131,143 158,109 165,110"/><polygon marked="true" filled="true" color="#8D8D8D" points="216,83 267,123 248,143 215,107"/><polygon marked="true" filled="true" color="#8D8D8D" points="167,163 145,234 183,234 183,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,163 195,233 227,233 206,159"/></elements></turtleShape><turtleShape editableColorIndex="15" rotatable="false" name="sheep"><elements><rect marked="true" filled="true" color="#FFFFFF" height="150" width="180" y="75" x="90"/><circle marked="true" filled="true" color="#FFFFFF" diameter="150" cy="75" cx="15"/><rect marked="false" filled="true" color="#000000" height="61" width="53" y="225" x="81"/><rect marked="false" filled="true" color="#000000" height="60" width="58" y="225" x="180"/><circle marked="false" filled="true" color="#000000" diameter="92" cy="88" cx="1"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="spacecraft"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 180,135 255,255 225,240 150,180 75,240 45,255 120,135"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="thin-arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 120,150 120,293 180,293 180,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck-down"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="225,30 225,270 120,270 105,210 60,180 45,30 105,60 105,30"/><polygon marked="false" filled="true" color="#7C50A4" points="195,75 195,120 240,120 240,75"/><polygon marked="false" filled="true" color="#7C50A4" points="195,225 195,180 240,180 240,225"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck-left"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="120,135 225,135 225,210 75,210 75,165 105,165"/><polygon marked="false" filled="true" color="#7C50A4" points="90,210 105,225 120,210"/><polygon marked="false" filled="true" color="#7C50A4" points="180,210 195,225 210,210"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck-right"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="180,135 75,135 75,210 225,210 225,165 195,165"/><polygon marked="false" filled="true" color="#7C50A4" points="210,210 195,225 180,210"/><polygon marked="false" filled="true" color="#7C50A4" points="120,210 105,225 90,210"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="138,75 162,75 165,105 225,105 225,142 195,135 195,187 225,195 225,225 195,217 195,202 105,202 105,217 75,225 75,195 105,187 105,135 75,142 75,105 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wolf"><elements><rect marked="true" filled="true" color="#8D8D8D" height="60" width="90" y="105" x="15"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="60" y="90" x="45"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,90 83,44 104,90"/><polygon marked="false" filled="true" color="#000000" points="67,90 82,59 97,89"/><rect marked="false" filled="true" color="#FFFFFF" height="12" width="11" y="93" x="48"/><rect marked="false" filled="true" color="#000000" height="5" width="4" y="96" x="51"/><rect marked="false" filled="true" color="#000000" height="14" width="15" y="121" x="0"/><rect marked="false" filled="true" color="#000000" height="15" width="45" y="136" x="15"/><polygon marked="false" filled="true" color="#FFFFFF" points="15,136 23,149 31,136"/><polygon marked="false" filled="true" color="#FFFFFF" points="30,151 37,136 43,151"/><rect marked="true" filled="true" color="#8D8D8D" height="75" width="158" y="120" x="105"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="151" y="195" x="108"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="138" y="201" x="114"/><rect marked="true" filled="true" color="#8D8D8D" height="4" width="123" y="210" x="120"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="140" y="114" x="115"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="120" y="108" x="128"/><rect marked="true" filled="true" color="#8D8D8D" height="3" width="75" y="105" x="150"/><rect marked="true" filled="true" color="#8D8D8D" height="56" width="23" y="214" x="132"/><rect marked="true" filled="true" color="#8D8D8D" height="10" width="22" y="260" x="110"/><rect marked="true" filled="true" color="#8D8D8D" height="56" width="22" y="214" x="210"/><rect marked="true" filled="true" color="#8D8D8D" height="10" width="21" y="260" x="189"/><line marked="true" filled="false" color="#8D8D8D" y2="155" x2="281" y1="127" x1="263"/><line marked="true" filled="false" color="#8D8D8D" y2="192" x2="281" y1="155" x1="281"/></elements></turtleShape><turtleShape editableColorIndex="3" rotatable="false" name="wolf-left"><elements><polygon marked="true" filled="true" color="#9D6E48" points="117,97 91,74 66,74 60,85 36,85 38,92 44,97 62,97 81,117 84,134 92,147 109,152 136,144 174,144 174,103 143,103 134,97"/><polygon marked="true" filled="true" color="#9D6E48" points="87,80 79,55 76,79"/><polygon marked="true" filled="true" color="#9D6E48" points="81,75 70,58 73,82"/><polygon marked="true" filled="true" color="#9D6E48" points="99,131 76,152 76,163 96,182 104,182 109,173 102,167 99,173 87,159 104,140"/><polygon marked="true" filled="true" color="#9D6E48" points="107,138 107,186 98,190 99,196 112,196 115,190"/><polygon marked="true" filled="true" color="#9D6E48" points="116,140 114,189 105,137"/><rect marked="true" filled="true" color="#9D6E48" height="42" width="5" y="150" x="109"/><rect marked="true" filled="true" color="#9D6E48" height="48" width="5" y="143" x="111"/><polygon marked="true" filled="true" color="#9D6E48" points="168,106 184,98 205,98 218,115 218,137 186,164 196,176 195,194 178,195 178,183 188,183 169,164 173,144"/><polygon marked="true" filled="true" color="#9D6E48" points="207,140 200,163 206,175 207,192 193,189 192,177 198,176 185,150"/><polygon marked="true" filled="true" color="#9D6E48" points="214,134 203,168 192,148"/><polygon marked="true" filled="true" color="#9D6E48" points="204,151 203,176 193,148"/><polygon marked="true" filled="true" color="#9D6E48" points="207,103 221,98 236,101 243,115 243,128 256,142 239,143 233,133 225,115 214,114"/></elements></turtleShape><turtleShape editableColorIndex="3" rotatable="false" name="wolf-right"><elements><polygon marked="true" filled="true" color="#9D6E48" points="170,127 200,93 231,93 237,103 262,103 261,113 253,119 231,119 215,143 213,160 208,173 189,187 169,190 154,190 126,180 106,171 72,171 73,126 122,126 144,123 159,123"/><polygon marked="true" filled="true" color="#9D6E48" points="201,99 214,69 215,99"/><polygon marked="true" filled="true" color="#9D6E48" points="207,98 223,71 220,101"/><polygon marked="true" filled="true" color="#9D6E48" points="184,172 189,234 203,238 203,246 187,247 180,239 171,180"/><polygon marked="true" filled="true" color="#9D6E48" points="197,174 204,220 218,224 219,234 201,232 195,225 179,179"/><polygon marked="true" filled="true" color="#9D6E48" points="78,167 95,187 95,208 79,220 92,234 98,235 100,249 81,246 76,241 61,212 65,195 52,170 45,150 44,128 55,121 69,121 81,135"/><polygon marked="true" filled="true" color="#9D6E48" points="48,143 58,141"/><polygon marked="true" filled="true" color="#9D6E48" points="46,136 68,137"/><polygon marked="true" filled="true" color="#9D6E48" points="45,129 35,142 37,159 53,192 47,210 62,238 80,237"/><line marked="false" filled="false" color="#000000" y2="213" x2="59" y1="237" x1="74"/><line marked="false" filled="false" color="#000000" y2="212" x2="59" y1="213" x1="59"/><line marked="false" filled="false" color="#000000" y2="192" x2="67" y1="211" x1="58"/><polygon marked="true" filled="true" color="#9D6E48" points="38,138 66,149"/><polygon marked="true" filled="true" color="#9D6E48" points="46,128 33,120 21,118 11,123 3,138 5,160 13,178 9,192 0,199 20,196 25,179 24,161 25,148 45,140"/><polygon marked="true" filled="true" color="#9D6E48" points="67,122 96,126 63,144"/></elements></turtleShape></shapes><code><![CDATA[globals [
  target     ; the target line in the middle
  max-dist   ; the maximum distance to that wall
  attempts   ; the number of attempts made so far with the current strategy

  ; lists of each run's distance halfway through the run's attempts
  p-results
  v-results
  pv-results
  r-results
]

turtles-own [
  max-moves      ; the max-moves of the current throw
  best-max-moves ; the best throw of the agent (or, if no memory, the current throw)
  moves-left     ; the number of moves left until the ball comes to rest
  score          ; the current score (how far from target... lower is better)
  best-score     ; best score (or, if no memory, current throw)
]

to setup
  clear-all

  ; the target is the line in the center of the screen, one patch thick
  set target patches with [ pxcor = 0 ]

  set-default-shape turtles "circle-arrow"
  set max-dist world-width

  create-turtles number-of-players [
    set size (world-height / number-of-players)
    set color color + 0.1 ; to make trails a little easier to see
  ]
  spread-out-turtles-evenly

  ; initialize result lists
  set p-results  []
  set v-results  []
  set pv-results []
  set r-results  []

  setup-run
  setup-attempt
  reset-ticks
end

to spread-out-turtles-evenly
  let d (world-height / count turtles)
  let y (min-pycor - 0.5 + (d / 2))
  foreach sort turtles [ t ->
    ask t [ set ycor round y ]
    set y (y + d)
  ]
end

to setup-run
  set attempts 0
  ; random strategies lets you keep the simulation running
  ; picking from the available strategies at random
  if randomize-strategy-each-run? [
    set strategy one-of [ "Random" "Piagetian" "Vygotskiian" "P-V" ]
  ]
  ask turtles [
    set score (max-dist + 1) ; start with a dummy score that is sure to be beaten
    set best-score score
    ; their max-moves are randomly distributed over the length of the playing field
    set max-moves random max-dist
  ]
end

to-report get-strategy-color
  if strategy = "Random"      [ report green ]
  if strategy = "Piagetian"   [ report blue  ]
  if strategy = "Vygotskiian" [ report red   ]
  if strategy = "P-V"         [ report grey  ]
end

to setup-attempt
  clear-patches
  ask target [
    set pcolor get-strategy-color
  ]
  ; place turtles at starting line
  ask turtles [
    set heading 90
    set xcor min-pxcor
  ]
end

to go

  if attempts >= attempts-per-run [ setup-run ]
  setup-attempt

  ; move all the turtles forward to their max-moves spot
  move-turtles

  ; the score is their distance from the target line
  ask turtles [ set score distancexy 0 ycor ]

  ; act according to the strategy, e.g,. in Vygotskiian, you compare
  ; your scores to a neighbor and possibly update your score
  ask turtles [ adjust ]

  set attempts (attempts + 1)
  if attempts = round (attempts-per-run / 2) [ record-result ]
  tick
  if attempts >= attempts-per-run and stop-after-each-run? [
    stop
  ]

end

to move-turtles
  ; move all the turtles forward to their max-moves spot.
  ; we can't just say "forward max-moves" because we want
  ; them to bounce off the wall and leave a dissipating trail
  ask turtles [ set moves-left limit-legal-distance max-moves ]
  let moving-turtles turtles with [ moves-left > 0 ]
  while [ any? moving-turtles ] [
    set moving-turtles turtles with [ moves-left > 0 ]
    ask moving-turtles [
      move-x
      if trails? [
        set pcolor (color - 5) + (10 * (max-moves - moves-left) / max-moves)
      ]
    ]
  ]
end

to record-result
  let current-mean mean [ score ] of turtles
  if strategy = "Random"      [ set  r-results lput current-mean  r-results ]
  if strategy = "Piagetian"   [ set  p-results lput current-mean  p-results ]
  if strategy = "Vygotskiian" [ set  v-results lput current-mean  v-results ]
  if strategy = "P-V"         [ set pv-results lput current-mean pv-results ]
end

to move-x
  set moves-left moves-left - 1
  forward 1
  if pxcor >= (max-pxcor - 1) [
    set heading 270
    forward 2
  ]
end

to-report limit-legal-distance [ val ]
  report min (list (max-dist - 1) max (list 0 val))
end

to adjust
  if strategy = "Random" [
    r-adjust
    set max-moves best-max-moves
    stop
  ]
  if strategy = "Piagetian" [ p-adjust ]
  if strategy = "Vygotskiian" [ v-adjust ]
  if strategy = "P-V" [ pv-adjust ]

  if strategy = "Vygotskiian" [
    set max-moves limit-legal-distance
      (best-max-moves + (random-normal 0 (move-error * best-score / max-dist)))
    stop
  ]

  ifelse xcor > 0 [
    set max-moves limit-legal-distance
      (best-max-moves +  (- abs random-normal 0 (move-error * best-score / max-dist)))
  ] [
    set max-moves limit-legal-distance
      (best-max-moves + (abs random-normal 0 (move-error * best-score / max-dist)))
  ]
end

to p-adjust
  ; if your score is better, that's your new best, otherwise stick with the old
  if score < best-score [ ; note that lower scores are better (closer to target line)
    set best-score score
    set best-max-moves max-moves
  ]
end

to v-adjust
  let fellow nobody
  while [ fellow = nobody or fellow = self ] [
    set fellow turtle (who + (- (#-vygotskiian-neighbors / 2)) + random (1 + #-vygotskiian-neighbors))
  ]
  ; look randomly to one of your neighbors

  ; if the score is better and it is within your ZPD, use their max-moves.
  ifelse (best-score > [ best-score ] of fellow) and (best-score - ZPD <= [ best-score ] of fellow) [
    set best-score [ best-score ] of fellow
    set best-max-moves [ best-max-moves ] of fellow
  ]
  [
    set best-score score
    set best-max-moves max-moves
  ]
end

to pv-adjust

  ; look randomly to one of your neighbors
  let fellow nobody
  while [ fellow = nobody or fellow = self ] [
    set fellow turtle (who + (- (#-vygotskiian-neighbors / 2)) + random (1 + #-vygotskiian-neighbors))
  ]

  ; maximize your own score and...
  if score < best-score [
    set best-score score
    set best-max-moves max-moves
  ]

  ; check it against your neighbor's score
  if (best-score > [ best-score ] of fellow) and (best-score - ZPD <= [ best-score ] of fellow) [
    set best-score [ best-score ] of fellow
    set best-max-moves [ best-max-moves ] of fellow
  ]
end

to r-adjust
  ; random strategy changes max-moves to a random number x if it's not at the wall
  ; where 0 < x < max-dist
  ; if it is at the target, it stops changing.
  ifelse abs pxcor > 0 [
    set best-max-moves (random max-dist)
  ] [
    set best-max-moves (max-dist / 2) - 1
  ]
end


; Copyright 2005 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings snapToGrid="true"/><hubnet/></model>
