<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

This model is based on the classic arcade game, Frogger.  The object of the game is to get the frog, found at the bottom of the view, across the traffic and river to a safe lily pad on the other side.

## HOW IT WORKS

There are two main obstacles to overcome, the road and the river.  The road has cars and trucks moving at various speeds that are liable to run over the frog.  Once you have crossed the road safely, you must overcome the danger lurking in the river.  Unfortunately, you will die if you jump in the river, so you must keep moving towards the lily pads by jumping on the logs or sets of turtles moving back and forth in the river's current.

You must also avoid getting pushed off the edge by a log or turtle.  In addition, in the later levels, some of the turtles will dive under water -- if you happen to be standing on them you will drown!  Finally, you must also get across the board before the allotted amount of time runs out.

## HOW TO USE IT

Buttons

- NEW-GAME resets the game
- START starts the game
- The direction buttons (UP, DOWN, LEFT, RIGHT) will move your frog in that direction

Monitors

- FROGS LEFT tells you how many remaining lives you have
- LEVEL monitors the current level you are playing
- TIME LEFT shows you how much time remains
- FROG JUMPS tells you how many jumps you has taken

Sliders

- START-LIVES will determine how many lives you will start with
- START-TIME sets how much time you start out with
- START-LEVEL is used to determine which level you will start on

Cast of characters:

- Green frog: This is you.
- Truck: Avoid at all costs.  They are usually pretty slow.
- Car: Avoid at all costs.  They are usually fast.
- Brown squares: This is a log.  You need to jump onto these to get across the river.
- Turtle: You need to jump onto these.  Avoid ones that dive.
- Green circles: These are lily pads.  You want to get on these to win the level.
- Blue squares: This is the river.  You can't land on this.
- Gray squares: This is the road.  You can jump on this, but watch out for vehicles.

- Green Patches:   This is grass.  You are pretty safe here.

## THINGS TO TRY

See if you can get through all of the levels.

Try to beat your previous time.

Try to make as few jumps as possible in the time allotted.

Try to use as few lives as possible.

## THINGS TO NOTICE

Determine how many jumps it would take to get across the board without obstacles.

Determine how many jumps it would take to get across the board with obstacles.

How does each of the two questions above relate to the time it takes you to complete a level?

If you take just as many jumps with obstacles as without, why does it take different durations of time to get across?

## EXTENDING THE MODEL

Write your own levels by altering the code in the Code tab.

Add some bonuses or additional hazards.

Implement a scoring system.

Write a robot script that will move your frog automatically.

## NETLOGO FEATURES

This model uses breeds to implement the different moving game pieces.

The `every` command is used to control the speed of the game.

The `user-message` command presents messages to the user.

`mouse-down?`, `mouse-xcor`, and `mouse-ycor` are used to detect and handle mouse clicks.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (2002).  NetLogo Frogger model.  http://ccl.northwestern.edu/netlogo/models/Frogger.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2002 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227.

<!-- 2002 -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="false" fontSize="10" bottom="359" right="664" top="10" left="316"><dimensions maxPycor="8" minPycor="-8" maxPxcor="8" minPxcor="-8" wrapInY="false" wrapInX="true" patchSize="20.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button actionKey="J" ticksEnabled="true" forever="false" bottom="381" right="172" top="344" left="105"><source><![CDATA[set action 1]]></source><display><![CDATA[LEFT]]></display></button><button actionKey="L" ticksEnabled="true" forever="false" bottom="381" right="303" top="344" left="236"><source><![CDATA[set action 2]]></source><display><![CDATA[RIGHT]]></display></button><button actionKey="I" ticksEnabled="true" forever="false" bottom="344" right="237" top="307" left="171"><source><![CDATA[set action 4]]></source><display><![CDATA[UP]]></display></button><button actionKey="K" ticksEnabled="true" forever="false" bottom="381" right="236" top="344" left="172"><source><![CDATA[set action 3]]></source><display><![CDATA[DOWN]]></display></button><button actionKey="N" ticksEnabled="false" forever="false" bottom="57" right="126" top="24" left="23"><source><![CDATA[setup]]></source><display><![CDATA[New Game]]></display></button><button actionKey="S" ticksEnabled="true" forever="true" bottom="56" right="272" top="23" left="169"><source><![CDATA[go]]></source><display><![CDATA[Start]]></display></button><monitor precision="0" fontSize="11" bottom="125" right="281" top="80" left="168"><source><![CDATA[lives]]></source><display><![CDATA[Frogs Left]]></display></monitor><monitor precision="0" fontSize="11" bottom="176" right="281" top="131" left="168"><source><![CDATA[level]]></source><display><![CDATA[Level]]></display></monitor><monitor precision="3" fontSize="11" bottom="227" right="281" top="182" left="168"><source><![CDATA[time-left]]></source><display><![CDATA[Time Left]]></display></monitor><slider direction="horizontal" default="5.0" bottom="113" right="157" top="80" left="8"><maximum><![CDATA[5]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[start-lives]]></variable></slider><slider direction="horizontal" default="60.0" bottom="213" right="157" top="180" left="8"><maximum><![CDATA[60]]></maximum><minimum><![CDATA[10]]></minimum><step><![CDATA[5]]></step><variable><![CDATA[start-time]]></variable></slider><slider direction="horizontal" default="1.0" bottom="162" right="157" top="129" left="8"><maximum><![CDATA[5]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[start-level]]></variable></slider><monitor precision="0" fontSize="11" bottom="278" right="281" top="233" left="168"><source><![CDATA[jumps]]></source><display><![CDATA[Frog Jumps]]></display></monitor></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="car"><elements><rect marked="true" filled="true" color="#8D8D8D" height="248" width="150" y="30" x="75"/><polygon marked="true" filled="true" color="#8D8D8D" points="75,28 91,14 211,16 225,30 211,54 79,38"/><rect marked="false" filled="true" color="#54C4C4" height="14" width="116" y="114" x="93"/><rect marked="false" filled="true" color="#54C4C4" height="8" width="108" y="232" x="97"/><line marked="false" filled="false" color="#000000" y2="212" x2="97" y1="144" x1="97"/><line marked="false" filled="false" color="#000000" y2="208" x2="203" y1="146" x1="203"/><line marked="false" filled="false" color="#000000" y2="36" x2="199" y1="36" x1="99"/><line marked="false" filled="false" color="#000000" y2="98" x2="201" y1="36" x1="201"/><line marked="false" filled="false" color="#000000" y2="92" x2="97" y1="36" x1="97"/><line marked="false" filled="false" color="#000000" y2="68" x2="121" y1="92" x1="97"/><line marked="false" filled="false" color="#000000" y2="68" x2="171" y1="68" x1="121"/><line marked="false" filled="false" color="#000000" y2="68" x2="177" y1="68" x1="171"/><line marked="false" filled="false" color="#000000" y2="90" x2="199" y1="68" x1="177"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="12" y="92" x="195"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="6" y="94" x="199"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="100" y="39" x="99"/><line marked="false" filled="false" color="#000000" y2="91" x2="183" y1="91" x1="111"/><circle marked="false" filled="true" color="#EDED31" diameter="16" cy="13" cx="75"/><circle marked="false" filled="true" color="#EDED31" diameter="16" cy="15" cx="209"/><polygon marked="true" filled="true" color="#8D8D8D" points="75,27 89,15 109,15 109,31"/><polygon marked="true" filled="true" color="#8D8D8D" points="91,23 79,27 81,31"/><polygon marked="true" filled="true" color="#8D8D8D" points="209,15 225,31 219,37 187,27"/><circle marked="false" filled="true" color="#EDED31" diameter="12" cy="13" cx="211"/><polygon marked="true" filled="true" color="#8D8D8D" points="209,15 221,27 203,29"/><line marked="false" filled="false" color="#000000" y2="39" x2="99" y1="37" x1="99"/><line marked="false" filled="false" color="#000000" y2="35" x2="99" y1="91" x1="99"/><circle marked="false" filled="true" color="#EDED31" diameter="13" cy="11" cx="75"/><line marked="false" filled="false" color="#000000" y2="91" x2="199" y1="37" x1="199"/><rect marked="true" filled="true" color="#8D8D8D" height="62" width="8" y="33" x="90"/><circle marked="false" filled="true" color="#EDED31" diameter="12" cy="15" cx="211"/><rect marked="true" filled="true" color="#8D8D8D" height="64" width="10" y="31" x="195"/><line marked="false" filled="false" color="#000000" y2="89" x2="195" y1="37" x1="195"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="8" y="35" x="93"/><rect marked="true" filled="true" color="#8D8D8D" height="62" width="8" y="33" x="191"/><rect marked="true" filled="true" color="#8D8D8D" height="10" width="6" y="33" x="95"/><rect marked="true" filled="true" color="#8D8D8D" height="12" width="6" y="31" x="97"/><rect marked="false" filled="true" color="#D73229" height="4" width="12" y="273" x="77"/><rect marked="false" filled="true" color="#D73229" height="4" width="12" y="273" x="211"/><rect marked="false" filled="true" color="#D73229" height="6" width="20" y="269" x="77"/><rect marked="false" filled="true" color="#D73229" height="6" width="16" y="271" x="205"/><rect marked="false" filled="true" color="#D73229" height="6" width="16" y="269" x="207"/><rect marked="false" filled="true" color="#D73229" height="6" width="8" y="269" x="87"/><rect marked="true" filled="true" color="#8D8D8D" height="50" width="130" y="39" x="87"/><rect marked="true" filled="true" color="#8D8D8D" height="76" width="116" y="23" x="89"/><rect marked="true" filled="true" color="#8D8D8D" height="50" width="86" y="61" x="128"/><rect marked="true" filled="true" color="#8D8D8D" height="80" width="70" y="31" x="77"/><rect marked="false" filled="true" color="#000000" height="2" width="120" y="15" x="89"/><rect marked="false" filled="true" color="#000000" height="2" width="120" y="17" x="91"/><rect marked="true" filled="true" color="#8D8D8D" height="62" width="122" y="51" x="91"/><rect marked="true" filled="true" color="#8D8D8D" height="12" width="146" y="265" x="77"/><rect marked="true" filled="true" color="#8D8D8D" height="8" width="102" y="16" x="97"/><rect marked="false" filled="true" color="#000000" height="6" width="98" y="22" x="99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="frog"><elements><polygon marked="false" filled="true" color="#59B03C" points="149,12 115,32 89,60 75,134 89,210 131,224 149,224 169,224 211,210 225,134 209,56 179,26 149,12"/><polygon marked="false" filled="true" color="#59B03C" points="93,60 35,72 17,114 33,118 47,80 87,74"/><polygon marked="false" filled="true" color="#59B03C" points="81,180 43,214 67,260 85,258 57,216 85,192"/><polygon marked="false" filled="true" color="#59B03C" points="209,62 261,68 283,110 267,110 253,78 211,72 209,62"/><polygon marked="false" filled="true" color="#59B03C" points="219,172 261,212 231,260 215,250 245,216 215,184"/><circle marked="false" filled="true" color="#FFFFFF" diameter="23" cy="41" cx="112"/><circle marked="false" filled="true" color="#FFFFFF" diameter="23" cy="40" cx="165"/><circle marked="false" filled="true" color="#000000" diameter="8" cy="48" cx="119"/><circle marked="false" filled="true" color="#000000" diameter="8" cy="48" cx="173"/><polygon marked="true" filled="true" color="#8D8D8D" points="149,11 115,33 87,59 31,69 11,119 35,125 49,89 85,83 75,133 81,179 39,215 65,263 87,259 61,215 83,193 87,209 127,223 171,223 211,211 217,185 239,215 209,249 231,263 263,209 217,169 225,131 215,73 251,85 263,115 287,115 263,63 207,53 179,25 149,11"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="log"><elements><rect marked="true" filled="true" color="#8D8D8D" height="300" width="300" y="0" x="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pad"><elements><polygon marked="false" filled="true" color="#345DA9" points="15,296 35,188 17,118 30,43 51,24 87,19 204,17 229,30 272,23 275,73 266,99 268,185 273,251 256,261 278,298"/><polygon marked="false" filled="true" color="#345DA9" points="205,17 260,24 272,251 267,281 209,223"/><circle marked="false" filled="true" color="#59B03C" diameter="65" cy="124" cx="51"/><circle marked="false" filled="true" color="#59B03C" diameter="120" cy="180" cx="73"/><circle marked="false" filled="true" color="#2CD13B" diameter="143" cy="39" cx="102"/><circle marked="false" filled="true" color="#59B03C" diameter="91" cy="127" cx="172"/><circle marked="false" filled="true" color="#2CD13B" diameter="74" cy="168" cx="34"/><circle marked="false" filled="true" color="#2CD13B" diameter="82" cy="207" cx="177"/><circle marked="false" filled="true" color="#59B03C" diameter="79" cy="25" cx="46"/><rect marked="false" filled="true" color="#345DA9" height="285" width="23" y="13" x="9"/><polygon marked="false" filled="true" color="#345DA9" points="42,175 32,204 25,159"/><rect marked="false" filled="true" color="#345DA9" height="31" width="18" y="13" x="24"/><rect marked="false" filled="true" color="#345DA9" height="6" width="246" y="13" x="29"/><rect marked="false" filled="true" color="#345DA9" height="286" width="20" y="13" x="264"/><rect marked="false" filled="true" color="#345DA9" height="8" width="274" y="296" x="10"/><polygon marked="false" filled="true" color="#59B03C" points="111,295 155,295 148,298"/><polygon marked="false" filled="true" color="#59B03C" points="110,296 145,298"/><polygon marked="false" filled="true" color="#59B03C" points="144,298 115,299 109,295 110,290"/><polygon marked="false" filled="true" color="#345DA9" points="102,17 82,22 41,35 35,19 39,15"/><polygon marked="false" filled="true" color="#345DA9" points="215,15 271,15 267,29"/><polygon marked="false" filled="true" color="#345DA9" points="214,17 240,14 243,23 223,25"/><rect marked="false" filled="true" color="#345DA9" height="324" width="263" y="18" x="16"/><circle marked="false" filled="true" color="#2CD13B" diameter="119" cy="44" cx="29"/><circle marked="false" filled="true" color="#59B03C" diameter="168" cy="138" cx="50"/><circle marked="false" filled="true" color="#2CD13B" diameter="101" cy="149" cx="170"/><circle marked="false" filled="true" color="#59B03C" diameter="123" cy="29" cx="129"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="splash"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="147,119 96,57 55,64 29,69 68,71 110,87"/><polygon marked="false" filled="true" color="#FFFFFF" points="115,134 56,137 28,166 71,149"/><polygon marked="false" filled="true" color="#FFFFFF" points="195,131 249,93 271,125 235,128"/><polygon marked="false" filled="true" color="#FFFFFF" points="169,171 222,187 250,251 215,196"/><polygon marked="false" filled="true" color="#FFFFFF" points="134,161 78,205 85,260 98,206"/><circle marked="false" filled="true" color="#FFFFFF" diameter="72" cy="110" cx="111"/><polygon marked="false" filled="true" color="#FFFFFF" points="148,110 195,127 207,154 153,183 101,159 111,132"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="truck"><elements><rect marked="false" filled="true" color="#000000" height="136" width="210" y="60" x="45"/><polygon marked="false" filled="true" color="#000000" points="45,58 75,28 225,28 255,58 235,90 63,90"/><rect marked="false" filled="true" color="#54C4C4" height="10" width="146" y="50" x="77"/><rect marked="false" filled="true" color="#000000" height="22" width="60" y="194" x="121"/><rect marked="false" filled="true" color="#000000" height="32" width="60" y="196" x="121"/><rect marked="false" filled="true" color="#FFFFFF" height="78" width="210" y="224" x="45"/><rect marked="true" filled="true" color="#8D8D8D" height="88" width="210" y="224" x="45"/><rect marked="false" filled="true" color="#FFFFFF" height="78" width="208" y="224" x="45"/><polygon marked="true" filled="true" color="#8D8D8D" points="45,196 253,196 253,54 225,26 77,26 43,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="43,60 43,196 75,196 75,56 43,60"/><rect marked="false" filled="true" color="#54C4C4" height="10" width="142" y="40" x="79"/><circle marked="false" filled="true" color="#000000" diameter="20" cy="168" cx="51"/><circle marked="false" filled="true" color="#000000" diameter="20" cy="168" cx="221"/><rect marked="false" filled="true" color="#FFFFFF" height="88" width="52" y="224" x="203"/><polygon marked="true" filled="true" color="#8D8D8D" points="233,196 255,196 255,56 225,26 245,170 245,190"/><rect marked="false" filled="true" color="#54C4C4" height="16" width="142" y="40" x="79"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="truck rear"><elements><rect marked="false" filled="true" color="#FFFFFF" height="282" width="210" y="0" x="45"/><rect marked="true" filled="true" color="#8D8D8D" height="282" width="210" y="0" x="45"/><rect marked="false" filled="true" color="#FFFFFF" height="282" width="210" y="0" x="45"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><circle marked="false" filled="true" color="#59B03C" diameter="124" cy="52" cx="90"/><circle marked="false" filled="true" color="#59B03C" diameter="119" cy="70" cx="90"/><circle marked="false" filled="true" color="#59B03C" diameter="112" cy="129" cx="94"/><polygon marked="false" filled="true" color="#59B03C" points="91,99 93,187 207,187 213,112 91,99"/><polygon marked="true" filled="true" color="#8D8D8D" points="149,14 123,27 126,53 129,57 151,52 174,57 182,28"/><polygon marked="true" filled="true" color="#8D8D8D" points="95,85 51,76 48,101 89,101"/><polygon marked="true" filled="true" color="#8D8D8D" points="93,191 54,212 76,235 99,206"/><polygon marked="true" filled="true" color="#8D8D8D" points="207,88 248,65 257,98"/><polygon marked="true" filled="true" color="#8D8D8D" points="252,96 207,98 208,88 245,84"/><polygon marked="true" filled="true" color="#8D8D8D" points="206,188 250,204 240,233 200,201 206,188"/><circle marked="false" filled="true" color="#000000" diameter="7" cy="30" cx="133"/><circle marked="false" filled="true" color="#000000" diameter="6" cy="30" cx="161"/><line marked="true" filled="false" color="#8D8D8D" y2="192" x2="149" y1="79" x1="149"/><line marked="true" filled="false" color="#8D8D8D" y2="190" x2="117" y1="89" x1="116"/><line marked="true" filled="false" color="#8D8D8D" y2="184" x2="190" y1="89" x1="190"/><line marked="true" filled="false" color="#8D8D8D" y2="189" x2="190" y1="192" x1="118"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="145" y1="89" x1="117"/><line marked="true" filled="false" color="#8D8D8D" y2="93" x2="190" y1="80" x1="151"/><line marked="true" filled="false" color="#8D8D8D" y2="113" x2="148" y1="122" x1="117"/><line marked="true" filled="false" color="#8D8D8D" y2="122" x2="185" y1="113" x1="151"/><line marked="true" filled="false" color="#8D8D8D" y2="158" x2="185" y1="160" x1="119"/><line marked="true" filled="false" color="#8D8D8D" y2="136" x2="146" y1="145" x1="120"/><line marked="true" filled="false" color="#8D8D8D" y2="143" x2="188" y1="136" x1="146"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[extensions [ sound ]

breed [ trucks truck ]
breed [ cars car ]
breed [ logs a-log ]
breed [ river-turtles river-turtle ]
breed [ pads pad ]
breed [ frogs frog ] ;; These are all the game pieces.

;;;;;;;;;;;;;;;
;; Variables ;;
;;;;;;;;;;;;;;;

globals [
  action            ;; Last button pressed. Prevent the player from moving the frog until the
                    ;; the game is running.  Checks the status of this button every loop.
  dead?             ;; True when no frog lives are left - used to stop the game
  lives             ;; Remaining lives
  level             ;; Current level
  jumps             ;; Current number of jumps
  time-left         ;; Time remaining
  pads-done         ;; Number of frogs that have successfully reached the pads
]

;; In NetLogo, all the breeds are "turtles".  This can be confusing because
;; there are also "turtles" in the game of Frogger -- they swim in the river.
;; To avoid confusion, we call those turtles "river-turtles".

turtles-own [
  speed            ;; The 'time' variable will be initialized to the value of 'speed' after the turtle moves
  time             ;; This keeps track of how many time loops have occurred since the turtle last moved.
                   ;; It actually counts down from 'speed' to zero.  Once it reaches zero, the turtle
                   ;; moves forward one space
]

river-turtles-own [
  dive?            ;; True when the turtle dives
]

;;;;;;;;;;;;;;;;;;;;;;;;
;;; Setup Procedures ;;;
;;;;;;;;;;;;;;;;;;;;;;;;

to startup            ;; Setup is the 'New Game' button, this will setup the game.
  setup
end

to setup              ;; Initializes the game
  clear-all
  set action 0
  set dead? false
  set lives start-lives
  set-default-shape frogs "frog"
  set-default-shape cars "car"
  set-default-shape logs "log"
  set-default-shape river-turtles "turtle"
  set level start-level
  next-level
  reset-ticks
end

to next-level        ;; This will call the appropriate level procedure, where the level is created
  draw-map
  if ( level = 1 )
    [ level-1 ]
  if ( level = 2 )
    [ level-2 ]
  if ( level = 3 )
    [ level-3 ]
  if ( level = 4 )
    [ level-4 ]
  if ( level = 5 )
    [ level-5 ]
  if ( level = 6 )
    [ user-message "Actually, that was the last level.\nPerhaps you should program some more :-)"
      set dead? true]
end

;; This will color the patches to make the grass, road, and river, and creates the frog.
;; The second line causes the grass to be various similar shades of green so it looks
;; more like real grass.

to draw-map
  clear-patches
  clear-turtles
  ask patches
    [ set pcolor scale-color green ((random 500) + 5000) 0 9000 ]
  setup-pads
  ask patches with [pycor <= max-pycor and pycor >= 3]
    [ set pcolor blue ]
  ask patches with [pycor <= -1 and pycor >= -5]
    [ set pcolor gray ]
  set pads-done 0
  create-frogs 1
    [ set color 53
      reset-frog
    ]
end

;; Initializes the frog by setting it to the right patch and facing the right direction

to reset-frog
  setxy 0 min-pycor
  set heading 0
  set jumps 0
  set time-left start-time
end

;; Creates the five pads equally spaced at the top of the board.
;; The second line uses the modulus operation to determine which x-cor
;; is divisible by three.  This is an easy way to have a pad created every
;; three patches.

to setup-pads
  set-default-shape pads "pad"
  ask patches with [pycor = max-pycor and pxcor mod 3 = 0]
    [ sprout-pads 1 ]
end

to create-truck [ x y direction quickness ]   ;; Creates and initializes a truck
  let truck-color (random 13 + 1) * 10 + 3
  ask patches with [(pxcor = x or pxcor = (x + 1)) and pycor = y]
    [ sprout-trucks 1
        [ set color truck-color
          set heading direction
          set speed quickness
          set time speed
          ifelse ((pxcor = x) xor (direction = 90))
            [ set shape "truck" ]
            [ set shape "truck rear" ]
        ]
    ]
end

to create-car [x y direction quickness]     ;; Creates and initializes a car
  create-cars 1
    [ set color (random 13 + 1) * 10 + 3
      setxy x y
      set heading direction
      set speed quickness
      set time speed
    ]
end

;; Creates and initializes a log.

to create-log [x y leng quickness]
  ask patches with [pycor = y and pxcor >= x and pxcor < (x + leng)]
    [ sprout-logs 1
        [ set color brown
          set heading 90
          set speed quickness
          set time speed
        ]
    ]
end

to create-river-turtle [x y leng quickness]    ;; Creates and initializes a river-turtle
  ask patches with [pycor = y and pxcor >= x and pxcor < (x + leng)]
    [ sprout-river-turtles 1
        [ set heading 270
          set speed quickness
          set time speed
          set color 54
          set dive? false
        ]
    ]
end

to make-river-turtle-dive [num]    ;; Causes a random river-turtle(s) to dive underwater.
  repeat num
    [ ask one-of river-turtles with [not dive?]
        [ set dive? true ]
    ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Runtime Procedures ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;


to go            ;; The main procedure
  if dead?
    [ stop ]
  move
end

;; This is the time loop: every 0.1 seconds it decrements every turtle's 'time'
;; variable and check to see if it should move (when it reaches zero).  It then will
;; reset the 'time' if it is zero.  The logs and river-turtles need their own special
;; procedure to move since they "carry" the frog with them.

to move
  move-frog
  every 0.1
    [ ask turtles
        [ decrement-time ]
      ask turtles with [time = 0.0 and breed != frogs]
        [ set time speed
          ifelse (breed = logs)
            [ move-log ]
            [ ifelse (breed = river-turtles)
                [ move-river-turtle ]
                [ fd 1 ]
            ]
        ]
      check-frog
    ]
  display
end

;; This will decrement the 'time' for all non-frogs and it will decrement the 'time-left'
;; global variable.  The precision function is needed to verify there is only one decimal
;; place on the time variables.

to decrement-time
  ifelse (breed = frogs)
    [ set time-left precision (time-left - 0.1) 1 ]
    [ set time precision (time - 0.1) 1 ]
end

;;  Every time loop, we need to see what the frog's status is (dead, on a pad, etc..)
;;  First it will need to see if it is on a pad and make sure there are no other frogs there
;;  (by checking the shape of the the pad).  Then you need to check to see if the frog is in
;;  a space where he should die.  Finally, it checks to see if the level is complete.

to check-frog
  ask frogs
    [ if any? pads-here with [shape = "pad"]
        [ sound:play-drum "CRASH CYMBAL 2" 97
          ask pads-here
            [ set shape "frog"
              set heading 0
              set color 54
              set pads-done (pads-done + 1)
            ]
          reset-frog
        ]
      if ((any? trucks-here) or (any? cars-here) or (time-left <= 0) or
         ((pcolor = blue) and
          (count pads-here = 0) and
          (count logs-here = 0) and
          (count river-turtles-here with [not hidden?] = 0)))
        [ kill-frog ]
    ]
  if ( pads-done = 5 )
    [ set level (level + 1)
      set pads-done 0
      user-message (word "Congrats, all your frogs are safe!\nOn to level " level "...")
      next-level
    ]
end

to kill-frog        ;; This is called when the frog dies, checks if the game is over
  set lives (lives - 1)
  ifelse (lives = 0)
    [ user-message "Your frog died!\nYou have no more frogs!\nGAME OVER!"
      set dead? true
      die
    ]
    [ user-message (word "Your frog died!\nYou have " lives " frogs left.")
      reset-frog
    ]
end

;; This is a special procedure to move a log.  It needs to move any frogs that
;; are on top of it.

to move-log
  ask frogs-here
    [ if (pxcor != max-pxcor)
        [ set xcor xcor + 1 ]
    ]
  fd 1
end

;; This is a special procedure to move the river-turtles.  It needs to move any frogs that
;; are on top of it.

to move-river-turtle
  fd 1
  ask frogs-at 1 0
    [ set xcor xcor - 1
      if (xcor = max-pxcor)
        [ set xcor xcor + 1 ]
    ]
  dive-river-turtle
end

;; If a river-turtle has been instructed to dive, this procedure will implement that.
;; It will also cause it to splash and rise back up.  It uses a random numbers to
;; determine when it should dive and rise back up.  Theoritically, it will dive about
;; every eighth move and stay down for about five moves, but this isn't always the case
;; (the randomness is added for increasing the challenge of the game)

to dive-river-turtle
  if dive?
    [ ifelse (hidden? and random 5 = 1)
        [ show-turtle ]
        [ if ( shape = "splash" )
            [ set shape "turtle"
              hide-turtle
            ]
          if (shape = "turtle" and random 8 = 1)
            [ set shape "splash" ]
        ]
    ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Interface Procedures ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to move-frog
  if (action != 0)
    [ if (action = 1)
        [ move-left ]
      if (action = 2)
        [ move-right ]
      if (action = 3)
        [ move-down ]
      if (action = 4)
        [ move-up ]
      sound:play-drum "LONG GUIRO" 50
      set action 0
    ]
end

to move-left
  ask frogs with [xcor != min-pxcor]
    [ set heading 270
      fd 1
      set jumps ( jumps + 1 )
    ]
  check-frog
end

to move-right
  ask frogs with [xcor != max-pxcor]
    [ set heading 90
      fd 1
      set jumps ( jumps + 1 )
    ]
  check-frog
end

to move-up
  ask frogs with [ycor != max-pycor]
    [ set heading 0
      fd 1
      set jumps ( jumps + 1 )
    ]
  check-frog
end

to move-down
  ask frogs with [ycor != min-pycor]
    [ set heading 180
      fd 1
      set jumps ( jumps + 1 )
    ]
  check-frog
end


;;;;;;;;;;;;;;
;;; Levels ;;;
;;;;;;;;;;;;;;

to level-1
  create-truck 5 -5 270 .9
  create-truck 0 -5 270 .9
  create-truck -8 -4 90 .9
  create-truck -5 -4 90 .9
  create-truck 2 -4 90 .9
  create-truck -3 -3 270 .8
  create-truck 6 -3 270 .8
  create-car 0 -2 90 .4
  create-car -4 -2 90 .4
  create-car 8 -1 270 .2
  create-car 3 -1 270 .2
  create-log 4 3 3 .6
  create-log -8 3 5 .6
  create-log 4 5 2 .7
  create-log -4 5 3 .7
  create-log 1 7 4 .3
  create-log -6 7 4 .3
  create-river-turtle 2 4 2 .4
  create-river-turtle -4 4 4 .4
  create-river-turtle 5 4 4 .4
  create-river-turtle -3 6 4 .5
  create-river-turtle 7 6 3 .5
end

to level-2
  create-truck 4 -5 270 .8
  create-truck -3 -5 270 .8
  create-truck 0 -4 90 .9
  create-truck -4 -4 90 .9
  create-truck -1 -3 270 .8
  create-truck 4 -3 270 .8
  create-truck -5 -3 270 .8
  create-car 0 -2 90 .2
  create-car -4 -2 90 .2
  create-car 8 -2 90 .2
  create-car 6 -1 270 .4
  create-car 2 -1 270 .4
  create-car -3 -1 270 .4
  create-car -6 -1 270 .4
  create-log 6 3 3 .6
  create-log -4 3 4 .6
  create-log 0 5 3 .3
  create-log -6 5 3 .3
  create-log 1 7 4 .5
  create-log 6 7 4 .5
  create-river-turtle 0 4 4 .3
  create-river-turtle 6 4 4 .3
  create-river-turtle 0 6 4 .4
  create-river-turtle 6 6 3 .4
  make-river-turtle-dive 1
end

to level-3
  create-truck -8 -5 270 .7
  create-truck -4 -5 270 .7
  create-truck 0 -5 270 .7
  create-truck -2 -4 90 .7
  create-truck 2 -4 90 .7
  create-truck -6 -4 90 .7
  create-truck -4 -3 270 .7
  create-truck 0 -3 270 .7
  create-truck 4 -3 270 .7
  create-car -3 -2 90 .2
  create-car -5 -2 90 .2
  create-car 5 -2 90 .2
  create-car 1 -2 90 .2
  create-car 0 -1 270 .3
  create-car 5 -1 270 .3
  create-car -7 -1 270 .3
  create-car -3 -1 270 .3
  create-log -6 3 4 .4
  create-log -2 5 3 .4
  create-log 5 5 3 .4
  create-log -4 7 2 .2
  create-log 0 7 2 .2
  create-log 4 7 2 .2
  create-river-turtle -4 4 4 .3
  create-river-turtle 5 4 4 .3
  create-river-turtle -1 6 3 .4
  create-river-turtle -8 6 3 .4
  make-river-turtle-dive 3
end

to level-4
  create-truck -8 -5 270 .5
  create-truck -2 -5 270 .5
  create-truck 6 -5 270 .5
  create-truck 4 -4 90 .6
  create-truck -1 -4 90 .6
  create-truck -6 -4 90 .6
  create-car -4 -3 270 .3
  create-car 0 -3 270 .3
  create-car 4 -3 270 .3
  create-car 7 -3 270 .3
  create-car -3 -2 90 .2
  create-car -5 -2 90 .2
  create-car 5 -2 90 .2
  create-car 1 -2 90 .2
  create-car 0 -1 270 .3
  create-car 5 -1 270 .3
  create-car -7 -1 270 .3
  create-car -3 -1 270 .3
  create-log -3 3 3 .3
  create-log -3 5 3 .3
  create-log -3 7 3 .3
  create-river-turtle -4 4 4 .3
  create-river-turtle 4 4 4 .3
  create-river-turtle -7 4 1 .3
  create-river-turtle -1 6 3 .4
  create-river-turtle -8 6 3 .4
  create-river-turtle 3 6 2 .4
  make-river-turtle-dive 4
end

to level-5
  create-car -4 -5 270 .3
  create-car 0 -5 270 .3
  create-car 4 -5 270 .3
  create-car 7 -5 270 .3
  create-car -3 -4 90 .2
  create-car -5 -4 90 .2
  create-car 5 -4 90 .2
  create-car 1 -4 90 .2
  create-car 8 -4 90 .2
  create-car -4 -3 270 .3
  create-car 0 -3 270 .3
  create-car 4 -3 270 .3
  create-car 7 -3 270 .3
  create-car -3 -2 90 .2
  create-car -5 -2 90 .2
  create-car 4 -2 90 .2
  create-car 1 -2 90 .2
  create-car 7 -2 90 .2
  create-car 0 -1 270 .3
  create-car 5 -1 270 .3
  create-car -7 -1 270 .3
  create-car -3 -1 270 .3
  create-log -5 3 2 .2
  create-log 0 5 2 .1
  create-log -5 7 2 .2
  create-river-turtle -4 4 2 .3
  create-river-turtle 4 4 3 .3
  create-river-turtle -7 4 2 .3
  create-river-turtle -1 6 2 .3
  create-river-turtle -8 6 2 .3
  create-river-turtle 3 6 3 .3
  make-river-turtle-dive 5
end


; Copyright 2002 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings/><hubnet/></model>
