<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

Heatbugs is an abstract model of the behavior of biologically-inspired agents that attempt to maintain an optimum temperature around themselves.  It demonstrates how simple rules defining the behavior of agents can produce several different kinds of emergent behavior.

Heatbugs has been used as a demonstration model for many agent-based modeling toolkits. We provide a NetLogo version to assist users in learning and comparing different toolkits.  It demonstrates coding techniques in NetLogo and may be useful as a starting point for building other models.

While this NetLogo model attempts to match the Repast and Swarm versions (see "Credits" below), we haven't done a rigorous comparative analysis of the different versions, so it is possible that there are small inadvertent differences in the underlying rules and behavior.

## HOW IT WORKS

The bugs move around on a grid of square "patches".  A bug may not move to a patch that already has another bug on it.

Each bug radiates a small amount of heat.  Heat gradually diffuses through the world; some heat is lost to cooling.

Each bug has an "ideal" temperature it wants to be.  The bigger the difference between the temperature of the patch where the bug is and the bug's ideal temperature, the more "unhappy" the bug is.  When a bug is unhappy, it moves.  If it is too hot, it moves to the coolest adjacent empty patch.  Conversely, if a bug is too cold, it moves to the warmest adjacent empty patch.  (Note that these bugs aren't smart enough to always move to the best available patch.)

## HOW TO USE IT

After choosing the number of bugs to create, and setting the model variables, press the GO button to set the heatbugs into motion.

BUG-COUNT: The number of bugs that will inhabit the model

EVAPORATION-RATE: The percentage of the world's heat that evaporates each cycle.  A lower number means a world which cools slowly, a higher number is a world which cools quickly.

DIFFUSION-RATE: How much heat a patch (a spot in the world) diffuses to its neighbors.  A higher number means that heat diffuses through the world quickly.  A lower number means that patches retain more of their heat.

MIN/MAX-IDEAL-TEMP: The minimum and maximum ideal temperatures for heatbugs.  Each bug is given an ideal temperature between the min and max ideal temperature.

MIN/MAX-OUTPUT-HEAT: The minimum and maximum heat that heatbugs generate each cycle.  Each bug is given a output-heat value between the min and max output heat.

RANDOM-MOVE-CHANCE: The chance that a bug will make a random move even if it would prefer to stay where it is (because no more ideal patch is available).

DEEP-FREEZE: This button removes all heat from the world.

HEAT-UP: This button adds MAX-OUTPUT-HEAT to every patch in the world.

Beneath the view are two "Color By:" buttons.  The IDEAL-TEMP button colors the bugs according to their IDEAL-TEMP value.  Bugs with higher IDEAL-TEMP values will be brighter.  The HAPPINESS button does the same, but is based upon the HAPPINESS value of each agent, with happier bugs being brighter.

The WATCH-HAPPIEST and WATCH-SADDEST buttons will highlight the happiest or saddest bug at the time the button is pressed.

## THINGS TO NOTICE

Depending on their ideal temperatures, some bugs will tend to clump together, while others will tend to avoid all other bugs, and others still flutter around the edges of clumps.  All of these behaviors are affected as well by the evaporation rate.

The diffusion rate affects the cohesiveness of clumps.  If diffusion-rate is slow, many tiny clumps form.  Why?

Most interesting behaviors occur when the number of bugs, how much heat they generate, and how quickly the world cools are balanced such that excessive heat does not build up.

## THINGS TO TRY

Vary DIFFUSION-RATE.

Vary EVAPORATION-RATE in relation to the output-heat range of the bugs.

Use the HEAT-UP button to scramble clumped heatbugs and watch as they re-assemble into new clumps.

## EXTENDING THE MODEL

Randomize the amount of heat bugs generate each cycle.

Allow users to introduce heat into the system with the mouse.

## NETLOGO FEATURES

`n-of` and `sprout` together let us initially place each bug on its own patch with a minimum of code.

Notice how the code does not make any use of X and Y coordinates.  The `neighbors` and `move-to` primitives take care of sensing and motion on a toroidal grid without the need for any explicit coordinate math.

The `diffuse` command is used to diffuse the heat around the patch grid.

## RELATED MODELS

Slime

## CREDITS AND REFERENCES

Swarm version of Heatbugs -- https://web.archive.org/web/20130211011213/http://www.swarm.org/wiki/Examples_of_Swarm_applications

RePast version of Heatbugs -- http://repast.sourceforge.net/repast_3/examples/

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (2004).  NetLogo Heatbugs model.  http://ccl.northwestern.edu/netlogo/models/Heatbugs.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2004 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227.

<!-- 2004 -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="10" bottom="419" right="779" top="10" left="371"><dimensions maxPycor="99" minPycor="0" maxPxcor="99" minPxcor="0" wrapInY="true" wrapInX="true" patchSize="4.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><slider direction="horizontal" default="100.0" bottom="63" right="276" top="30" left="14"><maximum><![CDATA[500]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><units><![CDATA[bugs]]></units><variable><![CDATA[bug-count]]></variable></slider><button ticksEnabled="false" forever="false" bottom="210" right="96" top="177" left="27"><source><![CDATA[setup]]></source></button><button ticksEnabled="true" forever="true" bottom="210" right="166" top="177" left="98"><source><![CDATA[go]]></source></button><slider direction="horizontal" default="0.01" bottom="269" right="357" top="236" left="164"><maximum><![CDATA[1]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[0.01]]></step><variable><![CDATA[evaporation-rate]]></variable></slider><slider direction="horizontal" default="0.9" bottom="303" right="357" top="270" left="164"><maximum><![CDATA[1]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[0.1]]></step><variable><![CDATA[diffusion-rate]]></variable></slider><slider direction="horizontal" default="0.0" bottom="338" right="357" top="305" left="164"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1.0]]></step><units><![CDATA[%]]></units><variable><![CDATA[random-move-chance]]></variable></slider><plot bottom="513" right="358" top="354" left="14" ymax="10.0" ymin="0.0" xmax="100.0" xmin="0.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Avg. Bug Unhappiness]]></display><xAxis><![CDATA[time]]></xAxis><yAxis><![CDATA[unhappiness]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-16777216" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plot mean [unhappiness] of turtles]]></update><display><![CDATA[default]]></display></pen></pens></plot><slider direction="horizontal" default="10.0" bottom="102" right="186" top="69" left="14"><maximum><![CDATA[200]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[min-ideal-temp]]></variable></slider><slider direction="horizontal" default="40.0" bottom="135" right="186" top="102" left="14"><maximum><![CDATA[200]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[max-ideal-temp]]></variable></slider><slider direction="horizontal" default="25.0" bottom="135" right="362" top="102" left="189"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[max-output-heat]]></variable></slider><slider direction="horizontal" default="5.0" bottom="102" right="362" top="69" left="189"><maximum><![CDATA[100]]></maximum><minimum><![CDATA[0]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[min-output-heat]]></variable></slider><button ticksEnabled="false" forever="false" bottom="210" right="271" top="177" left="179"><source><![CDATA[deep-freeze]]></source></button><button ticksEnabled="false" forever="false" bottom="210" right="362" top="177" left="274"><source><![CDATA[heat-up]]></source></button><textbox transparent="false" color="#000000" fontSize="11" bottom="28" right="160" top="10" left="10"><display><![CDATA[Initial settings for bugs]]></display></textbox><textbox transparent="false" color="#000000" fontSize="11" bottom="258" right="140" top="230" left="13"><display><![CDATA[Other parameters]]></display></textbox><textbox transparent="false" color="#000000" fontSize="11" bottom="174" right="162" top="156" left="12"><display><![CDATA[Actions]]></display></textbox><textbox transparent="false" color="#000000" fontSize="11" bottom="280" right="153" top="251" left="12"><display><![CDATA[(OK to change
during run)]]></display></textbox><button ticksEnabled="false" forever="false" bottom="478" right="568" top="445" left="462"><source><![CDATA[set color-by-unhappiness? false
ask turtles [ color-by-ideal-temp ]]]></source><display><![CDATA[ideal-temp]]></display></button><button ticksEnabled="false" forever="false" bottom="478" right="689" top="445" left="573"><source><![CDATA[set color-by-unhappiness? true]]></source><display><![CDATA[happiness]]></display></button><textbox transparent="false" color="#000000" fontSize="11" bottom="483" right="459" top="453" left="376"><display><![CDATA[Color bug by:]]></display></textbox><button ticksEnabled="true" forever="false" bottom="514" right="569" top="481" left="462"><source><![CDATA[watch max-one-of turtles [ unhappiness ]]]></source><display><![CDATA[watch saddest]]></display></button><button ticksEnabled="true" forever="false" bottom="514" right="691" top="481" left="573"><source><![CDATA[watch min-one-of turtles [ unhappiness ]]]></source><display><![CDATA[watch happiest]]></display></button><button ticksEnabled="false" forever="false" bottom="514" right="831" top="481" left="694"><source><![CDATA[reset-perspective]]></source></button></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="300" width="300" y="0" x="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[globals [ color-by-unhappiness? ]

turtles-own
[
  ideal-temp       ;; The temperature I want to be at
  output-heat      ;; How much heat I emit per time step
  unhappiness      ;; The magnitude of the difference between my ideal
                   ;;   temperature and the actual current temperature here
]

patches-own
[
  temp             ;; short for "temperature"
]

to setup
  clear-all
  set color-by-unhappiness? false

  ;; creating the bugs the following way ensures that we won't
  ;; wind up with more than one bug on a patch
  ask n-of bug-count patches [
    sprout 1 [
      set ideal-temp  min-ideal-temp  + random (max-ideal-temp  - min-ideal-temp)
      set output-heat min-output-heat + random (max-output-heat - min-output-heat)
      set unhappiness abs (ideal-temp - temp)
      color-by-ideal-temp
      face one-of neighbors
      set size 2  ;; easier to see
    ]
  ]
  ;; plot the initial state of the system
  reset-ticks
end

to color-by-ideal-temp
  ;; when scaling the color of turtles, adjust the value
  ;; range by this amount to avoid turtles being too dark or too light.
  let range-adjustment ( max-ideal-temp - min-ideal-temp ) / 2
  set color scale-color lime ideal-temp ( min-ideal-temp - range-adjustment )
                                        ( max-ideal-temp + range-adjustment )
end

to color-by-unhappiness [ max-unhappiness ]
  set color scale-color blue unhappiness  max-unhappiness 0
end

to go
  if not any? turtles [ stop ]
  ;; diffuse heat through world
  diffuse temp diffusion-rate
  ;; The world retains a percentage of its heat each cycle.
  ;; (The Swarm and Repast versions have 1.0 meaning no
  ;; evaporation and 0.0 meaning complete evaporation;
  ;; we reverse the scale to better match the name.)
  ask patches [ set temp temp * (1 - evaporation-rate) ]
  ;; agentsets in NetLogo are always in random order, so
  ;; "ask turtles" automatically shuffles the order of execution
  ;; each time.
  ask turtles [ step ]
  recolor-turtles
  recolor-patches
  tick
end

to recolor-turtles
  if color-by-unhappiness?
  [
    let max-unhappiness max [unhappiness] of turtles
    ask turtles [ color-by-unhappiness max-unhappiness ]
  ]
end

to recolor-patches
  ;; hotter patches will be red verging on white;
  ;; cooler patches will be black
  ask patches [ set pcolor scale-color red temp 0 150 ]
end

to step  ;; turtle procedure
  ;; my unhappiness is the magnitude or absolute value of the difference
  ;; between by ideal temperature and the temperature of this patch
  set unhappiness abs (ideal-temp - temp)
  ;; if unhappy and not at the hottest neighbor,
  ;; then move to an open neighbor
  if unhappiness > 0
    [ ifelse random-float 100 < random-move-chance
        [ bug-move one-of neighbors ]
        [ bug-move best-patch ] ]
  set temp temp + output-heat
end

;; find the hottest or coolest location next to me; also
;; take my current patch into consideration
to-report best-patch  ;; turtle procedure
  ifelse temp < ideal-temp
    [ let winner max-one-of neighbors [temp]
      ifelse [temp] of winner > temp
        [ report winner ]
        [ report patch-here ] ]
    [ let winner min-one-of neighbors [temp]
      ifelse [temp] of winner < temp
        [ report winner ]
        [ report patch-here ] ]
end

to bug-move [target]  ;; turtle procedure
  ;; if we're already there, there's nothing to do
  if target = patch-here [ stop ]
  ;; move to the target patch (if it is not already occupied)
  if not any? turtles-on target [
    face target
    move-to target
    stop
  ]
  set target one-of neighbors with [not any? turtles-here]
  if target != nobody [ move-to target ]
  ;; The code above is a bit different from the original Heatbugs
  ;; model in Swarm.  In the NetLogo version, the bug will always
  ;; find an empty patch if one is available.
  ;; In the Swarm version, the bug picks a random
  ;; nearby patch, checks to see if it is occupied, and if it is,
  ;; picks again.  If after 10 tries it hasn't found an empty
  ;; patch, it gives up and stays where it is.  Since each try
  ;; is random and independent, even if there is an available
  ;; empty patch the bug will not always find it.  Presumably
  ;; the Swarm version is coded that way because there is no
  ;; concise equivalent in Swarm/Objective C to NetLogo's
  ;; 'one-of neighbors with [not any? turtles-here]'.
  ;; If you want to match the Swarm version exactly, remove the
  ;; last two lines of code above and replace them with this:
  ; let tries 0
  ; while [tries <= 9]
  ;   [ set tries tries + 1
  ;     set target one-of neighbors
  ;     if not any? turtles-on target [
  ;       move-to target
  ;       stop
  ;     ]
  ;   ]
end

;;; the following procedures support the two extra buttons
;;; in the interface

;; remove all heat from the world
to deep-freeze
  ask patches [ set temp 0 ]
end

;; add max-output-heat to all locations in the world, heating it evenly
to heat-up
  ask patches [ set temp temp + max-output-heat ]
end


; Copyright 2004 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings/><hubnet/></model>
