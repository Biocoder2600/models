<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

You are a contestant on a game show.  You, of all people, have made it to the final round, where you have the chance to win some fabulous prize --- a car, a million dollars, eternal youth, etc...  The host or hostess of the game show takes you up on stage, where you stand before three doors, marked "0", "1", and "2".

"Your prize is behind one of these three doors.  Behind the other two are goats, and you don't want these goats.  So, which one will you pick?" she or he says.  You make your selection, and reach for the door -- but before you open it, the hostess or host says to you: "All right, now I'm going to give you a choice."  She or he opens another one of the doors, one you didn't pick.  And sure enough, there's an ugly old goat.

The hostess or host then points to the other door, saying: "If you want, you can change your mind, and pick the last door; the door you didn't pick that I didn't open.  So now, which will it be?  Your first selection?  Or the other door?"  You think for a brief moment...

Which will it be?  Will you stick with your first choice, or switch to the other door?  Does it matter?  Do you have better odds of winning the prize by switching or sticking?  Or is it even odds either way?  (We're assuming here that you want the prize and have an aversion to goats.  If you really would prefer the goat, then the prize is the goat, and the two other doors are empty, or contain mulch, whatever...)

This is a classic puzzle in thinking about probability.  It has several other names: the 'Monty Hall' puzzle (named after the host of the game show this is taken from: "Let's Make a Deal") and 'Goats-and-Car' being the two most common.  The puzzle is based around the questions being asked above, which really boil down to one question at the heart of the matter: which is it better to do, stick or switch?

## HOW IT WORKS

An arbitrary number of turtles (around several hundred, usually) gather together at the bottom of the world.  They then begin to play this three-doors game over and over again.  The prize they can win is a turtle-command: `fd 1`.  If they lose, nothing happens.  Thus, the turtles are having a race to the top of the world, and they can only advance in the race if they win a prize.

Turtles determine the results of each round of the contest by themselves, alternately acting as contestant and host or hostess.  Also, each turtle has a 'hunch' - a percentage chance that it will switch to the other door.  The value of 'hunch' determines a turtle's color.  A turtle that always sticks with its original choice of doors has a hunch of 0 and is colored white.  A turtle that always switches its choice of doors has a hunch of 100 and is colored black.

## HOW TO USE IT

Before you begin playing with the model, read the paragraphs above.  Ask yourself what *you* would do --- stick with your initial pick, or switch to the other door.  Why?  Try to come up with an argument for your decision.  And then, think about the alternative.  Suppose you think it's 'better' to switch.  Why do you think so?  How much better do you think it is?  Why might it be better to stick with your initial decision?  Think about those questions, and talk about them with some of your peers (explain the scenario if they haven't already heard it).

This model is quite easy to run.  First, select the number of turtles you want to be present with the NUMBER slider.  (The more, the better, but you don't want to sacrifice too much speed.)  When you are ready to begin, press the SETUP button.  This will spread turtles randomly across the bottom row of patches.

Make a prediction as to how the different colors of turtles will perform in their race.  The turtles will repeatedly play the three-doors game, until one turtle has made it to the top of the world.  Finally, when you are all set, press the GO button.

If the GRADATION? switch is on, each turtle will be assigned a random "hunch" *between* 0 and 100 (instead of exactly 0 or 100).  Turtles who tend to "stick" will have a lower hunch and be lighter. Turtles who tend to "switch" will have a larger hunch and be darker.

## THINGS TO NOTICE

The main point of this model is demonstrated by the results of the turtles' race.  Try to understand these results.  Run the model a second time, with the same value for NUMBER and see what happens.  Do you accept these results?  In light of what you have observed, ask yourself the above questions again.  Is it better for a turtle to 'play its hunch'?

Try running the model with many more turtles, or just a few turtles.  How does the number of turtles relate to the behavior?

In the first paragraph of HOW TO USE IT above, it asks you to discuss this puzzle with some of your peers.  Important 'things to notice' are their own arguments one way or another.  How vehement were their beliefs?  How sound were their arguments?  How did you react to what they said, and how did they react to the results of this project?

The host or hostess will always open a door that contains a goat --- we're assuming that he or she has perfect information about the location of the prize.  Of what importance is this to the model?  How would the model be different if she or he opened a random door instead of a goat-door?

## THINGS TO TRY

Turn the GRADATION? switch on. How does the pattern of turtles change?

Look at the code for this model, especially if you disagree with its results.  Try to step through the procedure `make-choices`.  Do you think this procedure, and the model as a whole, is fair?

Next, try writing your own procedure for one round of the three-doors contest.  Compare its performance with what you've seen here.

Find someone who hasn't yet seen this model, or thought about this problem before.  Ask them for their opinion, and listen to their argument in defense of their choice.  Try not to argue with them (yet), just hear them out.  Then have them run this model, and see what they think.  If you've looked at the code, try to explain to them what is really going on.

## EXTENDING THE MODEL

This model has been kept very simple for a good reason --- to allow you to expand upon it at your leisure.  There are several directions in which it could go.  First of all, as mentioned above, try writing a different set of procedures for running a round of the contest.

Change the number of doors from three to four, or five, or n (where n could be a slider value).  How will this change the model?  You also might consider having several doors lead to prizes.

If there are n doors, and m different kinds of prizes, as suggested above, you could assign different values to the different prizes.  Maybe create different breeds of turtles, each of which has a different set of prize values?

Regardless of what you do, always make sure to make a prediction about what you think will happen, and to compare the actual results with what you see.

Try inventing a way to display how well each rule does, on average.  You could use monitors or plots.

Create a plot of the effectiveness of the different strategies and setups of the problem described above.

## NETLOGO FEATURES

As the turtles are all competing with one another, it's important that they all take the same amount of time to 'do a round'.  If you have many turtles, it's possible that some turtles could cheat, and get ahead of the others, just by getting through the code quicker.  Thus, we make use of an `ask turtles` block in the `go` procedure.  Whenever you use `ask`, all the agents must finish the block of commands before any agents will continue.  This makes sure that all turtles have caught up to the end of the block.

Note that it does no harm to have a turtle determine the prize door itself --- it does not use this knowledge when deciding which door to pick.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1998).  NetLogo Three Doors model.  http://ccl.northwestern.edu/netlogo/models/ThreeDoors.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 1998 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1998 2001 -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="13" bottom="445" right="636" top="10" left="202"><dimensions maxPycor="35" minPycor="-35" maxPxcor="35" minPxcor="-35" wrapInY="false" wrapInX="true" patchSize="6.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><slider direction="horizontal" default="300.0" bottom="69" right="194" top="36" left="4"><maximum><![CDATA[1000]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[number]]></variable></slider><button ticksEnabled="false" forever="false" bottom="262" right="92" top="229" left="26"><source><![CDATA[setup]]></source><display><![CDATA[setup]]></display></button><button ticksEnabled="true" forever="true" bottom="262" right="173" top="229" left="104"><source><![CDATA[go]]></source><display><![CDATA[go]]></display></button><switch isOn="false" bottom="116" right="164" top="83" left="39"><variable><![CDATA[gradation?]]></variable></switch><textbox transparent="false" color="#000000" fontSize="11" bottom="521" right="555" top="478" left="311"><display><![CDATA[Darker turtles switch doors more often.
Lighter turtles switch doors less often.]]></display></textbox><textbox transparent="false" color="#000000" fontSize="11" bottom="225" right="187" top="131" left="19"><display><![CDATA[if Gradation is off, all
turtles stick with one
strategy, either the "stick"
or the "switch" strategy. If
Gradation is on, they do
mixed strategies.]]></display></textbox></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[globals [
  done?  ; indicates whether the race is over or not yet
]

turtles-own [
  guess      ; what each turtle guesses to be the right door
  prize      ; where the prize is located
  other-door ; the number of the door that the host or hostess does NOT open
  hunch      ; the bias each turtle has to switch or not to switch doors
]

to setup
  clear-all
  ask patches [ set pcolor green ]
  set done? false  ; the race is not over yet
  create-turtles number
  [
    ifelse (gradation?)
      [ set hunch (random-float 100) ]             ; gradation is on, so give a hunch BETWEEN 0 and 100
      [ set hunch ((random 2) * 100 )]       ; gradation is off, so give a hunch of 0 or 100
    set color scale-color gray hunch 100 0 ; set the color based on the hunch of the turtles
    set heading 0
    ; spread the turtles out across the bottom of the world
    setxy random-xcor min-pycor
  ]
  reset-ticks
end

to go
  if done? [ stop ]
  ask turtles
  [
    make-choices  ; choose a door that the turtles will choose, a door for the prize, and set the other door
    do-switch?    ; should each turtle switch to the other door?
    award-prizes  ; make the winning turtles go forward and don't do anything if the race has been won
  ]
  tick
end

; choose a door that the turtles will choose (guess), a door for the prize (prize), and set the other door that is not opened (other)
to make-choices
  set prize (random 3)
  set guess (random 3)
  if (prize = 0)  ; the prize is behind door number 0
  [
    ifelse (guess = 0)
    ; the turtle guessed door 0
      [ set other-door ((random 2) + 1) ]  ; since the prize is in the door the turtle picked, pick door 1 or 2 to not be opened by the host or hostess
    ; the turtle guessed door 1 or 2
    ; it doesn't matter which door is picked to be not opened since both doors 1 and 2 have the junk behind them
      [ set other-door 0 ]
  ]
  if (prize = 1)  ; the prize is behind door number 1
  [
    ifelse (guess = 0)
    ; the turtle guessed door 0- a door with junk behind it
      [ set other-door 1 ]  ; so set the door not to be opened to door 1, the door with the prize behind it.  now door 2- with junk behind it- can be opened.
      [
        ifelse (guess = 1)
        ; the turtle guessed door 1
          [ set other-door ((random 2) * 2) ]  ; since the prize is in the door the turtle picked, pick door 0 or 2 to not be opened by the host or hostess
        ; the turtle guessed door 2- a door with junk behind it
          [ set other-door 1 ]  ; so set the door not to be opened to door 1, the door with the prize behind it.  now door 0- with junk behind it- can be opened.
      ]
  ]
  if (prize = 2)  ; the prize is behind door number 2
  [
    ifelse (guess = 0)
    ; the turtle guessed door 0- a door with junk behind it
      [ set other-door 2 ]  ; so set the door not to be opened to door 2, the door with the prize behind it.  now door 2- with junk behind it- can be opened.
      [
        ifelse (guess = 1)
        ; the turtle guessed door 1- a door with junk behind it
          [ set other-door 2 ]    ; so set the door not to be opened to door 2, the door with the prize behind it.  now door 0- with junk behind it- can be opened.
        ; the turtle guessed door 2
          [ set other-door (random 2) ]  ; since the prize is in the door the turtle picked, pick door 0 or 1 to not be opened by the host or hostess
      ]
  ]
end

; should each turtle switch to the other door?  this is based on the hunch in each turtle
to do-switch?
  if (random-float 100 < hunch)
    [ set guess other-door ]
end

; make the winning turtles go forward and don't do anything if the race has been won
to award-prizes
  if (guess = prize)
  [
    if (not done?)  ; if the race is not done, move the winners forward by 1 patch
    [ fd 1 ]
  ]
  ; if a turtle has reached the top of the world, set done? to be true
  if (ycor = max-pycor)
    [ set done? true ]
end


; Copyright 1998 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings/><hubnet/></model>
