<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup add-fish 50 repeat 10 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

This model demonstrates some connections between probability and the natural sciences.  Specifically, the model uses combinatorial space, sampling, and distribution in a genotype/phenotype analysis of fish procreation. The model allows you to look "under the hood": you can study a Mendel-type visualization of the combinations of dominant and recessive genes that underlie changes and trends in genetic distribution.

Fish vary by body and fin color, each of which can be either green or blue, so there are four different phenotypes.  Underlying this variation are dominant and recessive genes, expressed in "4-blocks."  A 4-block is a 2-by-2 array of squares, each of which can be either green or blue.  Initially, fish are randomly distributed by 4-block genotype. Then, fish seek mates and reproduce, and the genetic distribution changes.

This model is a part of the ProbLab curriculum. For more information about the ProbLab curriculum please refer to http://ccl.northwestern.edu/curriculum/ProbLab/.

## PEDAGOGICAL NOTE

Fishes' Mendel-type dominant/recessive genetic combinations are shown as "4-Blocks," such as the following:

`[B][G]` = Blue in the top left corner, Green in the top right corner
`[B][B]` = Blue in the bottom left corner, Blue in the bottom right corner

The top row of the 4-block, e.g., "B G," is the fish's genetic code for body color, and the bottom row, e.g., "B B," is for fin color. Green is the dominant gene both for body and fin color, whereas blue is the recessive gene for those attributes.  Thus, a green-green top row makes for a green body color and so does green-blue and blue-green.  Only a blue-blue top row would give a blue body color.  The same applies to the bottom row, with respect to fin color.  For example, the fish with the genes in the 4-block above, has a green body and a blue fin.

When two fish mate, the offspring's each parent contributes one genetic "square" from each of its rows.  The selection is random.  It is therefore possible for two green-bodied fishes to beget a blue-bodied fishlet.

## HOW IT WORKS

When you add fish to the pool, each fish's genotype is selected randomly from the sample space of all 16 different combinations that a 4-block can take.  Fishes' phenotype is determined directly by their genotype.  Upon activating the simulation, the fish swim around randomly.  If at least two fish are on the same square (a NetLogo "patch"), they might mate and procreate if they are matched according to the pre-set mating rules (see 'THINGS TO NOTICE').  For instance, the fish might need to have the same fin color (see 'HOW TO USE IT').

When the fish mate, the offspring's genotype, both for the body color and the fin color, is determined as a combination of the parents' genetic material (combinations of blocks from their respective 4-Blocks).  When mating is selective, certain offspring are less likely to appear, so the population distribution changes, and these changes, in turn, further impact mating chances.  The simulation enables you to witness these processes.  Interface monitors and graphs keep track of fish distribution both by genotype and phenotype.

## HOW TO USE IT

Press SETUP, and then add as many fish as you'd like, in increments of 10, by pressing ADD FISH.  Change the mating rules in the MATE-WITH chooser and the LIFE-SPAN of a fish.  Then, press GO ONCE or GO to see the fish interact.  Below are more features that will let you take full advantage of the model's capabilities.

Sliders:

LIFE-SPAN -- sets the number of "years," or time-steps, a fish will live.

Buttons:

SETUP -- initializes variables, re-colors the tiles, and resets the monitors and the graphs.

ADD FISH -- adds 10 fish to the display, updating the 4-BLOCK DISTRIBUTION histogram.

GO ONCE -- activates a single run through the 'go' procedure during which the fish move one step in the direction they were facing; if two fish land on the same patch and they are suited to mate according to the current settings of the mating rules, an offspring of the two fish is born and appears somewhere in the world. A patch turns yellow to indicate that two fish are mating on it.

GO -- forever button that keeps running through the 'go' procedure (GO ONCE runs through the procedure only once).

REVEAL GENES -- when the button is pressed, click on specific fish on the display to view their 4-Block Genotype. If you click on a mating fish (it's on a yellow patch), the genes of both of the parents and the child are revealed at the top of the display, and all other fish are temporarily hidden.

Monitors:

G-BODY G-FIN -- displays the number of fish with a green body and a green fin.

G-BODY B-FIN -- displays the number of fish with a green body and a blue fin.

B-BODY G-FIN -- displays the number of fish with a blue body and a green fin.

B-BODY B-FIN -- displays the number of fish with a blue body and a blue fin.

G-BODY TOTAL -- displays the number of fish with a green body (G-BODY G-FIN + G-BODY B-FIN).

B-BODY TOTAL -- displays the number of fish with a blue body (B-BODY G-FIN + B-BODY B-FIN).

TOTAL G-FIN -- displays the number of fish with a green fin (G-BODY G-FIN + B-BODY G-FIN).

TOTAL B- FIN -- displays the number of fish with a blue fin (G-BODY B-FIN + B-BODY B-FIN).

\# of ITERATIONS -- displays the number of time-steps the current experiment had run.

AVE BLOCK -- gives the mean number of green squares in the genetic material (4-Blocks) of the entire fish population.

Plots:

PERCENT FISH BY PROPERTIES -- keeps track of the trends of the different sub-populations over multiple time-steps.

4-BLOCK DISTRIBUTION -- histogram of fish genotype, grouped by the number of green squares in the 4-Blocks.  The vertical red line represents the AVE BLOCK.

Choosers:

MATE-WITH -- Represents the four different mating-rule choices:

1. "Any Fish" -- Any fish with another fish.
2. "Same Body" -- Only fish with the same body color.
3. "Same Fin" -- Only fish with the same fin color.
4. "Same Both" -- Only fish with the same body and fin color (same phenotype).

## THINGS TO NOTICE

Press SETUP and then press ADD FISH 10 times. Watch the group of monitors in the top-right area of the interface. What can you say about the distribution of fish by body and fin color? Why is this distribution consistent when you repeat this little activity? Why do we get this specific initial distribution?

What is the setting of the LIFE-SPAN slider that would keep the population from depleting? How, if at all, does this depend on the setting of the MATE-WITH choice button and on the initial size of the population?

If you set the MATE-WITH choice button to "SAME BODY," fish will only mate with other fish that have the same body color and they do (they could differ in fin color).  How do you expect this should affect trends in the distribution of fish by phenotype, as viewed in the PERCENT FISH BY PROPERTIES plot?

In the current version of the model, at each 'go' only two fish per patch are selected randomly for a possible mating even if more than two fish are present on that patch.  In fact, two non-matching fish may be selected even there are matches on that patch.  This constraint limits the maximum reproduction rate to the number of patches in the graphic window.  Thus, the population may reach equilibrium, rather than explode. See 'EXTENDING THE MODEL' for ideas on how to make the model more realistic.

What is the total number of fish when the population reaches equilibrium, and how does this number depend on the LIFE-SPAN?

An experiment may reach a point where the number of blue-bodied fish is 0.  However, as the experiment continues, one or more blue-bodied fish may appear.  Can you explain this? Set MATE-WITH to "Same Body" for an example of such behavior.

Note that the PERCENT FISH BY PROPERTIES plot tracks the fish population by phenotype, while the 4-BLOCK DISTRIBUTION plot represents the fish population by genotype.

Note that for low values of LIFE-SPAN, your fish population may deplete and for higher values, the population might grow sharply but eventually arrive at equilibrium, at a point that is determined by the life span.

## THINGS TO TRY

Press SETUP and then press ADD FISH 10 times.  Watch the group of monitors in the top-right area of the model.  What can you say about the distribution of fish by body and by fin color? Why is this distribution quite consistent each time you repeat this little activity?  Why do we get this specific initial distribution? What if we added a 1000 fish --would the distribution be as far off of your expectation (in terms of absolute numbers?; in proportionate terms?).

Run the model with MATE-WITH set at "Any Fish." After the model has been running for a while, will the population make-up stay the same, or will it change?  Do you expect any type of fish to dominate? Which one and why?  Which 4-Block will dominate?

Run GO with MATE-WITH set at "Same Body." After the model has been running for a while, what do you predict will happen to the fish population?

How about MATE-WITH set at "Same Fin"? Which 4-Block would dominate now? After a while, what is the relationship between the G-G and G-B population?  Do these outcomes depend on the starting population?  If so, how so?

How do you expect the setting of MATE-WITH to affect trends in the distribution of fish by phenotype, as viewed in the "Percent Fish by Properties" graph?

Run GO with MATE-WITH set at "Same Both." What do you think will happen? Is it just a faster way of getting to the same body/same fin final result? Track the 4-Block population while doing so by slowing down the model.  Over repeated trials, you may notice that the population is quite sensitive to the random configuration of fish at the starting point?  (See 'EXTENDING THE MODEL').

Is there a connection between the mating rules and the tendency of the population to die out?

## EXTENDING THE MODEL

Change the mating procedures of the model so that instead of only two fish mating per patch, all fish on a patch get an opportunity to mate.  For example, if there are 6 fish on the same patch, a total of three pairs may reproduce.  This would make the model more realistic.

The model continuously plots four different fish populations in terms of the number in each.  You may want to track different aspects of the population, such as according to the number of green squares in each fish's 4-block.  Add a plot and edit the 'update-graphs' procedure to do so.

The current interface of the model allows the user to add exactly 10 fish at a time.  Give the user more control over the number of fish to be added.  To do so, you can add a 'user-input,' asking for the number of fish to be added, or you may want to add a slider where the user can select the number of fish to be added.  A simple way of adding an exact number of fish, x, is to type 'add-fish x' in the Command Center.

What is the connection between the original set of fish, the MATE-WITH choice, and the set of fish that the population ultimately "settles" on? Can you determine any rules? To do this, you would first want to create buttons that let the user add specific types of fish, for instance a blue-bodied/blue-finned fish. You could then explore the following question, for example: if the original population set has a higher presence of  B-BODY B-FIN fish, could this phenotype become dominant under any setting of MATE-WITH?

## NETLOGO FEATURES

The model utilizes the mouse-clicking capabilities of NetLogo.  Note that a forever button must be running in order for the model to detect a mouse click.

Note the white band at the top of the view. The procedures ensure that no fish may enter the area of the white band. The origin is moved so that the white band has positive y-coordinates so bounds checking is easier.  The band was designed for this model as a unique form of output to the user, because we required output features that cannot be displayed in a standard output area.

There are 16 different 4-blocks, for each of which a new shape had to be created in order for the fish to be able to REVEAL GENES.  While drawing one shape is not a very arduous task in NetLogo's Shapes Editor, drawing 16 or more is. (And imagine the task of creating all 512 shapes of a "9-block"!)  To create the blocks, we opened the NetLogo file in WordPad, in which all shapes are represented in text as circles, polygons and lines with coordinates and colors. Using this text-based version of the graphical elements greatly simplified the task of managing and generating the entire set of desired 4-Block shapes -- we simply used a straightforward combinatorial analysis expressed in simple symbols.  When we re-loaded the file in NetLogo, the entire set of 4-blocks was there just as if we had made them in the Shapes Editor.

## RELATED MODELS

ProbLab Genetics, though it may not seem so at first glance, is very closely related to the 9-Block Stalagmite model of the ProbLab curriculum.  In that model, 4-blocks are chosen and then stacked in a "histogram," to show the distribution of the blocks by type.  Similarly, we may track the distribution of the 4-blocks, the fishes' genotype, upon adding fish and watching the 4-BLOCK DISTRIBUTION histogram update.

In terms of interactions between breeds, several NetLogo models track the number of specimens in breeds that compete over resources. For an example, see the Wolf-Sheep Predation model.

In Expected Value Advanced, a model of the ProbLab Curriculum, the same metaphor of roaming fish is used.  As in this model, where a fish carries the value of the number of green squares in its 4-block, fish in Expected Value Advanced carry an underlying monetary value that may be collected and quantified.  Additionally, the fish's appearance is dependent on their underlying value (the larger the value, the lighter the body color).

## CREDITS AND REFERENCES

This model is a part of the ProbLab curriculum. For more information about the ProbLab Curriculum please refer to http://ccl.northwestern.edu/curriculum/ProbLab/.

Thanks to Steve Gorodetskiy for his design and programming work.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Abrahamson, D. and Wilensky, U. (2004).  NetLogo ProbLab Genetics model.  http://ccl.northwestern.edu/netlogo/models/ProbLabGenetics.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2004 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227.

<!-- 2004 Cite: Abrahamson, D. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="10" bottom="459" right="570" top="10" left="122"><dimensions maxPycor="1" minPycor="-9" maxPxcor="5" minPxcor="-5" wrapInY="false" wrapInX="false" patchSize="40.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button ticksEnabled="false" forever="false" bottom="70" right="116" top="37" left="7"><source><![CDATA[setup]]></source></button><button ticksEnabled="true" forever="true" bottom="278" right="116" top="245" left="7"><source><![CDATA[reveal-genes]]></source><display><![CDATA[reveal genes]]></display></button><button ticksEnabled="true" forever="true" bottom="213" right="116" top="180" left="8"><source><![CDATA[go]]></source></button><button ticksEnabled="true" forever="false" bottom="121" right="116" top="88" left="7"><source><![CDATA[add-fish 10]]></source><display><![CDATA[add fish]]></display></button><plot bottom="480" right="910" top="325" left="580" ymax="10.0" ymin="0.0" xmax="5.0" xmin="0.0" legendOn="true" autoPlotOn="true"><display><![CDATA[4-Block Distribution]]></display><xAxis><![CDATA[# green squares in block]]></xAxis><yAxis><![CDATA[occurrences]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[set z-distr [ read-from-string item 1 my-genes ] of fish]]></update><pens><pen inLegend="true" color="-16777216" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[let maxbar modes z-distr
let maxrange length (filter [ z -> z = item 0 maxbar ] z-distr )
set-plot-y-range 0 max list 10 maxrange
histogram z-distr]]></update><display><![CDATA[Count]]></display></pen><pen inLegend="true" color="-2674135" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[; plots a vertical line at mean
plot-pen-reset
if z-distr != [] [
  plotxy mean z-distr plot-y-min
  plot-pen-down
  plotxy mean z-distr plot-y-max
  plot-pen-up
]]]></update><display><![CDATA[Average]]></display></pen></pens></plot><slider direction="horizontal" default="5.0" bottom="408" right="114" top="375" left="5"><maximum><![CDATA[10]]></maximum><minimum><![CDATA[1]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[life-span]]></variable></slider><monitor precision="2" fontSize="11" bottom="425" right="905" top="380" left="840"><source><![CDATA[mean z-distr]]></source><display><![CDATA[Ave Block]]></display></monitor><button ticksEnabled="true" forever="false" bottom="175" right="116" top="142" left="8"><source><![CDATA[go]]></source><display><![CDATA[go once]]></display></button><plot bottom="322" right="907" top="174" left="577" ymax="100.0" ymin="0.0" xmax="10.0" xmin="0.0" legendOn="true" autoPlotOn="true"><display><![CDATA[Percent Fish by Properties]]></display><xAxis><![CDATA[# of iterations]]></xAxis><yAxis><![CDATA[Percentage]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-10899396" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plotxy ticks ifelse-value any? fish [ 100 * count fish with [ color = green and shape = dom-shape ] / count fish ] [ 0 ]]]></update><display><![CDATA[G-body G-fin]]></display></pen><pen inLegend="true" color="-6459832" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plotxy ticks ifelse-value any? fish [ 100 * count fish with [ color = green and shape = res-shape ] / count fish ] [ 0 ]]]></update><display><![CDATA[G-body B-fin]]></display></pen><pen inLegend="true" color="-13312" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plotxy ticks ifelse-value any? fish [ 100 * count fish with [ color = blue and shape = dom-shape ] / count fish ] [ 0 ]]]></update><display><![CDATA[B-body G-fin]]></display></pen><pen inLegend="true" color="-13345367" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plotxy ticks ifelse-value any? fish [ 100 * count fish with [ color = blue and shape = res-shape ] / count fish ] [ 0 ]]]></update><display><![CDATA[B-body B-fin]]></display></pen></pens></plot><chooser currentChoice="0" bottom="459" right="114" top="414" left="5"><variable><![CDATA[mate-with]]></variable><choices><stringChoice><![CDATA[Any Fish]]></stringChoice><stringChoice><![CDATA[Same Body]]></stringChoice><stringChoice><![CDATA[Same Fin]]></stringChoice><stringChoice><![CDATA[Same Both]]></stringChoice></choices></chooser><monitor precision="0" fontSize="11" bottom="55" right="696" top="10" left="610"><source><![CDATA[count fish with [ color = green and (read-from-string (item 5 my-genes) = 1 or read-from-string (item 6 my-genes) = 1)]]]></source><display><![CDATA[G-body G-fin]]></display></monitor><monitor precision="3" fontSize="11" bottom="55" right="784" top="10" left="700"><source><![CDATA[count fish with [ color = green and not (read-from-string (item 5 my-genes) = 1 or read-from-string (item 6 my-genes) = 1)]]]></source><display><![CDATA[G-body B-fin]]></display></monitor><monitor precision="0" fontSize="11" bottom="107" right="696" top="62" left="610"><source><![CDATA[count fish with [ color = blue and (read-from-string (item 5 my-genes) = 1 or read-from-string (item 6 my-genes) = 1)]]]></source><display><![CDATA[B-body G-fin]]></display></monitor><monitor precision="0" fontSize="11" bottom="107" right="784" top="62" left="700"><source><![CDATA[count fish with [ color = blue and not (read-from-string (item 5 my-genes) = 1 or read-from-string (item 6 my-genes) = 1)]]]></source><display><![CDATA[B-body B-fin]]></display></monitor><monitor precision="0" fontSize="11" bottom="165" right="696" top="120" left="610"><source><![CDATA[count fish with [ read-from-string (item 5 my-genes) = 1 or read-from-string (item 6 my-genes) = 1 ]]]></source><display><![CDATA[Total     G-fin]]></display></monitor><monitor precision="0" fontSize="11" bottom="165" right="785" top="120" left="700"><source><![CDATA[count fish with [ not (read-from-string (item 5 my-genes) = 1 or read-from-string (item 6 my-genes) = 1) ]]]></source><display><![CDATA[Total     B-fin]]></display></monitor><monitor precision="0" fontSize="11" bottom="107" right="873" top="62" left="793"><source><![CDATA[count fish with [ color = blue ]]]></source><display><![CDATA[B-body Total]]></display></monitor><monitor precision="0" fontSize="11" bottom="55" right="873" top="10" left="793"><source><![CDATA[count fish with [ color = green ]]]></source><display><![CDATA[G-body Total]]></display></monitor><monitor precision="0" fontSize="11" bottom="165" right="873" top="120" left="793"><source><![CDATA[count fish]]></source><display><![CDATA[Total fish]]></display></monitor></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f0-0000"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f1-0001"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f1-0010"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f1-0100"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f1-1000"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f2-0011"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f2-0101"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f2-0110"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f2-1001"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f2-1010"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f2-1100"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f3-0111"><elements><rect marked="false" filled="true" color="#345DA9" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f3-1011"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#345DA9" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f3-1101"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#345DA9" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f3-1110"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#345DA9" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="f4-1111"><elements><rect marked="false" filled="true" color="#2CD13B" height="150" width="150" y="0" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="150" width="145" y="0" x="150"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="150" y="150" x="0"/><rect marked="false" filled="true" color="#2CD13B" height="145" width="145" y="150" x="150"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="150" y1="0" x1="150"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="295" y1="0" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="0" x2="0" y1="295" x1="0"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="0" y1="295" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="295" x2="295" y1="0" x1="295"/><line marked="false" filled="false" color="#FFFFFF" y2="150" x2="295" y1="150" x1="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="fish-blue-fin"><elements><rect marked="true" filled="true" color="#8D8D8D" height="0" width="30" y="90" x="105"/><polygon marked="true" filled="true" color="#8D8D8D" points="117,180 109,174 100,162 92,149 84,131 82,116 80,98 84,76 91,61 100,54 112,50 131,48 149,80 168,48 179,50 193,53 206,62 212,77 215,97 213,118 206,139 195,158 184,172 173,188 209,255 89,255 124,186"/><polygon marked="false" filled="true" color="#D73229" points="120,180 105,165"/><circle marked="false" filled="true" color="#FFFFFF" diameter="30" cy="68" cx="97"/><circle marked="false" filled="true" color="#000000" diameter="8" cy="79" cx="108"/><polygon marked="false" filled="true" color="#345DA9" points="105,150 125,105 165,105 190,150 105,150"/><polygon marked="false" filled="false" color="#FFFFFF" points="105,150 125,105 165,105 190,150 105,150"/><polygon marked="false" filled="false" color="#FFFFFF" points="117,180 109,174 100,162 92,149 84,131 82,116 80,98 84,76 91,61 100,54 112,50 131,48 149,80 168,48 179,50 193,53 206,62 212,77 215,97 213,118 206,139 195,158 184,172 173,188 209,255 89,255 124,186"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="fish-eye-fin"><elements><rect marked="true" filled="true" color="#8D8D8D" height="0" width="30" y="90" x="105"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,255 210,255 171,179 127,180 90,255"/><polygon marked="false" filled="true" color="#D73229" points="120,180 105,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="118,180 110,174 101,162 93,149 85,131 83,116 81,98 85,76 92,61 101,54 113,50 132,48 150,80 169,48 180,50 194,53 207,62 213,77 216,97 214,118 207,139 196,158 185,172 171,185 128,188"/><circle marked="false" filled="true" color="#FFFFFF" diameter="30" cy="68" cx="97"/><circle marked="false" filled="true" color="#000000" diameter="8" cy="79" cx="108"/><polygon marked="false" filled="false" color="#000000" points="108,144 138,114 153,114 183,144 108,144"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="fish-green-fin"><elements><rect marked="true" filled="true" color="#8D8D8D" height="0" width="30" y="90" x="105"/><polygon marked="true" filled="true" color="#8D8D8D" points="117,180 109,174 100,162 92,149 84,131 82,116 80,98 84,76 91,61 100,54 112,50 131,48 149,80 168,48 179,50 193,53 206,62 212,77 215,97 213,118 206,139 195,158 184,172 173,188 209,255 89,255 124,186"/><polygon marked="false" filled="true" color="#D73229" points="120,180 105,165"/><circle marked="false" filled="true" color="#FFFFFF" diameter="30" cy="68" cx="97"/><circle marked="false" filled="true" color="#000000" diameter="8" cy="79" cx="108"/><polygon marked="false" filled="true" color="#59B03C" points="105,150 125,105 165,105 190,150 105,150"/><polygon marked="false" filled="false" color="#FFFFFF" points="105,150 125,105 165,105 190,150 105,150"/><polygon marked="false" filled="false" color="#FFFFFF" points="117,180 109,174 100,162 92,149 84,131 82,116 80,98 84,76 91,61 100,54 112,50 131,48 149,80 168,48 179,50 193,53 206,62 212,77 215,97 213,118 206,139 195,158 184,172 173,188 209,255 89,255 124,186"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="14" rotatable="false" name="frame"><elements><rect marked="true" filled="true" color="#000000" height="296" width="26" y="2" x="-8"/><rect marked="true" filled="true" color="#000000" height="16" width="299" y="0" x="1"/><rect marked="true" filled="true" color="#000000" height="298" width="16" y="2" x="283"/><rect marked="true" filled="true" color="#000000" height="14" width="299" y="285" x="1"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="frame-thicker"><elements><rect marked="true" filled="true" color="#8D8D8D" height="288" width="33" y="7" x="5"/><rect marked="true" filled="true" color="#8D8D8D" height="33" width="289" y="5" x="7"/><rect marked="true" filled="true" color="#8D8D8D" height="288" width="39" y="7" x="256"/><rect marked="true" filled="true" color="#8D8D8D" height="39" width="288" y="256" x="5"/><line marked="false" filled="false" color="#000000" y2="295" x2="5" y1="5" x1="5"/><line marked="false" filled="false" color="#000000" y2="5" x2="295" y1="5" x1="5"/><line marked="false" filled="false" color="#000000" y2="295" x2="295" y1="5" x1="295"/><line marked="false" filled="false" color="#000000" y2="295" x2="295" y1="295" x1="5"/><line marked="false" filled="false" color="#000000" y2="38" x2="38" y1="256" x1="38"/><line marked="false" filled="false" color="#000000" y2="38" x2="256" y1="38" x1="38"/><line marked="false" filled="false" color="#000000" y2="38" x2="256" y1="256" x1="256"/><line marked="false" filled="false" color="#000000" y2="256" x2="256" y1="256" x1="38"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plus"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="60" y="45" x="120"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="210" y="120" x="45"/></elements></turtleShape><turtleShape editableColorIndex="15" rotatable="false" name="right arrow"><elements><polygon marked="false" filled="true" color="#8D8D8D" points="285,150 135,90 135,135 15,135 15,165 135,165 135,210"/></elements></turtleShape><turtleShape editableColorIndex="15" rotatable="false" name="small plus"><elements><rect marked="false" filled="true" color="#8D8D8D" height="120" width="30" y="90" x="135"/><rect marked="false" filled="true" color="#8D8D8D" height="30" width="120" y="135" x="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[breed [ output-shapes output-shape ]
breed [ fish a-fish ]

fish-own [
  age
  my-genes
]

patches-own [
  original-color
  family
]

globals [ z-distr ]

to setup
  clear-all
  ; prepares the patch colors
  ask patches [ set pcolor red + random 3 ]
  ; the origin is moved toward the top of the view so
  ; the single row of patches with positive pycors
  ; can easily be used to display genetic information
  ; when a fish is selected in "reveal genes" mode
  ask patches with [ pycor > 0 ] [ set pcolor white ]
  ask patches [
    set original-color pcolor
    set family []
  ]
  reset-ticks
end

to add-fish [ n ]
  repeat n [
    let dummy add-custom-fish choose-random-n-z
  ]
  update-plots
end

; add a fish with the given genes and report a reference to it
to-report add-custom-fish [ child-genes ]
  let child nobody
  create-fish 1 [
    set my-genes child-genes
    express-genes
    setxy random-xcor (random-float min-pycor)
    set-next-heading
    set child self
  ]
  report child
end

to express-genes ; fish procedure
  ifelse item 3 my-genes = "1" or item 4 my-genes = "1"
    [ set color dom-color ]
    [ set color res-color ]
  ifelse item 5 my-genes = "1" or item 6 my-genes = "1"
    [ set shape dom-shape ]
    [ set shape res-shape ]
end

to-report choose-random-n-z
  report combination-to-string n-values 4 [ random 2 ]
end

to-report combination-to-string [ combination ]
  report reduce word (sentence "f" (sum combination) "-" combination)
end

to go

  ask patches [
    set pcolor original-color
    set family []
  ]

  ask fish [
    if age >= life-span [ die ]
    set age age + 1
    wander-around
  ]

  ; collides pairs of fish that are on the same patch
  foreach [ n-of 2 fish-here ] of patches with [ count fish-here > 1 ] [ parents ->
    ; make sure the first parent has a lower
    ; who number than the second parent
    collide (first sort parents) (last sort parents)
  ]
  tick
end

to collide [ parent1 parent2 ]
  if can-mate? parent1 parent2 [
    ; makes a child
    let genes1 [ my-genes ] of parent1
    let genes2 [ my-genes ] of parent2
    let child-genes create-child ([ patch-here ] of parent1) genes1 genes2
    let child add-custom-fish child-genes
    ask [ patch-here ] of parent1 [
      set pcolor yellow
      set family (sentence parent1 parent2 child family)
    ]
  ]
end

to-report can-mate? [ parent1 parent2 ]
  let same-body? ([ color ] of parent1 = [ color ] of parent2)
  let same-fin?  ([ shape ] of parent1 = [ shape ] of parent2)
  if mate-with = "Any Fish"  [ report true ]
  if mate-with = "Same Body" [ report same-body? ]
  if mate-with = "Same Fin"  [ report same-fin? ]
  if mate-with = "Same Both" [ report same-body? and same-fin? ]
  report false
end

to-report create-child [ yellow-patch genes1 genes2 ]
  ; makes the child
  let new-genes n-values 4 [ random 2 ]
  ask yellow-patch [ set family new-genes ]
  report combination-to-string (map
    [ [i new-gene parent-genes] -> read-from-string item (i + new-gene) parent-genes ]
    [ 3 3 5 5 ] new-genes (list genes1 genes2 genes1 genes2))
end

to reveal-genes
  ifelse mouse-down? [
    let x mouse-xcor
    let y mouse-ycor
    ifelse [ pcolor ] of patch x y = yellow [
      ; reveals genes -- with two fish mating, if patch is yellow
      if not any? output-shapes [
        output-genetics [ family ] of patch x y
        let fish-family turtle-set filter is-turtle? [ family ] of patch x y
        ask fish-family [ express-genes ]
        ask fish [ set hidden? (not member? self fish-family) ]
        ask patches [ set pcolor original-color ]
        ask patch x y [ set pcolor yellow ]
      ]
    ]
    [
      ; finds closest turtle if patch not yellow
      reset-display
      ask min-one-of [ fish in-radius 2 ] of patch x y [ distancexy x y ] [
        set shape my-genes
      ]
    ]
  ]
  [ reset-display ]
  display
end

to reset-display
  ask output-shapes [ die ]
  ask patches with [ not empty? family ] [ set pcolor yellow ]
  ask fish [
    express-genes
    show-turtle
  ]
end

to output-genetics [ this-family ]

  ask output-shapes [ die ]

  let genes1      [ my-genes ] of item 0 this-family
  let genes2      [ my-genes ] of item 1 this-family
  let child-genes [ my-genes ] of item 2 this-family
  let top-left                    item 3 this-family
  let top-right                   item 4 this-family
  let bottom-left                 item 5 this-family
  let bottom-right                item 6 this-family

(foreach (list genes1 "small plus" genes2 "right arrow" child-genes) [ 0 0.75 1.5 2.5 3.5 ] [ [the-shape offset] ->
    create-output-shapes 1 [
      set shape the-shape
      setxy (min-pxcor + offset) max-pycor
    ]
  ])

  let left-xs  (list (- 5.25) (- 4.75))
  let right-xs (list (- 3.75) (- 3.25))
  make-frame (item top-left     left-xs ) 1.25 orange
  make-frame (item top-right    right-xs) 1.25 orange
  make-frame (item bottom-left  left-xs ) 0.75 turquoise - 1
  make-frame (item bottom-right right-xs) 0.75 turquoise - 1

end

to make-frame [ x y frame-color ]
  create-output-shapes 1 [
    set shape "frame-thicker"
    set size .5
    setxy x y
    set color frame-color
  ]
end

to wander-around ; fish procedure
  forward 1 ; moves one
  set-next-heading
end

to set-next-heading ; fish procedure
  ; choose a random heading, making sure it
  ; doesn't go out of bounds next move
  set heading random 360
  let p patch-ahead 1
  while [ p = nobody or [ pycor ] of p > (max-pycor - 1) ] [
    set heading random 360
    set p patch-ahead 1
  ]
end

to-report dom-color ; dominant gene color
  report green
end

to-report res-color ; recessive gene color
  report blue
end

to-report dom-shape
  report "fish-green-fin"
end

to-report res-shape
  report "fish-blue-fin"
end


; Copyright 2004 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings snapToGrid="true"/><hubnet/></model>
