<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><compiled><![CDATA[setup repeat 75 [ go ]]]></compiled></previewCommands><info><![CDATA[## WHAT IS IT?

Shuffle Board investigates distributions of favored events in a series of outcomes.  The basic analogy is that there are a lot of candy boxes, but only some have prizes in them. You are buying one candy box after another, waiting for prizes, and keeping track of two things: how many boxes do you need to buy until you get a prize? When you had lucky streaks, how long were they?

A possibly counter-intuitive result in this simulation is that the shorter the "waiting time," the more frequently it occurs.  Another result is that the shorter the "lucky streak," the more frequently it occurs.

Shuffle Board explores the relation between the length of the "waiting time" and its frequency, and between the length of a lucky streak and its frequency.  This exploration is designed to help learners understand the mathematical functions associated with these distributions.

This model is a part of the ProbLab curriculum. The ProbLab curriculum is currently under development at the CCL. For more information about the ProbLab curriculum please refer to http://ccl.northwestern.edu/curriculum/ProbLab/.

## HOW IT WORKS

The basic analogy underlying Shuffle Board is that there are a lot of candy boxes, but only some of them have prizes in them (like a blue teddy bear). You know how long it should take you, on average, to get a prize, because this information is announced by the candy manufacturer. You are buying one candy box after another and keeping track of two things:
- How many boxes did you need to buy since last prize until you got the next prize?
- When you had lucky streaks, how long were they?

Both are plotted automatically in the "Frequency of Distances to Prizes" and "Frequency of Streaks by Length" graphs.

The view features yellow lines that are broken by blue dots (candy boxes without prizes) and colored squares (candy boxes with prizes). Each blue dot or colored square is an "outcome". So think of a very long string with 121 outcomes that has been chopped up into 11 shorter strings, each with 11 outcomes, so as to fit into the View. The string runs from the top left spot on the board (the first outcome) towards the right. When it gets to the end of the top row, it skips to the left-most spot on the second row from top, and so on. When it gets to the bottom-right corner, it counts on to the top left corner, as though the string is closed in a necklace.

When you first open the model and whenever you press Setup, prizes are distributed uniformly across the View according to the settings of the slider 'average-distance'. For instance, if this slider is set to '5', then literally every 5th outcome will be a prize. Next, the prizes shuffle randomly to new locations on the board, so this initial uniform distribution is upset.

Why do we shuffle?  We are exploring for hidden distribution patterns. Sometimes it takes a lot of data to find hidden patterns.  If we had space in the view for thousands of boxes, we would have enough data to find any patterns that might be there. But there is not enough room in the view to make the boxes big enough so you can see the prizes.  So, instead, we shuffle.  It is as though each time we get another bit out of a larger population -- it is as though each shuffle gives us a new sample.  After each shuffle, you can track individual prizes as they move from one location to another.

Note that the string of outcomes is forms a loop. So if at the tail end of the string -- towards the bottom-right corner -- there are 4 boxes without prizes, these will count towards the first prize in the top row.

## HOW TO USE IT

Sliders:
AVERAGE-DISTANCE -- If set at, say, 5, then every 5th square will bear a prize, when you press Setup.
TRUNCATE-AFTER-COLUMN -- determines how many of the "Distances to Prizes" histogram columns, beginning from left, will be included in the calculation of the mean ratio between consecutive columns. For instance, if this slider is set at "4", then the program will calculate the quotients of Column 2 divided by Column 1, Column 3 divided by Column 2, and Column 4 divided by Column 3. Next, the program will determine the mean of these three quotients and report them in the "Columns-Factor" monitor.

Switches:
PRIZE-SHAPES? -- if set to 'On', you will see what prize is waiting for you in each candy box. When set to 'Off', you will know that there is a prize in the box, but you will not know what it is.
LABELS? -- if set to 'On', each prize box will show how many boxes had to be bought since the previous box so as to get this prize.

Buttons:
SETUP -- initializes variables, creates a collection of prizes in accordance with the value of 'average-distance', and represents the distances to prizes and the lucky streaks in their respective plots.
GO ONCE -- Runs the program through a single 'Go' procedure, in which prizes are shuffled and their distances and streaks are calculated and plotted.
GO -- Runs the program over and over.

Monitors:
Columns Factor -- the height of each column in the histogram is divided by the height of the column immediately to its left. The monitor shows the mean of all these quotients. The total number of columns included in this calculation is determined by the slider 'truncate-after-column'.

Plots:
FREQUENCY OF DISTANCES TO PRIZES -- shows the accumulating distribution of distances between prizes in repeated samples.
FREQUENCY OF STREAKS BY LENGTH -- shows the accumulating distribution of streaks of consecutive successes
Note that after you press Setup, when you first click on 'Go' or 'Go Once', the plots initialize, but later they accumulate information from previous runs.

Set the 'average-distance' slider and press 'Setup'. Now press 'Go Once' and watch the histograms appear in the plots. If you press 'Go', the program will run indefinitely, until you press 'Go' again.

## THINGS TO NOTICE

When you press 'Go Once' the prizes rearrange on the board. Choose your favorite prize and track it. This way, you'll be sure that no prizes vanish!

After a single shuffle, what is the most common distance between every two consecutive prizes? You can see this in the View -- the number labels show these distances, and so you can count up how many "1"s you see, and how many "2"s, "3"s, etc. Also, look at the plot to see which bar is the highest. Keep looking at the plot over more runs. See the typical graph shape that forms.

As the program runs over and over, the value in the Column Factor monitor gradually converges.

## THINGS TO TRY

When you press Setup, you get a uniform distribution of prizes. After you shuffle the prizes, the distribution is not uniform. But what is the average distance between prizes now? In the Command Center, type

    show precision mean target-color-differences-list 2

Now press Enter. This code calculates for you the mean distance between each two consecutive white patches. Can you explain the value you received?

Watch the value in the 'Column Factor' monitor. Can you find a relation between these relative heights and the 'average-distance' setting?

Play with the 'truncate-columns' slider. What does including more columns do as compared to including fewer columns? What, if any, is the relation of these actions to the value in the 'Columns Factor' monitor?

What is the relation between the value of average-distance and the curves you get in the plot 'Frequency of Streaks by Length'? Does this make sense to you?

Here is an experiment you can try without NetLogo that might shed more light on the model:
Set up a deck of cards that has 13 face cards and 39 number cards. That is a 1:3 ratio of faces to numbers. One fourth of the cards are faces. Thus, the probability that any random card drawn from this deck is a face is 1 out of 4 -- that is, a 25% chance. Now distribute the face cards uniformly in the deck so that literally every fourth card is a face. Next, shuffle the cards thoroughly. Still, every fourth card on average will be a face. But what is hiding behind this sense of "average" in "every fourth card on average is a face"? Count up to each face card and create a histogram of the frequencies of each number of attempts until success. What have you learned? Can you explain this? Note that two decks put together with the same "number:face" ratio (for a total of 26:78) will bring quicker results.

Shuffle Board is a NetLogo analogy to shuffling a deck of cards and then going through the cards one by one and counting how long it takes to find each face.  To be precise, the shuffling procedure in this model is less rule governed than standard shuffling of cards (see for example [https://www.sciencenews.org/node/19977](https://www.sciencenews.org/node/19977)).

## EXTENDING THE MODEL

Add a plot to show how the Columns Factor value changes over time.

Add pens to the plots to represent the averages of the outcomes.

Add a switch that flips the orientation of the shuffle board so that distances to prizes are counted vertically instead of horizontally.

Choose a specific location on the View (one of the "patches") and monitor how often that location gets a prize over repeated shuffles. Design an experiment to determine any possible relationships between the frequency of getting a prize in that location and the setting of the 'average-distance' slider.

## RELATED MODELS

The model is closely related to Prob Graphs Basic, and especially to the middle graph in that model. That middle graph looks at distances or 'attempt-until-success' ("waiting time") between consecutive "hits" that are determined randomly according to a sample-space setting. Shuffle Board shows the same idea, but it does so using a more visible analogy that allows you to scan for yourself the distances between all of the favored events. This helps us understand that the shorter distances are more ubiquitous as compared to the longer distances. In particular, we see that the distance "1" is relatively dominant.

## CREDITS AND REFERENCES

This model is a part of the ProbLab curriculum. The ProbLab Curriculum is currently under development at Northwestern's Center for Connected Learning and Computer-Based Modeling. . For more information about the ProbLab Curriculum please refer to http://ccl.northwestern.edu/curriculum/ProbLab/.

Thanks to Ethan Bakshy for his extensive work on this model.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Abrahamson, D. and Wilensky, U. (2004).  NetLogo Shuffle Board model.  http://ccl.northwestern.edu/netlogo/models/ShuffleBoard.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2004 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227.

<!-- 2004 Cite: Abrahamson, D. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="12" bottom="459" right="750" top="10" left="302"><dimensions maxPycor="5" minPycor="-5" maxPxcor="5" minPxcor="-5" wrapInY="true" wrapInX="true" patchSize="40.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><slider direction="horizontal" default="5.0" bottom="43" right="294" top="10" left="111"><maximum><![CDATA[10]]></maximum><minimum><![CDATA[2]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[average-distance]]></variable></slider><button ticksEnabled="false" forever="false" bottom="43" right="103" top="10" left="12"><source><![CDATA[setup]]></source></button><button ticksEnabled="true" forever="true" bottom="130" right="202" top="81" left="111"><source><![CDATA[go]]></source></button><plot bottom="253" right="293" top="133" left="13" ymax="10.0" ymin="0.0" xmax="20.0" xmin="1.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Frequency of Distances to Prizes]]></display><xAxis><![CDATA[Distances to Prizes]]></xAxis><yAxis><![CDATA[Freq]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="false" color="-16777216" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[default]]></display></pen></pens></plot><button ticksEnabled="true" forever="false" bottom="130" right="102" top="81" left="11"><source><![CDATA[go]]></source><display><![CDATA[go once]]></display></button><monitor precision="2" fontSize="11" bottom="302" right="293" top="257" left="191"><source><![CDATA[relative-heights target-color-differences-list]]></source><display><![CDATA[Columns Factor]]></display></monitor><slider direction="horizontal" default="12.0" bottom="290" right="183" top="257" left="13"><maximum><![CDATA[30]]></maximum><minimum><![CDATA[2]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[truncate-after-column]]></variable></slider><plot bottom="429" right="293" top="309" left="14" ymax="100.0" ymin="0.0" xmax="10.0" xmin="1.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Frequency of Streaks by Length]]></display><xAxis><![CDATA[Length of Lucky Streak]]></xAxis><yAxis><![CDATA[Freq]]></yAxis><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="false" color="-16777216" mode="1" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[default]]></display></pen></pens></plot><switch isOn="true" bottom="78" right="173" top="45" left="11"><variable><![CDATA[prize-shapes?]]></variable></switch><switch isOn="true" bottom="78" right="293" top="45" left="181"><variable><![CDATA[label?]]></variable></switch><monitor precision="2" fontSize="11" bottom="476" right="293" top="431" left="189"><source><![CDATA[relative-heights target-color-successive-list]]></source><display><![CDATA[Columns Factor]]></display></monitor><textbox transparent="false" color="#000000" fontSize="11" bottom="491" right="176" top="445" left="18"><display><![CDATA[Columns factor is
the mean ratio of
consecutive columns]]></display></textbox></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="android"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="105" y="74" x="105"/><polygon marked="true" filled="true" color="#8D8D8D" points="104,78 34,129 47,148 114,89"/><polygon marked="true" filled="true" color="#8D8D8D" points="198,81 274,108 258,142 192,104"/><polygon marked="true" filled="true" color="#8D8D8D" points="115,239 115,289 133,289 133,237"/><polygon marked="true" filled="true" color="#8D8D8D" points="176,235 176,287 192,287 192,234"/><rect marked="true" filled="true" color="#8D8D8D" height="61" width="75" y="12" x="119"/><rect marked="false" filled="true" color="#000000" height="14" width="18" y="22" x="129"/><rect marked="false" filled="true" color="#000000" height="14" width="20" y="23" x="164"/><rect marked="false" filled="true" color="#000000" height="12" width="12" y="113" x="151"/><rect marked="false" filled="true" color="#000000" height="12" width="11" y="142" x="153"/><rect marked="false" filled="true" color="#000000" height="13" width="12" y="171" x="154"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="ant"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="136,61 129,46 144,30 119,45 124,60 114,82 97,37 132,10 93,36 111,84 127,105 172,105 189,84 208,35 171,11 202,35 204,37 186,82 177,60 180,44 159,32 170,44 165,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,95 135,103 139,117 125,149 137,180 135,196 150,204 166,195 161,180 174,150 158,116 164,102"/><polygon marked="true" filled="true" color="#8D8D8D" points="149,186 128,197 114,232 134,270 149,282 166,270 185,232 171,195 149,186"/><polygon marked="true" filled="true" color="#8D8D8D" points="225,66 230,107 159,122 161,127 234,111 236,106"/><polygon marked="true" filled="true" color="#8D8D8D" points="78,58 99,116 139,123 137,128 95,119"/><polygon marked="true" filled="true" color="#8D8D8D" points="48,103 90,147 129,147 130,151 86,151"/><polygon marked="true" filled="true" color="#8D8D8D" points="65,224 92,171 134,160 135,164 95,175"/><polygon marked="true" filled="true" color="#8D8D8D" points="235,222 210,170 163,162 161,166 208,174"/><polygon marked="true" filled="true" color="#8D8D8D" points="249,107 211,147 168,147 168,150 213,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="arrow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="bear"><elements><rect marked="true" filled="true" color="#8D8D8D" height="57" width="75" y="35" x="119"/><circle marked="true" filled="true" color="#8D8D8D" diameter="18" cy="17" cx="172"/><circle marked="true" filled="true" color="#8D8D8D" diameter="19" cy="17" cx="153"/><rect marked="true" filled="true" color="#8D8D8D" height="31" width="31" y="58" x="189"/><rect marked="true" filled="true" color="#8D8D8D" height="0" width="3" y="95" x="199"/><rect marked="true" filled="true" color="#8D8D8D" height="11" width="100" y="93" x="108"/><rect marked="true" filled="true" color="#8D8D8D" height="13" width="116" y="101" x="101"/><rect marked="true" filled="true" color="#8D8D8D" height="23" width="127" y="107" x="95"/><rect marked="true" filled="true" color="#8D8D8D" height="118" width="135" y="122" x="91"/><rect marked="true" filled="true" color="#8D8D8D" height="13" width="127" y="236" x="96"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="74" y="89" x="120"/><rect marked="true" filled="true" color="#8D8D8D" height="11" width="118" y="247" x="102"/><rect marked="true" filled="true" color="#8D8D8D" height="26" width="23" y="255" x="192"/><rect marked="true" filled="true" color="#8D8D8D" height="31" width="26" y="252" x="105"/><rect marked="true" filled="true" color="#8D8D8D" height="7" width="13" y="276" x="129"/><rect marked="true" filled="true" color="#8D8D8D" height="5" width="16" y="276" x="210"/><circle marked="true" filled="true" color="#8D8D8D" diameter="35" cy="201" cx="77"/><circle marked="false" filled="true" color="#000000" diameter="13" cy="40" cx="176"/><rect marked="true" filled="true" color="#8D8D8D" height="21" width="36" y="163" x="213"/><rect marked="true" filled="true" color="#8D8D8D" height="3" width="8" y="166" x="247"/><rect marked="true" filled="true" color="#8D8D8D" height="1" width="10" y="172" x="248"/><rect marked="true" filled="true" color="#8D8D8D" height="5" width="15" y="178" x="247"/><circle marked="true" filled="true" color="#8D8D8D" diameter="20" cy="62" cx="208"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="big boat"><elements><polygon marked="false" filled="true" color="#9D6E48" points="1,196 43,296 193,296 297,194"/><rect marked="false" filled="true" color="#FFFFFF" height="180" width="14" y="14" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="151,14 173,18 193,30 211,48 239,88 251,118 271,170 271,184 253,176 227,170 199,172 177,180 161,190 165,160 169,122 165,78"/><polygon marked="true" filled="true" color="#8D8D8D" points="133,36 115,50 77,86 47,122 7,152 33,156 57,164 77,178 91,188"/><rect marked="true" filled="true" color="#8D8D8D" height="14" width="204" y="206" x="30"/><rect marked="true" filled="true" color="#8D8D8D" height="12" width="182" y="224" x="52"/><rect marked="true" filled="true" color="#8D8D8D" height="10" width="156" y="240" x="78"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="blank"><elements/></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="bug"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/><polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/><polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/><polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/><line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cactus"><elements><rect marked="true" filled="true" color="#8D8D8D" height="147" width="40" y="30" x="135"/><rect marked="true" filled="true" color="#8D8D8D" height="109" width="33" y="105" x="67"/><rect marked="true" filled="true" color="#8D8D8D" height="78" width="34" y="89" x="217"/><rect marked="true" filled="true" color="#8D8D8D" height="34" width="63" y="151" x="157"/><rect marked="true" filled="true" color="#8D8D8D" height="44" width="54" y="189" x="94"/><rect marked="true" filled="true" color="#8D8D8D" height="135" width="49" y="162" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="28" cy="76" cx="219"/><circle marked="true" filled="true" color="#8D8D8D" diameter="34" cy="7" cx="138"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="93" cx="67"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="145" cx="201"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="193" cx="69"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cat"><elements><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="210" y1="240" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="165" y1="300" x1="195"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="90" y1="240" x1="15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="195" y1="285" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="135" y1="300" x1="105"/><line marked="false" filled="false" color="#000000" y2="285" x2="150" y1="270" x1="150"/><line marked="false" filled="false" color="#000000" y2="120" x2="15" y1="75" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,15 285,30 255,30 225,75 195,60 255,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,135 210,135 180,150 180,45 285,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,45 120,210 180,210 180,45"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,195 165,300 240,285 255,225 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,225 195,285 165,300 150,300 150,255 165,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,195 195,165 225,150 255,135 285,135 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,135 90,135 120,150 120,45 15,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,195 135,300 60,285 45,225 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,225 105,285 135,300 150,300 150,255 135,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,195 105,165 75,150 45,135 15,135 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,120 270,90 285,15 300,15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="105" y1="285" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 30,90 15,15 0,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="0,15 15,30 45,30 75,75 105,60 45,15"/><line marked="false" filled="false" color="#000000" y2="262" x2="209" y1="262" x1="164"/><line marked="false" filled="false" color="#000000" y2="261" x2="208" y1="231" x1="223"/><line marked="false" filled="false" color="#000000" y2="262" x2="91" y1="262" x1="136"/><line marked="false" filled="false" color="#000000" y2="261" x2="92" y1="231" x1="77"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="circle 2"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/><polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/><polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow skull"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,90 75,105 60,150 75,210 105,285 195,285 225,210 240,150 225,105"/><polygon marked="false" filled="true" color="#000000" points="150,150 90,195 90,150"/><polygon marked="false" filled="true" color="#000000" points="150,150 210,195 210,150"/><polygon marked="false" filled="true" color="#000000" points="105,285 135,270 150,285 165,270 195,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,150 263,143 278,126 287,102 287,79 280,53 273,38 261,25 246,15 227,8 241,26 253,46 258,68 257,96 246,116 229,126"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,150 37,143 22,126 13,102 13,79 20,53 27,38 39,25 54,15 73,8 59,26 47,46 42,68 43,96 54,116 71,126"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cylinder"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dog"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,165 300,195 270,210 183,204 180,240 165,270 165,300 120,300 0,240 45,165 75,90 75,45 105,15 135,45 165,45 180,15 225,15 255,30 225,30 210,60 225,90 225,105"/><polygon marked="false" filled="true" color="#000000" points="0,240 120,300 165,300 165,285 120,285 10,221"/><line marked="false" filled="false" color="#000000" y2="45" x2="180" y1="60" x1="210"/><line marked="false" filled="false" color="#000000" y2="90" x2="90" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="105" x2="105" y1="90" x1="90"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="105" x1="105"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="45" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="203" x2="151" y1="203" x1="181"/><line marked="false" filled="false" color="#000000" y2="171" x2="105" y1="201" x1="150"/><circle marked="false" filled="true" color="#000000" diameter="34" cy="88" cx="171"/><circle marked="false" filled="false" color="#000000" diameter="30" cy="162" cx="261"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dot"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face happy"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face neutral"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="face sad"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/><polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="fish"><elements><polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/><polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/><polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flag"><elements><rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/><line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="flower"><elements><polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/><circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/><circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/><polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/><polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="ghost"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="30,165 13,164 -2,149 0,135 -2,119 0,105 15,75 30,75 58,104 43,119 43,134 58,134 73,134 88,104 73,44 78,14 103,-1 193,-1 223,29 208,89 208,119 238,134 253,119 240,105 238,89 240,75 255,60 270,60 283,74 300,90 298,104 298,119 300,135 285,135 285,150 268,164 238,179 208,164 208,194 238,209 253,224 268,239 268,269 238,299 178,299 148,284 103,269 58,284 43,299 58,269 103,254 148,254 193,254 163,239 118,209 88,179 73,179 58,164"/><line marked="false" filled="false" color="#000000" y2="253" x2="215" y1="253" x1="189"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="102"/><polygon marked="false" filled="true" color="#000000" points="165,105 135,105 120,120 105,105 135,75 165,75 195,105 180,120"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="160"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="heart"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="152"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 240,105 270,135 150,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 60,105 30,135 150,270"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="150" y1="270" x1="150"/><rect marked="true" filled="true" color="#8D8D8D" height="45" width="45" y="90" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="14"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="house"><elements><rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/><rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/><line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="key"><elements><rect marked="true" filled="true" color="#8D8D8D" height="30" width="195" y="120" x="90"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="255"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="180"/><circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="60" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="90" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line"><elements><line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="line half"><elements><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="2" rotatable="false" name="lines"><elements><rect marked="false" filled="true" color="#8D8D8D" height="15" width="330" y="135" x="-30"/><rect marked="false" filled="true" color="#000000" height="0" width="300" y="270" x="0"/><rect marked="false" filled="true" color="#000000" height="45" width="315" y="0" x="0"/><rect marked="false" filled="true" color="#000000" height="45" width="300" y="270" x="0"/><rect marked="false" filled="true" color="#2D8DBE" height="75" width="150" y="105" x="75"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="lobster"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="105,106 122,238 100,259 100,276 118,275 150,240 180,275 197,275 197,258 174,238 196,105 178,77 123,77 105,106"/><polygon marked="true" filled="true" color="#8D8D8D" points="112,103 84,78 105,60 94,14 85,57 78,19 67,59 76,83 110,118"/><polygon marked="true" filled="true" color="#8D8D8D" points="192,120 228,85 241,57 231,22 223,59 217,17 205,61 216,79 192,108"/><rect marked="true" filled="true" color="#8D8D8D" height="8" width="46" y="125" x="71"/><rect marked="true" filled="true" color="#8D8D8D" height="8" width="46" y="149" x="73"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="45" y="178" x="78"/><rect marked="true" filled="true" color="#8D8D8D" height="7" width="36" y="131" x="183"/><rect marked="true" filled="true" color="#8D8D8D" height="8" width="36" y="152" x="180"/><rect marked="true" filled="true" color="#8D8D8D" height="8" width="44" y="176" x="173"/><rect marked="true" filled="true" color="#8D8D8D" height="26" width="9" y="56" x="127"/><rect marked="true" filled="true" color="#8D8D8D" height="26" width="9" y="55" x="160"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="monster"><elements><rect marked="true" filled="true" color="#8D8D8D" height="145" width="136" y="100" x="77"/><rect marked="true" filled="true" color="#8D8D8D" height="30" width="24" y="243" x="189"/><rect marked="true" filled="true" color="#8D8D8D" height="29" width="24" y="242" x="78"/><rect marked="true" filled="true" color="#8D8D8D" height="120" width="24" y="119" x="59"/><rect marked="true" filled="true" color="#8D8D8D" height="121" width="22" y="118" x="203"/><rect marked="true" filled="true" color="#8D8D8D" height="35" width="39" y="123" x="225"/><rect marked="true" filled="true" color="#8D8D8D" height="7" width="10" y="124" x="262"/><rect marked="true" filled="true" color="#8D8D8D" height="7" width="10" y="133" x="263"/><rect marked="true" filled="true" color="#8D8D8D" height="11" width="8" y="145" x="263"/><rect marked="true" filled="true" color="#8D8D8D" height="34" width="42" y="122" x="19"/><rect marked="true" filled="true" color="#8D8D8D" height="5" width="10" y="125" x="9"/><rect marked="true" filled="true" color="#8D8D8D" height="5" width="9" y="135" x="11"/><rect marked="true" filled="true" color="#8D8D8D" height="5" width="11" y="146" x="9"/><rect marked="true" filled="true" color="#8D8D8D" height="22" width="109" y="79" x="89"/><rect marked="true" filled="true" color="#8D8D8D" height="47" width="64" y="35" x="112"/><rect marked="false" filled="true" color="#000000" height="12" width="14" y="41" x="122"/><rect marked="false" filled="true" color="#000000" height="14" width="18" y="39" x="149"/><circle marked="false" filled="true" color="#FFFFFF" diameter="117" cy="118" cx="82"/><polygon marked="false" filled="true" color="#000000" points="122,62 132,77 157,77 168,62"/><polygon marked="false" filled="true" color="#FFFFFF" points="140,63 135,72 127,62"/><polygon marked="false" filled="true" color="#FFFFFF" points="145,61 151,70 159,62"/><polygon marked="true" filled="true" color="#8D8D8D" points="123,17 115,34 131,34"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,15 149,33 172,34"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="moon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="175,7 83,36 25,108 27,186 79,250 134,271 205,274 281,239 207,233 152,216 113,185 104,132 110,77 132,51"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="moose"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="74,121 210,121 240,136 239,181 194,195 90,195 45,181 45,135"/><rect marked="true" filled="true" color="#8D8D8D" height="88" width="14" y="180" x="225"/><rect marked="true" filled="true" color="#8D8D8D" height="88" width="15" y="187" x="196"/><rect marked="true" filled="true" color="#8D8D8D" height="83" width="15" y="186" x="75"/><rect marked="true" filled="true" color="#8D8D8D" height="97" width="13" y="178" x="46"/><polygon marked="true" filled="true" color="#8D8D8D" points="238,138 240,107 277,107 283,102 282,85 276,82 246,79 234,63 213,64 206,128"/><circle marked="false" filled="true" color="#000000" diameter="12" cy="72" cx="225"/><polygon marked="true" filled="true" color="#8D8D8D" points="74,120 22,138 16,185 35,188 40,142"/><polygon marked="true" filled="true" color="#8D8D8D" points="235,65 230,50"/><polygon marked="true" filled="true" color="#8D8D8D" points="232,64 240,49 283,49 293,41 294,12 278,40 262,40 265,14 251,39 234,39 236,16 222,66 232,64"/><polygon marked="true" filled="true" color="#8D8D8D" points="224,64 203,17 205,38 189,38 178,16 179,38 164,38 148,11 149,38 156,47 203,47 214,66"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="outline"><elements><rect marked="true" filled="true" color="#8D8D8D" height="15" width="300" y="0" x="0"/><rect marked="true" filled="true" color="#8D8D8D" height="315" width="45" y="-15" x="-15"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="330" y="-30" x="-15"/><rect marked="true" filled="true" color="#8D8D8D" height="75" width="15" y="-75" x="0"/><rect marked="true" filled="true" color="#8D8D8D" height="30" width="300" y="285" x="0"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pentagon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="person"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="pickup truck"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="285,208 285,178 279,164 261,144 229,132 217,132 213,106 199,84 171,68 149,68 129,68 129,148 1,148 1,156 19,164 19,222 285,222 283,174 283,176"/><circle marked="false" filled="true" color="#000000" diameter="71" cy="185" cx="40"/><circle marked="false" filled="true" color="#000000" diameter="66" cy="191" cx="192"/><circle marked="true" filled="true" color="#8D8D8D" diameter="59" cy="194" cx="195"/><circle marked="true" filled="true" color="#8D8D8D" diameter="64" cy="188" cx="43"/><polygon marked="false" filled="true" color="#000000" points="197,94 149,94 157,128 209,128 205,112 203,102 197,94"/><polygon marked="true" filled="true" color="#8D8D8D" points="21,142 139,142 139,136 13,136"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="plant"><elements><rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="spacecraft"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 180,135 255,255 225,240 150,180 75,240 45,255 120,135"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="square 2"><elements><rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/><rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="teddy bear"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="81" cy="21" cx="110"/><circle marked="true" filled="true" color="#8D8D8D" diameter="39" cy="7" cx="97"/><circle marked="true" filled="true" color="#8D8D8D" diameter="39" cy="5" cx="171"/><polygon marked="true" filled="true" color="#8D8D8D" points="133,88 95,117 95,225 119,247 188,248 215,224 215,116 170,91"/><circle marked="true" filled="true" color="#8D8D8D" diameter="34" cy="238" cx="134"/><polygon marked="true" filled="true" color="#8D8D8D" points="197,113 249,88 261,91 268,106 262,116 205,139 197,113"/><polygon marked="true" filled="true" color="#8D8D8D" points="115,116 66,90 54,93 45,110 50,117 103,145 115,116"/><polygon marked="true" filled="true" color="#8D8D8D" points="104,204 54,233 54,244 63,257 71,256 117,227"/><polygon marked="true" filled="true" color="#8D8D8D" points="194,228 240,255 248,254 260,238 257,231 204,207 194,228"/><circle marked="false" filled="true" color="#FFFFFF" diameter="20" cy="41" cx="124"/><circle marked="false" filled="true" color="#FFFFFF" diameter="20" cy="42" cx="158"/><line marked="false" filled="false" color="#000000" y2="85" x2="150" y1="75" x1="127"/><line marked="false" filled="false" color="#000000" y2="72" x2="177" y1="85" x1="151"/><polygon marked="false" filled="true" color="#FFFFFF" points="152,204 115,167 131,150 150,168 168,152 184,167"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="tree"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/><rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/><circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/><circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/><circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="triangle 2"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/><polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="truck"><elements><rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/><polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/><rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/><polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/><circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/><circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="turtle"><elements><polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/><polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/><polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/><polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/><polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/><polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wolf"><elements><rect marked="true" filled="true" color="#8D8D8D" height="60" width="90" y="105" x="195"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="60" y="90" x="195"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,90 217,44 196,90"/><polygon marked="false" filled="true" color="#000000" points="233,90 218,59 203,89"/><rect marked="false" filled="true" color="#FFFFFF" height="12" width="11" y="93" x="241"/><rect marked="false" filled="true" color="#000000" height="5" width="4" y="96" x="245"/><rect marked="false" filled="true" color="#000000" height="14" width="15" y="121" x="285"/><rect marked="false" filled="true" color="#000000" height="15" width="45" y="136" x="240"/><polygon marked="false" filled="true" color="#FFFFFF" points="285,136 277,149 269,136"/><polygon marked="false" filled="true" color="#FFFFFF" points="270,151 263,136 257,151"/><rect marked="true" filled="true" color="#8D8D8D" height="75" width="158" y="120" x="37"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="151" y="195" x="41"/><rect marked="true" filled="true" color="#8D8D8D" height="9" width="138" y="201" x="48"/><rect marked="true" filled="true" color="#8D8D8D" height="4" width="123" y="210" x="57"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="140" y="114" x="45"/><rect marked="true" filled="true" color="#8D8D8D" height="6" width="120" y="108" x="52"/><rect marked="true" filled="true" color="#8D8D8D" height="3" width="75" y="105" x="75"/><rect marked="true" filled="true" color="#8D8D8D" height="56" width="23" y="214" x="145"/><rect marked="true" filled="true" color="#8D8D8D" height="10" width="22" y="260" x="168"/><rect marked="true" filled="true" color="#8D8D8D" height="56" width="22" y="214" x="68"/><rect marked="true" filled="true" color="#8D8D8D" height="10" width="21" y="260" x="90"/><line marked="true" filled="false" color="#8D8D8D" y2="155" x2="19" y1="127" x1="37"/><line marked="true" filled="false" color="#8D8D8D" y2="192" x2="19" y1="155" x1="19"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="x"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/></elements></turtleShape></shapes><code><![CDATA[globals [
  ;; the patch color that will signify a favored event.
  target-color

  ;; the patch color that will signify an unfavored event
  other-color

  ;; list of colors of all patches in the graphic window.
  pcolor-list

  ;; list of positions, in the graphic window, of all patches with the target-color
  ;; (the positions begin at the top-left corner, run across to the left, and then
  ;; hop to the beginning of the second-from-top row, and so on)
  target-color-list

  ;; list of the differences between each two consecutive patches with the target color
  ;; for instance, if the first three items in the target-color-list are 4, 9, and 11,
  ;; then the first two items in the target-color-differences-list will be 5 (9 - 4) and 2 (11 - 9)
  target-color-differences-list

  ;; cumulative list of consecutive blocks of successes of 1 or more
  target-color-successive-list

  just-started? ;; Boolean variable that indicates in Go if this is the first time through

  shape-names              ;; list of shapes of prizes
  colors                   ;; list of colors of prizes
  max-possible-codes       ;; number of shape/color combinations
  ]

;; lines are either straight "lines" with a circle in the center, representing a failed event
;; or "outlines" if they are a target event
;; prizes are the icons that appear inside the outlines
breed [ lines line ]
breed [ prizes prize ]


patches-own [
  ;; num is the a running number beginning from 0 at the top-left corner,
  ;; then running across the top row, then to the next row, etc.
  num

  next-patch ;; patch that is the "right" neighbor
  previous-patch ;;patch that is the "left" neighbor

  ;; steps-to-me shows, for a white patch, how many steps there are from the previous white patch up to it
  steps-to-me
]


to initialize
  clear-all
  set target-color yellow
  set other-color black
  set target-color-differences-list []
  set target-color-successive-list []
  set just-started? true
  setup-colors-and-shapes
  set-plot-range
end

to setup
  initialize
  ask patches  ;;set up
  [
    set steps-to-me 0
    sprout 1 [ set breed lines set shape "lines" set label-color black ]
    sprout 1 [ set breed prizes set size 0.5 set shape "blank"]
  ]
  assign-neighbors
  distribute-prizes
  count-steps-to-colored-patches
  collect-data
  re-label
  reset-ticks
  do-plot
end

to go
  ask patches [ set steps-to-me 0 ]

  if just-started?
  [
    clear-plot
    set-plot-range
    set just-started? false
    set target-color-differences-list []
    set target-color-successive-list []
  ]

  shuffle-prizes
  tick
  count-steps-to-colored-patches
  re-label
  ask prizes [
  ifelse prize-shapes?
    [ show-turtle ]
    [ hide-turtle ]
  ]
  collect-data
  do-plot
end

to setup-colors-and-shapes
  set shape-names ["box" "star" "target" "cat" "dog"
                   "butterfly" "leaf" "car" "airplane"
                   "monster" "key" "cow skull" "ghost"
                   "cactus" "moon" "heart"]
  set colors      [ gray   brown   green  sky  blue violet orange ]
  set colors lput ( gray - 2 ) colors
  set colors lput ( green - 2 ) colors
  set colors lput ( blue + 2 ) colors
  set colors lput ( red - 2 ) colors
  set colors lput ( turquoise - 1 ) colors
  set colors lput ( lime - 1 ) colors
  set colors lput ( cyan - 2 ) colors
  set colors lput ( magenta - 1 ) colors
end

;; assign patches "next" and "previous" patches
;; patches essentially form a circular doubly linked list
to assign-neighbors
  let i 0
  ask patches
    [ set num i
      set i i + 1

      ;;if we are at the edge, wrap around to determine the NEXT neighbor
      ifelse pxcor = max-pxcor
      [
        ifelse pycor = min-pycor
          ;;if we are in the lower right corner, next neighbor is upper left
          [ set next-patch patch min-pxcor max-pycor ]
          ;;if we are all the way to the right, the next neighbor is one row below, on right
          [ set next-patch patch min-pxcor ( pycor - 1 ) ]
      ]
      [ set next-patch patch-at 1 0 ]

      ;;if we are at the edge, wrap around to determine the PREVIOUS neighbor
      ifelse pxcor = min-pxcor
      [
        ifelse pycor = ( max-pycor )
          ;;if we are in the upper left corner, previous neighbor is lower right
          [ set previous-patch patch ( max-pxcor ) min-pycor ]
          ;;if we are in the upper left corner, previous neighbor is lower right
          [ set previous-patch patch ( max-pxcor ) ( pycor + 1 ) ]
      ]
        [ set previous-patch patch-at -1 0 ]
    ]
end

;; creates a uniform distribution of prizes patches according to the setting of 'average-distance'
to distribute-prizes
  ask patches with [ num mod average-distance = 0 ] [
      ask one-of lines-here [ set shape "outline" ]
      ask one-of prizes-here [
         set shape one-of shape-names set color one-of colors
         if (not prize-shapes?)
            [hide-turtle]
     ]
      set pcolor target-color
    ]
end


;; each target-colored patch swaps its prize's shape and color with a randomly chosen
;; other-colored patch. the target-colored cell is then replaced with a line shape and other-color.
to shuffle-prizes
  ask patches with [pcolor = target-color]
  [
    let prize1 one-of prizes-here
    ask one-of patches with [pcolor = other-color]
    [
      set pcolor target-color
      ask one-of lines-here [ set shape "outline" ]
      ask one-of prizes-here [ set color [color] of prize1
                               set shape [shape] of prize1 ]
    ]
    set pcolor other-color
    ask one-of lines-here [ set shape "lines" ]
    ask one-of prizes-here [ set shape "blank" ]
  ]
end

;; gathers histogram information
to collect-data
  set target-color-differences-list
    sentence ( [ steps-to-me ] of patches with [ steps-to-me > 0 ] ) target-color-differences-list
  set target-color-successive-list
    sentence ( [ consecutive-targets 0 ] of patches with [ pcolor = target-color and patch-at -1 0 != target-color ]
    ) target-color-successive-list
end

to count-steps-to-colored-patches
  ask patches with [ pcolor = target-color ] [ set steps-to-me step-count 0 ]
end


;; patch procedure
;; counts the number of previous patches that aren't the target-color
to-report step-count [previous-count]
   ifelse [pcolor] of previous-patch != target-color
     [ report [ 1 + step-count previous-count ] of previous-patch ]
     [ report 1 ]
end

;; patch procedure
;; counts the number of consecutive patches with prizes
to-report consecutive-targets [num-previous-targets]
   ifelse [pcolor] of next-patch = target-color
     [ report [ 1 + consecutive-targets num-previous-targets ] of next-patch ]
     [ report 1 ]
end

;; procedures for determining the mean ratio between consecutive columns in a histogram list
;; The logic is to create one list of all the columns heights and from that list create
;; a copy of it with the first item missing. Then we can 'map' one list onto the other
;; so that each item in one list divides an item in the other list that is in the corresponding position.
;; Also, we don't want columns that have zero items in them, because we cannot divide by zero.
;; Finally, we don't use more columns than is indicated by the value of the 'truncate-columns' slider.
to-report relative-heights [ listerama ]
  if listerama = []
    [ report "N/A" ]
  let binned-list but-first bin-list listerama
  let stop-bin min (list (position 0 binned-list) (position 1 binned-list) truncate-after-column)
  if stop-bin = 0  ;; if the smallest bin is 0, we cannot calculate relative-heights
    [ report "N/A" ]
  let list-of-divisors first-n stop-bin binned-list
  let list-of-dividends list-of-divisors
  set list-of-divisors but-last list-of-divisors
  set list-of-dividends but-first list-of-dividends
  if empty? list-of-divisors  ;; if there are no divisors (or similarly, dividends)
    [ report "N/A" ]            ;; it is not possible to calculate relative-heights
  report mean ( map [ [dividend divisor] -> dividend / divisor ] list-of-dividends list-of-divisors )
end

to-report first-n [index full-list]
  ifelse (index > 0 and not empty? full-list)
    [ report sentence ( first full-list ) ( first-n ( index - 1 ) ( butfirst full-list ) ) ]
    [ report [] ]
end

to-report bin-list [input-list]
  if input-list = [] [ report [] ]
  let result []
  let bin 0
  foreach range (max input-list + 1) [ n ->
    set bin n
    set result lput ( length filter [ input -> input = bin ] input-list ) result
  ]
  report result
end

;; after a shuffle, the number labels are updated
to re-label
  ask lines [
    ifelse label? [
      if steps-to-me > 0 [
        set color black
        set label steps-to-me
      ]
    ]
    [ set label "" ]
  ]
end

;; code for plotting outcomes as histograms
to set-plot-range
  set-current-plot "Frequency of Distances to Prizes"
  set-plot-x-range 1 ( 5 * average-distance )
  set-current-plot "Frequency of Streaks by Length"
  ;; the following line uses a "magic number". The code used to be "15 - average-distance"
  ;; but that crashes when a user resets the average-distance slider to a higher maximum.
  set-plot-x-range 1 ( average-distance + round ( 20 / average-distance ) )
end

to do-plot
  set-current-plot "Frequency of Distances to Prizes"
  histogram target-color-differences-list
  let maxbar modes target-color-differences-list
  let maxrange length ( filter [ difference -> difference = item 0 maxbar ] target-color-differences-list )
  set-plot-y-range 0 max list 10 maxrange

  set-current-plot "Frequency of Streaks by Length"
  histogram target-color-successive-list
  set maxbar modes target-color-successive-list
  set maxrange length ( filter [ successive -> successive = item 0 maxbar ] target-color-successive-list )
  set-plot-y-range 0 max list 10 maxrange
end


; Copyright 2004 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings/><hubnet/></model>
