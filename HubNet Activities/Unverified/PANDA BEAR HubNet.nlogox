<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><manual/></previewCommands><info><![CDATA[## WHAT IS IT?

Perimeters and Areas by Embodied Agent Reasoning, or PANDA BEAR, is a microworld for mathematics learning that lies at the intersection of dynamic geometry environments and participatory simulation activities. In PANDA BEAR, individual students identify with and control a single vertex of a shared, group-polygon.

The measures of perimeter and area of the group-polygon are foregrounded in the environment. Group-level challenges involving the perimeter and area that cannot be solved by one individual are issued by the activity leader to the students. Through the communication of ideas and strategies with each other, the students collaboratively build solutions for the challenges.

## HOW TO USE IT

### Server interface

SETUP is run automatically when the activity is opened, and can be run whenever the teacher wants to clear the links comprising a group-polygon and prepare students to be formed into a different polygon when EDGIFY is pressed next. GO is the main button for allowing students to log in and move around. After the EDGIFY button has been pressed, the students will all be connected in a single group-polygon. When the students are connected, the PERIMETER and AREA monitors update automatically as students move their vertices around. The PANDA plot shows both of those measures over time as a record of the group's actions as they work towards a goal. SETUP-PLOT resets the plot to start a new challenge with the same group-polygon. To force all students' clients to exit the activity and re-enter, the teacher can press the RESET button on the HubNet Control Center.

### Client interface

The client interface allows each student to control one vertex in the group-polygon. The YOU ARE A: monitor shows a description of the shape and color of the vertex the student is controlling. CHANGE APPEARANCE changes the vertex's shape and color. The LOCATED AT: monitor shows the current coordinates of the student's vertex. The HEADING: monitor shows the current heading of the student's vertex - that is, the direction in which the vertex travels if asked to move forward. The PERIMETER: and AREA: monitors show the current measures of the group-polygon. The FD (forward), BK (back), LT (right-turn), and RT (right-turn) buttons change the student's vertex's location and heading. The STEP-SIZE and TURN-AMOUNT input boxes control the amount of movement of the FD, BK, LT, and RT buttons. The GET-CENTERED button rounds the student's vertex's x and y coordinates to the nearest integer, which can be helpful for coordinating with other students.

## THINGS TO NOTICE

In a triangle, for an individual vertex, moving "between" the other two vertices minimizes the perimeter for a given area.

In a triangle, when all three vertices attempt to form an isosceles triangle, an equilateral triangle is formed.

Strategies that work for challenges at the triangle level often work at the square level as well.

As the number of vertices is increased, the polygon that maximizes the area given a perimeter and minimizes the perimeter given an area gets closer and closer to a circle.

## THINGS TO TRY

With three students (and so, three vertices), ask the students to make the area as big as possible while keeping the perimeter at or below 25.

With three students (and so, three vertices), ask the students to make the perimeter as small as possible while keeping the area at or above 25.

Increase the number of students in the polygon from three to four (and beyond - approaching a circle) and issue similar challenges.

Modify the challenges in a patterned way. For example, with four students, doubling the allowed perimeter should quadruple the maximum area.

## EXTENDING THE MODEL

Add vertices that the students can't control.

Add different methods of movement. For example, instead of turning and going forward and backward, the students could be allowed to move in the 4 cardinal directions or with a mouse.

Allow the students to give their vertex movement rules to follow over and over so that the group-polygon "dances".

## NETLOGO FEATURES

This model uses links to form the sides of the polygon; each vertex is linked to exactly two other vertices.  The sum of the lengths of all the links is the perimeter of the polygon.

The area calculation is based on information found here: http://mathworld.wolfram.com/PolygonArea.html

## RELATED MODELS

PANDA BEAR Solo

## CREDITS AND REFERENCES

Thanks to Josh Unterman for his work on this model.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Unterman, J. and Wilensky, U. (2007).  NetLogo HubNet PANDA BEAR HubNet model.  http://ccl.northwestern.edu/netlogo/models/HubNetPANDABEARHubNet.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2007 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2007 Cite: Unterman, J. -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="true" fontSize="20" bottom="569" right="888" top="10" left="330"><dimensions maxPycor="5" minPycor="-5" maxPxcor="5" minPxcor="-5" wrapInY="false" wrapInX="false" patchSize="50.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button ticksEnabled="false" forever="true" bottom="48" right="202" top="15" left="107"><source><![CDATA[go]]></source></button><button ticksEnabled="false" forever="false" bottom="48" right="299" top="15" left="204"><source><![CDATA[ask links [ die ]
ifelse count students > 2
[ ask one-of students [ edgify ] ]
[ user-message "You need at least 3 students to edgify" ]]]></source><display><![CDATA[edgify]]></display></button><button ticksEnabled="false" forever="false" bottom="48" right="105" top="15" left="10"><source><![CDATA[setup]]></source></button><plot bottom="385" right="315" top="130" left="10" ymax="10.0" ymin="0.0" xmax="10.0" xmin="0.0" legendOn="true" autoPlotOn="true"><display><![CDATA[PANDA]]></display><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-2064490" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[if any? links [ plot perimeter ]]]></update><display><![CDATA[perimeter]]></display></pen><pen inLegend="true" color="-8630108" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[if any? links [ plot area ]]]></update><display><![CDATA[area]]></display></pen></pens></plot><monitor precision="3" fontSize="11" bottom="110" right="206" top="65" left="111"><source><![CDATA[less-precise perimeter]]></source><display><![CDATA[perimeter]]></display></monitor><monitor precision="3" fontSize="11" bottom="110" right="303" top="65" left="208"><source><![CDATA[less-precise area]]></source><display><![CDATA[area]]></display></monitor><button ticksEnabled="false" forever="false" bottom="102" right="106" top="69" left="11"><source><![CDATA[setup-plot]]></source></button></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="true" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="android"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="210,90 240,195 210,210 165,90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="3" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,88 120,193 105,240 105,298 135,300 150,210 165,300 195,298 195,240 180,193 195,88"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="81" x="127"/><rect marked="false" filled="true" color="#000000" height="27" width="30" y="33" x="135"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,90 60,195 90,210 135,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="butterfly"><elements><rect marked="true" filled="true" color="#8D8D8D" height="89" width="115" y="135" x="92"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="158"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="8"/><line marked="false" filled="false" color="#000000" y2="189" x2="253" y1="189" x1="43"/><rect marked="true" filled="true" color="#8D8D8D" height="225" width="30" y="60" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="105"/><line marked="true" filled="false" color="#8D8D8D" y2="60" x2="135" y1="30" x1="120"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="180" y1="60" x1="165"/><line marked="false" filled="false" color="#000000" y2="285" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="165" y1="285" x1="165"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="cactus"><elements><rect marked="true" filled="true" color="#8D8D8D" height="147" width="40" y="30" x="135"/><rect marked="true" filled="true" color="#8D8D8D" height="109" width="33" y="105" x="67"/><rect marked="true" filled="true" color="#8D8D8D" height="78" width="34" y="89" x="217"/><rect marked="true" filled="true" color="#8D8D8D" height="34" width="63" y="151" x="157"/><rect marked="true" filled="true" color="#8D8D8D" height="44" width="54" y="189" x="94"/><rect marked="true" filled="true" color="#8D8D8D" height="135" width="49" y="162" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="28" cy="76" cx="219"/><circle marked="true" filled="true" color="#8D8D8D" diameter="34" cy="7" cx="138"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="93" cx="67"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="145" cx="201"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="193" cx="69"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="cat"><elements><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="210" y1="240" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="165" y1="300" x1="195"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="90" y1="240" x1="15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="195" y1="285" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="135" y1="300" x1="105"/><line marked="false" filled="false" color="#000000" y2="285" x2="150" y1="270" x1="150"/><line marked="false" filled="false" color="#000000" y2="120" x2="15" y1="75" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,15 285,30 255,30 225,75 195,60 255,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,135 210,135 180,150 180,45 285,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,45 120,210 180,210 180,45"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,195 165,300 240,285 255,225 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,225 195,285 165,300 150,300 150,255 165,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,195 195,165 225,150 255,135 285,135 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,135 90,135 120,150 120,45 15,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,195 135,300 60,285 45,225 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,225 105,285 135,300 150,300 150,255 135,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,195 105,165 75,150 45,135 15,135 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,120 270,90 285,15 300,15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="105" y1="285" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 30,90 15,15 0,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="0,15 15,30 45,30 75,75 105,60 45,15"/><line marked="false" filled="false" color="#000000" y2="262" x2="209" y1="262" x1="164"/><line marked="false" filled="false" color="#000000" y2="261" x2="208" y1="231" x1="223"/><line marked="false" filled="false" color="#000000" y2="262" x2="91" y1="262" x1="136"/><line marked="false" filled="false" color="#000000" y2="261" x2="92" y1="231" x1="77"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="cow skull"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,90 75,105 60,150 75,210 105,285 195,285 225,210 240,150 225,105"/><polygon marked="false" filled="true" color="#000000" points="150,150 90,195 90,150"/><polygon marked="false" filled="true" color="#000000" points="150,150 210,195 210,150"/><polygon marked="false" filled="true" color="#000000" points="105,285 135,270 150,285 165,270 195,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,150 263,143 278,126 287,102 287,79 280,53 273,38 261,25 246,15 227,8 241,26 253,46 258,68 257,96 246,116 229,126"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,150 37,143 22,126 13,102 13,79 20,53 27,38 39,25 54,15 73,8 59,26 47,46 42,68 43,96 54,116 71,126"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dog"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,165 300,195 270,210 183,204 180,240 165,270 165,300 120,300 0,240 45,165 75,90 75,45 105,15 135,45 165,45 180,15 225,15 255,30 225,30 210,60 225,90 225,105"/><polygon marked="false" filled="true" color="#000000" points="0,240 120,300 165,300 165,285 120,285 10,221"/><line marked="false" filled="false" color="#000000" y2="45" x2="180" y1="60" x1="210"/><line marked="false" filled="false" color="#000000" y2="90" x2="90" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="105" x2="105" y1="90" x1="90"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="105" x1="105"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="45" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="203" x2="151" y1="203" x1="181"/><line marked="false" filled="false" color="#000000" y2="171" x2="105" y1="201" x1="150"/><circle marked="false" filled="true" color="#000000" diameter="34" cy="88" cx="171"/><circle marked="false" filled="false" color="#000000" diameter="30" cy="162" cx="261"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="ghost"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="30,165 13,164 -2,149 0,135 -2,119 0,105 15,75 30,75 58,104 43,119 43,134 58,134 73,134 88,104 73,44 78,14 103,-1 193,-1 223,29 208,89 208,119 238,134 253,119 240,105 238,89 240,75 255,60 270,60 283,74 300,90 298,104 298,119 300,135 285,135 285,150 268,164 238,179 208,164 208,194 238,209 253,224 268,239 268,269 238,299 178,299 148,284 103,269 58,284 43,299 58,269 103,254 148,254 193,254 163,239 118,209 88,179 73,179 58,164"/><line marked="false" filled="false" color="#000000" y2="253" x2="215" y1="253" x1="189"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="102"/><polygon marked="false" filled="true" color="#000000" points="165,105 135,105 120,120 105,105 135,75 165,75 195,105 180,120"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="160"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="heart"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="152"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 240,105 270,135 150,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 60,105 30,135 150,270"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="150" y1="270" x1="150"/><rect marked="true" filled="true" color="#8D8D8D" height="45" width="45" y="90" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="14"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="key"><elements><rect marked="true" filled="true" color="#8D8D8D" height="30" width="210" y="120" x="90"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="270"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="195"/><circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="60" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="90" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="monster"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 90,195 210,195 225,150 255,120 255,45 180,0 120,0 45,45 45,120"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="165"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="75"/><polygon marked="true" filled="true" color="#8D8D8D" points="225,150 285,195 285,285 255,300 255,210 180,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 15,195 15,285 45,300 45,210 120,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="210,210 225,285 195,285 165,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,210 75,285 105,285 135,165"/><rect marked="true" filled="true" color="#8D8D8D" height="105" width="30" y="165" x="135"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="moon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="175,7 83,36 25,108 27,186 79,250 134,271 205,274 281,239 207,233 152,216 113,185 104,132 110,77 132,51"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape></shapes><code><![CDATA[;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Variable and Breed declarations ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

globals [
  ;; variables used to assign unique color and shape to clients
  shape-names        ;; list that holds the names of the shapes a student's turtle can have
  colors             ;; list that holds the colors used for students' turtles
  color-names        ;; list that holds the names of the colors used for students' turtles
  used-shape-colors  ;; list that holds the shape-color pairs that are already being used
  max-possible-codes ;; total number of possible unique shape/color combinations
]

breed [ students student ]  ;; created and controlled by the clients, also vertices in the polygon

students-own [
  user-id      ;; unique id, input by the client when they log in, to identify each student turtle
  step-size    ;; the current value of the STEP-SIZE input box on the client
  turn-amount  ;; the current value of the TURN-AMOUNT input box on the client
  next-student ;; points to the next student in the polygon (used when calculating area)
]

;;;;;;;;;;;;;;;;;;;;;
;; Setup Functions ;;
;;;;;;;;;;;;;;;;;;;;;

to startup
  hubnet-reset
  setup-vars
  setup
end

;; Deletes polygon sides, and shuffles the order of students
;; so that polygon is rearranged when edgify is next pressed.
;; Also initializes the plot.
to setup
  ask links [ die ]
  ask students [ set label "" ]
  send-info-to-all-clients
  reset-ticks
end

;; initialize global variables
to setup-vars
  set shape-names [
    "airplane"
    "android"
    "butterfly"
    "cactus"
    "cat"
    "cow skull"
    "ghost"
    "heart"
    "leaf"
    "monster"
  ]
  set colors (list brown green (violet + 1) (sky - 1))
  set color-names ["brown" "green" "purple" "blue"]
  set max-possible-codes (length colors * length shape-names)
  set used-shape-colors []
end

;; initialize the plot
to setup-plot
  set-current-plot "PANDA"
  clear-plot
end

;;;;;;;;;;;;;;;;;;;;;;;
;; Runtime Functions ;;
;;;;;;;;;;;;;;;;;;;;;;;

to go
  every 0.1 [
    ;; get commands from the clients,
    ;; execute them,
    ;; and send the clients new data
    listen-clients
    display-angles-and-lengths
    tick
  ]
end

to display-angles-and-lengths
  if any? links
  [
    ask links [
      set label less-precise link-length
    ]
    ask students [
      if any? link-neighbors [
        ;; make sure the angle is positive
        let angle (subtract-headings towards first sort link-neighbors towards last sort link-neighbors) mod 360
        ;; make sure the angle is the interior angle
        if angle > 180 [ set angle 360 - angle ]
        set label less-precise angle
      ]
    ]
  ]
end

;; recursive procedure that links all the vertices together
;; one at a time.
to edgify  ;; student procedure
  ;; each student is linked to once and then, in turn links to
  ;; another student that has not yet been linked, when we
  ;; run out of students we've made a line and we just need
  ;; to close the polygon by linking back to the beginning
  let candidates other students with [ not any? link-neighbors ]
  ifelse any? candidates
  [
    set next-student one-of candidates
    create-link
    ask next-student [ edgify ]
  ]
  [
    set next-student one-of other students with [ count link-neighbors = 1 ]
    create-link
  ]
end

to create-link
  create-link-with next-student [
    set color white
    set label-color white
  ]
end

to-report perimeter
  report sum [link-length] of links
end

;; this area calculation is based on the formula found here:
;; http://mathworld.wolfram.com/PolygonArea.html
to-report area
  let result 0
  ask students [
    let addend ((xcor * [ycor] of next-student) -
                (ycor * [xcor] of next-student))
    set result result + addend
  ]
  report abs (result / 2)
end

;;; used to keep the clients from having too much cluttering detail
to-report less-precise [ precise-num ]
  report precision precise-num 1
end

;;;;;;;;;;;;;;;;;;;;;;;
;; HubNet Procedures ;;
;;;;;;;;;;;;;;;;;;;;;;;

;; determines which client sent a command, and what the command was
to listen-clients
  while [ hubnet-message-waiting? ]
  [
    hubnet-fetch-message
    ifelse hubnet-enter-message?
    [ create-new-student ]
    [
      ifelse hubnet-exit-message?
      [ remove-student ]
      [
        ask students with [user-id = hubnet-message-source]
        [
          execute-command hubnet-message-tag
          send-info-to-all-clients
        ]
      ]
    ]
  ]
end

;; executes the correct command sent by client
to execute-command [command]
  if command = "Change Appearance"
  [ change-turtle stop ]
  if command = "Fd"
  [ move 1 stop ]
  if command = "Bk"
  [ move -1 stop ]
  if command = "Rt"
  [ rt turn-amount stop ]
  if command = "Lt"
  [ lt turn-amount stop ]
  if command = "Get Centered" [
    setxy round xcor round ycor
    stop
  ]
  if command = "step-size" [
    set step-size hubnet-message
    stop
  ]
  if command = "turn-amount" [
    set turn-amount hubnet-message
    stop
  ]
end

to move [ direction ] ;; student procedure
  let new-xcor (xcor + step-size * (dx * direction))
  let new-ycor (ycor + step-size * (dy * direction))
  ;; don't end up at the same place as any other students
  if not any? students with [xcor = new-xcor and ycor = new-ycor] [
    fd step-size * direction
    update-plots
  ]
  display
end

;; Create a turtle, set its shape, color, and position
;; and tell the node what its turtle looks like and where it is
to create-new-student
  create-students 1 [
    setup-student-vars
    if any? links [
      edgify
      update-plots
    ]
    send-info-to-client
  ]
end

;; sets the turtle variables to appropriate initial values
to setup-student-vars  ;; turtle procedure
  set user-id hubnet-message-source
  set-unique-shape-and-color
  setxy random-xcor random-ycor
  set heading 0
  set step-size 1
  set turn-amount 90
  set label-color white
end

;; Kill the turtle, set its shape, color, and position
;; and tell the node what its turtle looks like and where it is
to remove-student
  ask students with [user-id = hubnet-message-source] [
    set used-shape-colors remove my-code used-shape-colors
    die
  ]
  ;; when a student leaves if there is already a polygon
  ;; automatically make a new one if there are
  ;; enough students
  ifelse any? links and count students > 2
  [
    ask links [ die ]
    ask one-of students [ edgify ]
  ]
  [
    ;; if we don't have at least 3 students
    ;; dismantle the polygon since it is no longer a polygon
    ask links [ die ]
    ask students [ set label "" ]
  ]
  update-plots
end

to send-info-to-all-clients
  ask students [
    send-info-to-client
  ]
end

;; sends the appropriate monitor information back to the client
to send-info-to-client ;; student procedure
  hubnet-send user-id "You are a:" (word (color-string color) " " shape)
  hubnet-send user-id "Located at:" (word "(" less-precise xcor "," less-precise ycor ")")
  hubnet-send user-id "Heading:" heading
  ;; if there are no links perimeter and area don't apply
  hubnet-send user-id "Perimeter:" ifelse-value any? links [ less-precise perimeter ] [ "" ]
  hubnet-send user-id "Area:" ifelse-value any? links [ less-precise area ] [ "" ]
end

to change-turtle ;; student procedure
  set used-shape-colors remove my-code used-shape-colors
  set-unique-shape-and-color
end

;; pick a base-shape and color for the turtle
to set-unique-shape-and-color ;; student procedure
  let code random max-possible-codes
  while [member? code used-shape-colors and count students < max-possible-codes]
  [
    set code random max-possible-codes
  ]
  set used-shape-colors (lput code used-shape-colors)
  set shape item (code mod length shape-names) shape-names
  set color item (code / length shape-names) colors
end

;; report the string version of the turtle's color
to-report color-string [color-value]
  report item (position color-value colors) color-names
end

;; translates a student turtle's shape and color into a code
to-report my-code ;; student procedure
  report (position shape shape-names) + (length shape-names) * (position color colors)
end


; Copyright 2007 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings/><hubnet><view bottom="560" right="772" top="10" left="222"><dimensions maxPycor="5" minPycor="-5" maxPxcor="5" minPxcor="-5"/></view><monitor precision="3" bottom="166" right="120" top="117" left="33"><display><![CDATA[Located at:]]></display></monitor><monitor precision="3" bottom="69" right="181" top="20" left="31"><display><![CDATA[You are a:]]></display></monitor><button bottom="100" right="181" top="67" left="31"><display><![CDATA[Change Appearance]]></display></button><button actionKey="W" bottom="259" right="144" top="226" left="81"><display><![CDATA[Fd]]></display></button><button actionKey="A" bottom="292" right="81" top="259" left="18"><display><![CDATA[Lt]]></display></button><button actionKey="D" bottom="292" right="207" top="259" left="144"><display><![CDATA[Rt]]></display></button><button actionKey="S" bottom="292" right="144" top="259" left="81"><display><![CDATA[Bk]]></display></button><monitor precision="3" bottom="166" right="181" top="117" left="121"><display><![CDATA[Heading:]]></display></monitor><monitor precision="1" bottom="216" right="108" top="167" left="34"><display><![CDATA[Perimeter:]]></display></monitor><monitor precision="1" bottom="216" right="181" top="167" left="109"><display><![CDATA[Area:]]></display></monitor><numericInput bottom="361" right="194" top="301" left="113"><variable><![CDATA[turn-amount]]></variable><numericData kind="number"><![CDATA[90.0]]></numericData></numericInput><numericInput bottom="361" right="112" top="301" left="31"><variable><![CDATA[step-size]]></variable><numericData kind="number"><![CDATA[1.0]]></numericData></numericInput><button bottom="404" right="167" top="371" left="61"><display><![CDATA[Get Centered]]></display></button></hubnet></model>
