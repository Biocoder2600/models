<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/6.1"><version><![CDATA[NetLogo 6.0.2]]></version><previewCommands><manual/></previewCommands><info><![CDATA[## WHAT IS IT?

This model is a HubNet version of the Prisoner's Dilemma.  The Prisoner's Dilemma is a famous game-theory situation that models the costs and benefits of collaboration or treason between free agents where there is a struggle over some capital.

The game has implications for a variety of social situations that involve negotiations in the absence of absolute trust between agents, such as in politics and economics. The game is a succession of interactions between agents, with each agent trying to maximize personal gains over all interactions. In this game, aggressive behavior is not necessarily the best strategy for maximizing personal gains. The rules of the game are such that agents are penalized when behaving aggressively in interacting with another aggressive agent, At each interaction between agents, each agent decides whether to 'cooperate' or 'defect.' These household terms in economics come from the following hypothetical situation.

The Prisoner's Dilemma presents an interesting problem: if you and your accomplice in crime are imprisoned, then in order to minimize the overall jail time you should cooperate with your partner by remaining silent and not confessing.  However, you may choose to defect the unsaid "contract" with your partner by confessing.Let's assume you have confessed. If your partner does not confess you will go free.  If your partner confesses, you will go to jail for three years, much better than the five you would have earned had you refused to confess.  Unfortunately, your partner is in the same position.  Acting rationally in the short term, you will both be worse off. For more introductory information, please refer in the NetLogo models library to the PD BASIC model found in the PRISONER'S DILEMMA suite. Note also that in this model, the traditional year values, such as '3 years' or '5 years,' are given for modification.

## HOW IT WORKS

This model allows for many students within a classroom to challenge each other over a network.  Students will keep switching partners by moving their agents around on the screen and they can switch strategies. Students compete to see who has gained the maximum points over all interactions.

Moreover, this model allows students to gain a grasp of computer programming. An input box on the screen allows students to edit and author strategies. Following are the strategies that students can choose from (see the STRATEGY-CHOICE chooser in the HubNet client):

Strategies:

- **Random** -- Randomly cooperate or defect.

- **Cooperate** -- Always cooperate.

- **Defect** -- Always defect.

- **Go-by-Majority** -- Totals the number of times that partners defected against me. If the majority of the time, up to that point, the partner has defected, defect.  Otherwise, cooperate.

- **Tit-for-Tat** -- If my opponent from the previous round cooperated with me, cooperate this round. If my opponent from the previous round defected against me, defect this round. Initially cooperate.

- **Suspicious-Tit-for-Tat** - Same as the Tit-for-Tat strategy, except I initially defect.

- **Tit-for-Two-Tats** -- If my opponents from the two previous rounds defected against me, defect this round. Otherwise, cooperate. Initially cooperate.

- **Pavlov** -- If my partner from last round cooperated with me, repeat my action from last round. If my partner from last round defected against me, choose the opposite action from the one I used last round. Initially random.

- **Unforgiving** -- Always cooperate, until an opponent defects against me. Once an opponent defected against me, always defect, against everyone.

Rules for the Iterated Prisoner's Dilemma

1.  This game will consist of matches in which each student competes against one opponent at a time.  Students may search for partners on their own.  Once paired, students will play 10 rounds, and then separate and look for other partners.

2.  Each round the student and his/her partner will earn or lose points by either cooperating (C) or defecting (D) based on the rules set in their individual client. Each students' strategy is either selected (the STRATEGY-CHOICE ) or edited on the HubNet client.

3.  The point system is determined by the administrator, using the 4 sliders under "PAYOFF." That is, the administrator does not change the basic game but the value of the prizes and penalties.

## HOW TO USE IT

Buttons:

SETUP: Begin playing the iterated prisoner's dilemma.
RERUN: All players set their total back to zero, and are ready to replay
PLAY: When students pair up, they will play a user-defined number of turns before separating
CREATE ANDROID: Creates a computer player to compete with students

Switches:

ALLOW-STRATEGY-CHANGE?: If on, students will be able to change their strategies. If off, they will be locked into the last working strategy in their client until it is turned on again.

Sliders:

COMPUTER STRATEGY - Select the computer's strategy from the drop-down list below.

Plots:

STRATEGY PLOTS: Shows the total points accumulated for each given strategy.  Once a strategy is modified by a student, the results of that student's success/failure will not be plotted on this.

C-D PLOT: Plots the total number of times players have cooperated, and the total number of times players have defected.

## THINGS TO NOTICE

Watch the plots for the different strategies.  Is there a serious difference between tit-for-tat and suspicious-tit-fot-tat?  Does one strategy really beat out the rest?

See how often students cooperate and defect.  In the long run, do students learn to switch to more trusting strategies?  Or do students all too often defect?

## THINGS TO TRY

1.  Experiment with playing different strategies one against the other.  Which strategies do the best?  Which do the worst?  Why?

2. Let it run for a while with hundreds of computer players to see which strategies win under these conditions.

3. There is a mode in which students cannot change their strategies.  Encourage them to code their own strategies, and then make them stick to that.  Which strategy seemed to work the best?

## EXTENDING THE MODEL

Students know the history of their last round, but not any of the previous rounds.  Think of a way to have clients be able to store the history of previous plays, and know what their current partner has done in other rounds.

## NETLOGO FEATURES

Note the use of the turtle variable `label` to display each turtle's average score in the view.

## RELATED MODELS

PD Basic, PD N-Person Iterated, PD Basic Evolutionary, PD 2-Person Iterated

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (2003).  NetLogo HubNet Prisoners Dilemma HubNet model.  http://ccl.northwestern.edu/netlogo/models/HubNetPrisonersDilemmaHubNet.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2003 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This activity and associated models and materials were created as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227.

<!-- 2003 -->]]></info><systemDynamics/><linkShapes><linkShape curviness="0.0" name="default"><line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/><line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/><line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/><indicator editableColorIndex="0" rotatable="true" name="link direction"><elements><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/></elements></indicator></linkShape></linkShapes><widgets><view frameRate="30.0" showTickCounter="false" fontSize="12" bottom="409" right="939" top="10" left="541"><dimensions maxPycor="7" minPycor="-7" maxPxcor="7" minPxcor="-7" wrapInY="true" wrapInX="true" patchSize="26.0"/><tickCounterLabel><![CDATA[ticks]]></tickCounterLabel></view><button ticksEnabled="false" forever="false" bottom="43" right="103" top="10" left="27"><source><![CDATA[setup]]></source><display><![CDATA[Setup]]></display></button><switch isOn="true" bottom="43" right="525" top="10" left="339"><variable><![CDATA[allow-strategy-change?]]></variable></switch><button actionKey="A" ticksEnabled="false" forever="false" bottom="90" right="143" top="54" left="27"><source><![CDATA[create-android-player]]></source><display><![CDATA[Create android]]></display></button><button ticksEnabled="false" forever="false" bottom="43" right="187" top="10" left="110"><source><![CDATA[rerun]]></source><display><![CDATA[Rerun]]></display></button><button ticksEnabled="false" forever="true" bottom="43" right="287" top="10" left="194"><source><![CDATA[play-n-times]]></source><display><![CDATA[Play]]></display></button><textbox transparent="false" color="#000000" fontSize="11" bottom="102" right="457" top="60" left="330"><display><![CDATA[Payoffs 
(prisoner-opponent)]]></display></textbox><slider direction="horizontal" default="1.0" bottom="139" right="422" top="106" left="330"><maximum><![CDATA[5]]></maximum><minimum><![CDATA[-5]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[C-C]]></variable></slider><slider direction="horizontal" default="-4.0" bottom="140" right="518" top="107" left="426"><maximum><![CDATA[5]]></maximum><minimum><![CDATA[-5]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[C-D]]></variable></slider><slider direction="horizontal" default="5.0" bottom="172" right="422" top="139" left="330"><maximum><![CDATA[5]]></maximum><minimum><![CDATA[-5]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[D-C]]></variable></slider><slider direction="horizontal" default="-3.0" bottom="173" right="518" top="140" left="426"><maximum><![CDATA[5]]></maximum><minimum><![CDATA[-5]]></minimum><step><![CDATA[1]]></step><variable><![CDATA[D-D]]></variable></slider><plot bottom="401" right="308" top="99" left="10" ymax="10.0" ymin="0.0" xmax="10.0" xmin="-1.0" legendOn="false" autoPlotOn="true"><display><![CDATA[Strategies]]></display><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-16777216" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[random]]></display></pen><pen inLegend="true" color="-6459832" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[cooperate]]></display></pen><pen inLegend="true" color="-13345367" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[defect]]></display></pen><pen inLegend="true" color="-955883" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[go-by-majority]]></display></pen><pen inLegend="true" color="-11221820" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[tit-for-tat]]></display></pen><pen inLegend="true" color="-5825686" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[suspicious-tit-for-tat]]></display></pen><pen inLegend="true" color="-13840069" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[tit-for-two-tats]]></display></pen><pen inLegend="true" color="-1184463" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[pavlov]]></display></pen><pen inLegend="true" color="-2674135" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[unforgiving]]></display></pen><pen inLegend="false" color="-16777216" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[plotxy 0 0]]></update><display><![CDATA[0]]></display></pen></pens></plot><plot bottom="400" right="521" top="200" left="328" ymax="10.0" ymin="0.0" xmax="10.0" xmin="0.0" legendOn="false" autoPlotOn="true"><display><![CDATA[C-D Plot]]></display><setup><![CDATA[]]></setup><update><![CDATA[]]></update><pens><pen inLegend="true" color="-10899396" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[cooperate]]></display></pen><pen inLegend="true" color="-13345367" mode="0" interval="1.0"><setup><![CDATA[]]></setup><update><![CDATA[]]></update><display><![CDATA[defect]]></display></pen></pens></plot><output fontSize="12" bottom="465" right="521" top="411" left="11"/></widgets><experiments/><shapes><turtleShape editableColorIndex="0" rotatable="false" name="default"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="android"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="210,90 240,195 210,210 165,90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="3" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,88 120,193 105,240 105,298 135,300 150,210 165,300 195,298 195,240 180,193 195,88"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="81" x="127"/><rect marked="false" filled="true" color="#000000" height="23" width="62" y="33" x="119"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,90 60,195 90,210 135,90"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/><line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/><line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="butterfly"><elements><rect marked="true" filled="true" color="#8D8D8D" height="89" width="115" y="135" x="92"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="158"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="8"/><line marked="false" filled="false" color="#000000" y2="189" x2="253" y1="189" x1="43"/><rect marked="true" filled="true" color="#8D8D8D" height="225" width="30" y="60" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="105"/><line marked="true" filled="false" color="#8D8D8D" y2="60" x2="135" y1="30" x1="120"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="180" y1="60" x1="165"/><line marked="false" filled="false" color="#000000" y2="285" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="165" y1="285" x1="165"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cactus"><elements><rect marked="true" filled="true" color="#8D8D8D" height="147" width="40" y="30" x="135"/><rect marked="true" filled="true" color="#8D8D8D" height="109" width="33" y="105" x="67"/><rect marked="true" filled="true" color="#8D8D8D" height="78" width="34" y="89" x="217"/><rect marked="true" filled="true" color="#8D8D8D" height="34" width="63" y="151" x="157"/><rect marked="true" filled="true" color="#8D8D8D" height="44" width="54" y="189" x="94"/><rect marked="true" filled="true" color="#8D8D8D" height="135" width="49" y="162" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="28" cy="76" cx="219"/><circle marked="true" filled="true" color="#8D8D8D" diameter="34" cy="7" cx="138"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="93" cx="67"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="145" cx="201"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="193" cx="69"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cat"><elements><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="210" y1="240" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="165" y1="300" x1="195"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="90" y1="240" x1="15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="195" y1="285" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="135" y1="300" x1="105"/><line marked="false" filled="false" color="#000000" y2="285" x2="150" y1="270" x1="150"/><line marked="false" filled="false" color="#000000" y2="120" x2="15" y1="75" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,15 285,30 255,30 225,75 195,60 255,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,135 210,135 180,150 180,45 285,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,45 120,210 180,210 180,45"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,195 165,300 240,285 255,225 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,225 195,285 165,300 150,300 150,255 165,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,195 195,165 225,150 255,135 285,135 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,135 90,135 120,150 120,45 15,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,195 135,300 60,285 45,225 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,225 105,285 135,300 150,300 150,255 135,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,195 105,165 75,150 45,135 15,135 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,120 270,90 285,15 300,15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="105" y1="285" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 30,90 15,15 0,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="0,15 15,30 45,30 75,75 105,60 45,15"/><line marked="false" filled="false" color="#000000" y2="262" x2="209" y1="262" x1="164"/><line marked="false" filled="false" color="#000000" y2="261" x2="208" y1="231" x1="223"/><line marked="false" filled="false" color="#000000" y2="262" x2="91" y1="262" x1="136"/><line marked="false" filled="false" color="#000000" y2="261" x2="92" y1="231" x1="77"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="cow skull"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,90 75,105 60,150 75,210 105,285 195,285 225,210 240,150 225,105"/><polygon marked="false" filled="true" color="#000000" points="150,150 90,195 90,150"/><polygon marked="false" filled="true" color="#000000" points="150,150 210,195 210,150"/><polygon marked="false" filled="true" color="#000000" points="105,285 135,270 150,285 165,270 195,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,150 263,143 278,126 287,102 287,79 280,53 273,38 261,25 246,15 227,8 241,26 253,46 258,68 257,96 246,116 229,126"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,150 37,143 22,126 13,102 13,79 20,53 27,38 39,25 54,15 73,8 59,26 47,46 42,68 43,96 54,116 71,126"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="dog"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,165 300,195 270,210 183,204 180,240 165,270 165,300 120,300 0,240 45,165 75,90 75,45 105,15 135,45 165,45 180,15 225,15 255,30 225,30 210,60 225,90 225,105"/><polygon marked="false" filled="true" color="#000000" points="0,240 120,300 165,300 165,285 120,285 10,221"/><line marked="false" filled="false" color="#000000" y2="45" x2="180" y1="60" x1="210"/><line marked="false" filled="false" color="#000000" y2="90" x2="90" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="105" x2="105" y1="90" x1="90"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="105" x1="105"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="45" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="203" x2="151" y1="203" x1="181"/><line marked="false" filled="false" color="#000000" y2="171" x2="105" y1="201" x1="150"/><circle marked="false" filled="true" color="#000000" diameter="34" cy="88" cx="171"/><circle marked="false" filled="false" color="#000000" diameter="30" cy="162" cx="261"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="ghost"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="30,165 13,164 -2,149 0,135 -2,119 0,105 15,75 30,75 58,104 43,119 43,134 58,134 73,134 88,104 73,44 78,14 103,-1 193,-1 223,29 208,89 208,119 238,134 253,119 240,105 238,89 240,75 255,60 270,60 283,74 300,90 298,104 298,119 300,135 285,135 285,150 268,164 238,179 208,164 208,194 238,209 253,224 268,239 268,269 238,299 178,299 148,284 103,269 58,284 43,299 58,269 103,254 148,254 193,254 163,239 118,209 88,179 73,179 58,164"/><line marked="false" filled="false" color="#000000" y2="253" x2="215" y1="253" x1="189"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="102"/><polygon marked="false" filled="true" color="#000000" points="165,105 135,105 120,120 105,105 135,75 165,75 195,105 180,120"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="160"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="156" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good android"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="210,90 240,195 210,210 165,90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="3" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,88 120,193 105,240 105,298 135,300 150,210 165,300 195,298 195,240 180,193 195,88"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="81" x="127"/><rect marked="false" filled="true" color="#000000" height="23" width="62" y="33" x="119"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,90 60,195 90,210 135,90"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="167" cx="161"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 270,225 270,90 150,150"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,150 30,90 150,30 270,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,90 30,225 150,285 150,150"/><line marked="false" filled="false" color="#000000" y2="150" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="90" x2="30" y1="150" x1="150"/><line marked="false" filled="false" color="#000000" y2="90" x2="270" y1="150" x1="150"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="178" cx="170"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good butterfly"><elements><rect marked="true" filled="true" color="#8D8D8D" height="89" width="115" y="135" x="92"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="158"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="8"/><line marked="false" filled="false" color="#000000" y2="189" x2="253" y1="189" x1="43"/><rect marked="true" filled="true" color="#8D8D8D" height="225" width="30" y="60" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="105"/><line marked="true" filled="false" color="#8D8D8D" y2="60" x2="135" y1="30" x1="120"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="180" y1="60" x1="165"/><line marked="false" filled="false" color="#000000" y2="285" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="165" y1="285" x1="165"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good cactus"><elements><rect marked="true" filled="true" color="#8D8D8D" height="147" width="40" y="30" x="135"/><rect marked="true" filled="true" color="#8D8D8D" height="109" width="33" y="105" x="67"/><rect marked="true" filled="true" color="#8D8D8D" height="78" width="34" y="89" x="217"/><rect marked="true" filled="true" color="#8D8D8D" height="34" width="63" y="151" x="157"/><rect marked="true" filled="true" color="#8D8D8D" height="44" width="54" y="189" x="94"/><rect marked="true" filled="true" color="#8D8D8D" height="135" width="49" y="162" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="28" cy="76" cx="219"/><circle marked="true" filled="true" color="#8D8D8D" diameter="34" cy="7" cx="138"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="93" cx="67"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="145" cx="201"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="193" cx="69"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="285,208 285,178 279,164 261,144 240,135 226,132 213,106 199,84 171,68 149,68 129,68 75,75 15,150 15,165 15,225 285,225 283,174 283,176"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="195,90 135,90 135,135 210,135 195,105 165,90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="156" cx="171"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good cat"><elements><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="210" y1="240" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="165" y1="300" x1="195"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="90" y1="240" x1="15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="195" y1="285" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="135" y1="300" x1="105"/><line marked="false" filled="false" color="#000000" y2="285" x2="150" y1="270" x1="150"/><line marked="false" filled="false" color="#000000" y2="120" x2="15" y1="75" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,15 285,30 255,30 225,75 195,60 255,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,135 210,135 180,150 180,45 285,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,45 120,210 180,210 180,45"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,195 165,300 240,285 255,225 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,225 195,285 165,300 150,300 150,255 165,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,195 195,165 225,150 255,135 285,135 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,135 90,135 120,150 120,45 15,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,195 135,300 60,285 45,225 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,225 105,285 135,300 150,300 150,255 135,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,195 105,165 75,150 45,135 15,135 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,120 270,90 285,15 300,15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="105" y1="285" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 30,90 15,15 0,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="0,15 15,30 45,30 75,75 105,60 45,15"/><line marked="false" filled="false" color="#000000" y2="262" x2="209" y1="262" x1="164"/><line marked="false" filled="false" color="#000000" y2="261" x2="208" y1="231" x1="223"/><line marked="false" filled="false" color="#000000" y2="262" x2="91" y1="262" x1="136"/><line marked="false" filled="false" color="#000000" y2="261" x2="92" y1="231" x1="77"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="186" cx="186"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good cow skull"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,90 75,105 60,150 75,210 105,285 195,285 225,210 240,150 225,105"/><polygon marked="false" filled="true" color="#000000" points="150,150 90,195 90,150"/><polygon marked="false" filled="true" color="#000000" points="150,150 210,195 210,150"/><polygon marked="false" filled="true" color="#000000" points="105,285 135,270 150,285 165,270 195,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,150 263,143 278,126 287,102 287,79 280,53 273,38 261,25 246,15 227,8 241,26 253,46 258,68 257,96 246,116 229,126"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,150 37,143 22,126 13,102 13,79 20,53 27,38 39,25 54,15 73,8 59,26 47,46 42,68 43,96 54,116 71,126"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="186" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good dog"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,165 300,195 270,210 183,204 180,240 165,270 165,300 120,300 0,240 45,165 75,90 75,45 105,15 135,45 165,45 180,15 225,15 255,30 225,30 210,60 225,90 225,105"/><polygon marked="false" filled="true" color="#000000" points="0,240 120,300 165,300 165,285 120,285 10,221"/><line marked="false" filled="false" color="#000000" y2="45" x2="180" y1="60" x1="210"/><line marked="false" filled="false" color="#000000" y2="90" x2="90" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="105" x2="105" y1="90" x1="90"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="105" x1="105"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="45" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="203" x2="151" y1="203" x1="181"/><line marked="false" filled="false" color="#000000" y2="171" x2="105" y1="201" x1="150"/><circle marked="false" filled="true" color="#000000" diameter="34" cy="88" cx="171"/><circle marked="false" filled="false" color="#000000" diameter="30" cy="162" cx="261"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="186" cx="126"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good ghost"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="30,165 13,164 -2,149 0,135 -2,119 0,105 15,75 30,75 58,104 43,119 43,134 58,134 73,134 88,104 73,44 78,14 103,-1 193,-1 223,29 208,89 208,119 238,134 253,119 240,105 238,89 240,75 255,60 270,60 283,74 300,90 298,104 298,119 300,135 285,135 285,150 268,164 238,179 208,164 208,194 238,209 253,224 268,239 268,269 238,299 178,299 148,284 103,269 58,284 43,299 58,269 103,254 148,254 193,254 163,239 118,209 88,179 73,179 58,164"/><line marked="false" filled="false" color="#000000" y2="253" x2="215" y1="253" x1="189"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="102"/><polygon marked="false" filled="true" color="#000000" points="165,105 135,105 120,120 105,105 135,75 165,75 195,105 180,120"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="160"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good heart"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="152"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 240,105 270,135 150,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 60,105 30,135 150,270"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="150" y1="270" x1="150"/><rect marked="true" filled="true" color="#8D8D8D" height="45" width="45" y="90" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="14"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="156" cx="171"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good key"><elements><rect marked="true" filled="true" color="#8D8D8D" height="30" width="210" y="120" x="90"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="270"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="195"/><circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="60" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="90" cx="30"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="141"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good monster"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 90,195 210,195 225,150 255,120 255,45 180,0 120,0 45,45 45,120"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="165"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="75"/><polygon marked="true" filled="true" color="#8D8D8D" points="225,150 285,195 285,285 255,300 255,210 180,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 15,195 15,285 45,300 45,210 120,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="210,210 225,285 195,285 165,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,210 75,285 105,285 135,165"/><rect marked="true" filled="true" color="#8D8D8D" height="105" width="30" y="165" x="135"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="141" cx="141"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good moon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="160,7 68,36 10,108 12,186 64,250 119,271 190,274 266,239 192,233 137,216 98,185 89,132 95,77 117,51"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="171"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="good target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><circle marked="false" filled="true" color="#2CD13B" diameter="95" cy="163" cx="163"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="good wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/><circle marked="false" filled="true" color="#2CD13B" diameter="108" cy="156" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="heart"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="152"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 240,105 270,135 150,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 60,105 30,135 150,270"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="150" y1="270" x1="150"/><rect marked="true" filled="true" color="#8D8D8D" height="45" width="45" y="90" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="14"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="key"><elements><rect marked="true" filled="true" color="#8D8D8D" height="30" width="210" y="120" x="90"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="270"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="195"/><circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="60" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="90" cx="30"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="monster"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 90,195 210,195 225,150 255,120 255,45 180,0 120,0 45,45 45,120"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="165"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="75"/><polygon marked="true" filled="true" color="#8D8D8D" points="225,150 285,195 285,285 255,300 255,210 180,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 15,195 15,285 45,300 45,210 120,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="210,210 225,285 195,285 165,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,210 75,285 105,285 135,165"/><rect marked="true" filled="true" color="#8D8D8D" height="105" width="30" y="165" x="135"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="moon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="175,7 83,36 25,108 27,186 79,250 134,271 205,274 281,239 207,233 152,216 113,185 104,132 110,77 132,51"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick airplane"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="156" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick android"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="210,90 240,195 210,210 165,90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="3" cx="110"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,88 120,193 105,240 105,298 135,300 150,210 165,300 195,298 195,240 180,193 195,88"/><rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="81" x="127"/><rect marked="false" filled="true" color="#000000" height="23" width="62" y="33" x="119"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,90 60,195 90,210 135,90"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="167" cx="161"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick box"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,285 270,225 270,90 150,150"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,150 30,90 150,30 270,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="30,90 30,225 150,285 150,150"/><line marked="false" filled="false" color="#000000" y2="150" x2="150" y1="285" x1="150"/><line marked="false" filled="false" color="#000000" y2="90" x2="30" y1="150" x1="150"/><line marked="false" filled="false" color="#000000" y2="90" x2="270" y1="150" x1="150"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="178" cx="170"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick butterfly"><elements><rect marked="true" filled="true" color="#8D8D8D" height="89" width="115" y="135" x="92"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="158"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="90" cy="180" cx="45"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="53" cx="8"/><line marked="false" filled="false" color="#000000" y2="189" x2="253" y1="189" x1="43"/><rect marked="true" filled="true" color="#8D8D8D" height="225" width="30" y="60" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="165"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="15" cx="105"/><line marked="true" filled="false" color="#8D8D8D" y2="60" x2="135" y1="30" x1="120"/><line marked="true" filled="false" color="#8D8D8D" y2="30" x2="180" y1="60" x1="165"/><line marked="false" filled="false" color="#000000" y2="285" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="60" x2="165" y1="285" x1="165"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick cactus"><elements><rect marked="true" filled="true" color="#8D8D8D" height="147" width="40" y="30" x="135"/><rect marked="true" filled="true" color="#8D8D8D" height="109" width="33" y="105" x="67"/><rect marked="true" filled="true" color="#8D8D8D" height="78" width="34" y="89" x="217"/><rect marked="true" filled="true" color="#8D8D8D" height="34" width="63" y="151" x="157"/><rect marked="true" filled="true" color="#8D8D8D" height="44" width="54" y="189" x="94"/><rect marked="true" filled="true" color="#8D8D8D" height="135" width="49" y="162" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="28" cy="76" cx="219"/><circle marked="true" filled="true" color="#8D8D8D" diameter="34" cy="7" cx="138"/><circle marked="true" filled="true" color="#8D8D8D" diameter="30" cy="93" cx="67"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="145" cx="201"/><circle marked="true" filled="true" color="#8D8D8D" diameter="40" cy="193" cx="69"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick car"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="285,208 285,178 279,164 261,144 240,135 226,132 213,106 199,84 171,68 149,68 129,68 75,75 15,150 15,165 15,225 285,225 283,174 283,176"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/><polygon marked="false" filled="true" color="#000000" points="195,90 135,90 135,135 210,135 195,105 165,90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/><circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="156" cx="171"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick cat"><elements><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="210" y1="240" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="165" y1="300" x1="195"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="90" y1="240" x1="15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="195" y1="285" x1="285"/><line marked="true" filled="false" color="#8D8D8D" y2="255" x2="135" y1="300" x1="105"/><line marked="false" filled="false" color="#000000" y2="285" x2="150" y1="270" x1="150"/><line marked="false" filled="false" color="#000000" y2="120" x2="15" y1="75" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="300,15 285,30 255,30 225,75 195,60 255,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,135 210,135 180,150 180,45 285,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,45 120,210 180,210 180,45"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,195 165,300 240,285 255,225 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="180,225 195,285 165,300 150,300 150,255 165,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="195,195 195,165 225,150 255,135 285,135 285,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,135 90,135 120,150 120,45 15,90"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,195 135,300 60,285 45,225 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="120,225 105,285 135,300 150,300 150,255 135,225"/><polygon marked="true" filled="true" color="#8D8D8D" points="105,195 105,165 75,150 45,135 15,135 15,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="285,120 270,90 285,15 300,15"/><line marked="true" filled="false" color="#8D8D8D" y2="240" x2="105" y1="285" x1="15"/><polygon marked="true" filled="true" color="#8D8D8D" points="15,120 30,90 15,15 0,15"/><polygon marked="true" filled="true" color="#8D8D8D" points="0,15 15,30 45,30 75,75 105,60 45,15"/><line marked="false" filled="false" color="#000000" y2="262" x2="209" y1="262" x1="164"/><line marked="false" filled="false" color="#000000" y2="261" x2="208" y1="231" x1="223"/><line marked="false" filled="false" color="#000000" y2="262" x2="91" y1="262" x1="136"/><line marked="false" filled="false" color="#000000" y2="261" x2="92" y1="231" x1="77"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="186" cx="186"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick cow skull"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,90 75,105 60,150 75,210 105,285 195,285 225,210 240,150 225,105"/><polygon marked="false" filled="true" color="#000000" points="150,150 90,195 90,150"/><polygon marked="false" filled="true" color="#000000" points="150,150 210,195 210,150"/><polygon marked="false" filled="true" color="#000000" points="105,285 135,270 150,285 165,270 195,285"/><polygon marked="true" filled="true" color="#8D8D8D" points="240,150 263,143 278,126 287,102 287,79 280,53 273,38 261,25 246,15 227,8 241,26 253,46 258,68 257,96 246,116 229,126"/><polygon marked="true" filled="true" color="#8D8D8D" points="60,150 37,143 22,126 13,102 13,79 20,53 27,38 39,25 54,15 73,8 59,26 47,46 42,68 43,96 54,116 71,126"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="186" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick dog"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="300,165 300,195 270,210 183,204 180,240 165,270 165,300 120,300 0,240 45,165 75,90 75,45 105,15 135,45 165,45 180,15 225,15 255,30 225,30 210,60 225,90 225,105"/><polygon marked="false" filled="true" color="#000000" points="0,240 120,300 165,300 165,285 120,285 10,221"/><line marked="false" filled="false" color="#000000" y2="45" x2="180" y1="60" x1="210"/><line marked="false" filled="false" color="#000000" y2="90" x2="90" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="105" x2="105" y1="90" x1="90"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="105" x1="105"/><line marked="false" filled="false" color="#000000" y2="60" x2="135" y1="45" x1="90"/><line marked="false" filled="false" color="#000000" y2="45" x2="135" y1="60" x1="135"/><line marked="false" filled="false" color="#000000" y2="203" x2="151" y1="203" x1="181"/><line marked="false" filled="false" color="#000000" y2="171" x2="105" y1="201" x1="150"/><circle marked="false" filled="true" color="#000000" diameter="34" cy="88" cx="171"/><circle marked="false" filled="false" color="#000000" diameter="30" cy="162" cx="261"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="186" cx="126"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick ghost"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="30,165 13,164 -2,149 0,135 -2,119 0,105 15,75 30,75 58,104 43,119 43,134 58,134 73,134 88,104 73,44 78,14 103,-1 193,-1 223,29 208,89 208,119 238,134 253,119 240,105 238,89 240,75 255,60 270,60 283,74 300,90 298,104 298,119 300,135 285,135 285,150 268,164 238,179 208,164 208,194 238,209 253,224 268,239 268,269 238,299 178,299 148,284 103,269 58,284 43,299 58,269 103,254 148,254 193,254 163,239 118,209 88,179 73,179 58,164"/><line marked="false" filled="false" color="#000000" y2="253" x2="215" y1="253" x1="189"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="102"/><polygon marked="false" filled="true" color="#000000" points="165,105 135,105 120,120 105,105 135,75 165,75 195,105 180,120"/><circle marked="false" filled="true" color="#000000" diameter="30" cy="30" cx="160"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick heart"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="152"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 240,105 270,135 150,270"/><polygon marked="true" filled="true" color="#8D8D8D" points="150,105 60,105 30,135 150,270"/><line marked="true" filled="false" color="#8D8D8D" y2="135" x2="150" y1="270" x1="150"/><rect marked="true" filled="true" color="#8D8D8D" height="45" width="45" y="90" x="135"/><circle marked="true" filled="true" color="#8D8D8D" diameter="134" cy="19" cx="14"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="156" cx="171"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick key"><elements><rect marked="true" filled="true" color="#8D8D8D" height="30" width="210" y="120" x="90"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="270"/><rect marked="true" filled="true" color="#8D8D8D" height="60" width="30" y="135" x="195"/><circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="60" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="90" cy="90" cx="30"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick leaf"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/><polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="141"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick monster"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 90,195 210,195 225,150 255,120 255,45 180,0 120,0 45,45 45,120"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="165"/><circle marked="false" filled="true" color="#000000" diameter="60" cy="60" cx="75"/><polygon marked="true" filled="true" color="#8D8D8D" points="225,150 285,195 285,285 255,300 255,210 180,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="75,150 15,195 15,285 45,300 45,210 120,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="210,210 225,285 195,285 165,165"/><polygon marked="true" filled="true" color="#8D8D8D" points="90,210 75,285 105,285 135,165"/><rect marked="true" filled="true" color="#8D8D8D" height="105" width="30" y="165" x="135"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="141" cx="141"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick moon"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="160,7 68,36 10,108 12,186 64,250 119,271 190,274 266,239 192,233 137,216 98,185 89,132 95,77 117,51"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="171"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="171" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="true" name="sick target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><circle marked="false" filled="true" color="#D73229" diameter="95" cy="163" cx="163"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="sick wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/><circle marked="false" filled="true" color="#D73229" diameter="108" cy="156" cx="156"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="star"><elements><polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="target"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/><circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/></elements></turtleShape><turtleShape editableColorIndex="0" rotatable="false" name="wheel"><elements><circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/><circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/><line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/><line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/><circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/><line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/><line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/></elements></turtleShape></shapes><code><![CDATA[;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Variable and Breed declarations ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

breed [ students student ]
breed [ androids android ]

globals [
  COOPERATE
  DEFECT

  number-of-plays
  strategy-list

  strategy-totals        ;; list of totals for selected strategies, for plotting
  strategy-totals-count  ;; number of times that strategy has been used
  defect-total           ;; total number of times turtles have defected
  cooperate-total        ;; total number of times turtles have cooperated

  ;; Shapes
  shape-names            ;; list of names of the non-sick shapes a client's turtle can have
  colors                 ;; list of colors used for clients' turtles
  color-names            ;; list of names of colors used for students' turtles
  used-shape-colors      ;; list of shape-color pairs that are in use
  max-possible-codes     ;; total number of unique shape/color combinations
]

turtles-own [
  score                  ;; my current score
  defect-now?            ;; what will I do this round?
  partner                ;; the who of my partner
  total-defects          ;; counts how many times the partner has defected, used for certain strategies
  selected-strategy      ;; string that contains  the user's selected strategy

  total                  ;; the total score of the turtle, following all plays

  play-history           ;; stores all of your moves in this play
  play-partner-history   ;; stores all of your partners moves in this play

  base-shape             ;; original shape of a turtle

  user-code              ;; students create custom strategies, which are stored here
  code-changed?          ;; is true when the user changes given strategies
]

students-own [
  user-id                ;; unique id, input by the client when they log in, to identify each student turtle
]

;;;;;;;;;;;;;;;;;;;;;
;; Setup Functions ;;
;;;;;;;;;;;;;;;;;;;;;

to startup
  hubnet-reset
  setup
end

to setup
  clear-all
  setup-shapes
  setup-vars
  reset-ticks
end

to setup-shapes
  ;; most of these are to handle shapes and colors for uniqueness of students

  set shape-names [
                    "airplane" "android" "box" "butterfly" "cactus"
                    "car" "cat" "cow skull" "dog" "ghost"  "heart"
                    "key" "leaf" "monster" "moon" "star" "target" "wheel"
                  ]
  set colors      [ white gray brown yellow green lime turquoise
                    cyan sky blue violet ]

  ;; adjust a few colors so they don't blend in with the red infection dot too much
  set colors lput (orange + 1) colors
  set colors lput (magenta + 0.5) colors
  set colors lput (pink + 2.5) colors
  set color-names [ "white" "gray" "brown" "yellow" "green" "lime" "turquoise"
                    "cyan" "sky" "blue" "violet" "orange" "magenta" "pink" ]
  set max-possible-codes (length colors * length shape-names)
  set used-shape-colors []
end

to setup-vars

  ;; these are constant, for use when students code their own strategies
  set COOPERATE false
  set DEFECT true

  set number-of-plays 10

  ;; this is used for the androids, in interpreting their strategy
  set strategy-list [ "random" "cooperate" "defect" "go-by-majority" "tit-for-tat"
                      "suspicious-tit-for-tat" "tit-for-two-tats" "pavlov"
                      "unforgiving" "custom-strategy" ]

  set strategy-totals []
  set strategy-totals-count []
  foreach strategy-list [
    set strategy-totals fput 0 strategy-totals
    set strategy-totals-count fput 0 strategy-totals-count
  ]
  set defect-total 0
  set cooperate-total 0

end

to create-android-player
  create-androids 1 [
    set total 0
    set partner nobody
    set base-shape "android"
    set shape base-shape
    set color blue
    setup-turtle-vars
    set selected-strategy one-of but-last strategy-list
    set label selected-strategy
    set-code
  ]
end

;; Places turtles in random locations again, ready to find new partners.
to rerun
  ask turtles [
    setup-turtle-vars
    set total 0
    set score 3
  ]
end

to setup-turtle-vars  ;; turtle procedure
  set partner nobody
  set defect-now? false
  set play-history []
  set play-partner-history []
  set total-defects 0
  set size 1
  set total (total + score)
  set score 3
  setxy random-xcor
        random-ycor
end

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Runtime Procedures;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

to play-n-times
    listen-clients
  if (any? turtles) [
    do-plots
    find-partners

    every 0.3 [
      play-a-round
    ]

    ask turtles with [ length play-history = number-of-plays ] [
      ifelse breed = students [
        ;; students may have changed strategy during the round, and this change can only be made afterwards
        if not code-changed? [
          let strategy-index position selected-strategy strategy-list
          set strategy-totals (replace-item strategy-index strategy-totals ((item strategy-index strategy-totals) + score))
          set strategy-totals-count (replace-item strategy-index strategy-totals-count ((item strategy-index strategy-totals-count) + 1))
        ]
      ]
      [
        let strategy-index position selected-strategy strategy-list
        set strategy-totals (replace-item strategy-index strategy-totals ((item strategy-index strategy-totals) + score))
        set strategy-totals-count (replace-item strategy-index strategy-totals-count ((item strategy-index strategy-totals-count) + 1))
      ]
      setup-turtle-vars
      set shape base-shape
    ]
    display
  ]
end

to play-a-round  ;; determines the actions of turtles each turn
  ask turtles with [ partner != nobody ] [
    custom-strategy
    get-payoff                 ;; after the strategies are determined, the results of the round are determined
    if breed = students
      [ send-info-to-clients ]
  ]
end


;; test user strategy.
to custom-strategy ;; turtle procedure

  carefully [
    let strategy-output (run-result user-code)
    if not is-boolean? strategy-output [
      error (word "bad strategy output: " strategy-output)
    ]
    set defect-now? strategy-output
  ] [
    ifelse (breed = students) [
      hubnet-send user-id "Errors:" (error-message)
      output-show "bad strategy survived!"
    ] [
      output-show (word "Problem on android " who ": " error-message)
    ]
  ]
end

to find-partners
  ;;  In this example, only turtles that haven't found a partner can move around.
  listen-clients
  every 0.1 [
    ask turtles with [partner = nobody] [
      ;;  randomly move about the view
      if breed != students [
        rt random-normal 0 20
      ]
      fd 0.5
    ]
  ]

  ;; Ask unpartnered turtles to check if they are on a patch with a turtle that
  ;; also don't have a partner.
  ask turtles [
    if (partner = nobody) and (any? other turtles-here with [partner = nobody]) [
      set partner one-of other turtles-here with [partner = nobody]
      ask partner [ set partner myself ]
    ]
  ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;     Some Helpful Functions    ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to set-defect-shape
  ifelse defect-now? [
    set shape word "sick " base-shape
  ] [
    set shape word "good " base-shape
  ]
end

to-report test-strategy [ snippet ]
  let success? false
  carefully [
    ifelse is-boolean? (run-result snippet) [
      set success? true
    ] [
      hubnet-send user-id "Errors:" ("the output must be either true or false")
    ]
  ] [
    hubnet-send user-id "Errors:" (error-message)
  ]
  report success?
end

to set-code  ;; outputs the code to the input box, for students to see and modify
  if selected-strategy = "random"
    [ set user-code (word
        "ifelse-value (random 2 = 0)\n"
        "  [DEFECT]\n"
        "  [COOPERATE]")
      stop ]
  if selected-strategy = "cooperate"
    [ set user-code ("COOPERATE") stop ]
  if selected-strategy = "defect"
    [ set user-code ("DEFECT") stop ]
  if selected-strategy = "go-by-majority"
    [ set user-code (word
        "ifelse-value (empty? play-history)\n"
        "  [COOPERATE]\n"
        "  [ \n"
        "    ifelse-value (total-defects / (length play-history) > 0.5)\n"
        "      [DEFECT]\n"
        "      [COOPERATE]\n]")
      stop ]
  if selected-strategy = "tit-for-tat"
    [ set user-code (word
        "ifelse-value (empty? play-history)\n"
        "  [COOPERATE]\n"
        "  [\n"
        "    ifelse-value (last play-partner-history = DEFECT)\n"
        "      [DEFECT]\n"
        "      [COOPERATE]\n"
        "  ]") stop ]
  if selected-strategy = "suspicious-tit-for-tat"
    [ set user-code (word
        "ifelse-value (empty? play-history)\n"
        "  [DEFECT]\n"
        "  [ \n"
        "    ifelse-value (last play-partner-history = DEFECT)\n"
        "      [DEFECT]\n"
        "      [COOPERATE]\n"
        "  ]")
      stop ]
  if selected-strategy = "tit-for-two-tats"
    [ set user-code (word
        "ifelse-value (length play-history < 2 )\n"
        "  [COOPERATE]\n"
        "  [\n"
        "    ifelse-value ((last play-partner-history = DEFECT) and item (length play-partner-history - 2) play-partner-history = DEFECT)\n"
        "      [DEFECT]\n"
        "      [COOPERATE]\n"
        "  ]")
      stop ]
  if selected-strategy = "pavlov"
    [ set user-code (word
        "ifelse-value (empty? play-history) \n"
        "  [\n"
        "    ifelse-value (random 2 = 0) [DEFECT] [COOPERATE]\n"
        "  ]\n"
        "  [ \n"
        "    ifelse-value (last play-partner-history = DEFECT)\n"
        "      [\n"
        "        ifelse-value (last play-history = DEFECT)\n"
        "          [COOPERATE]\n"
        "          [DEFECT]\n"
        "      ]\n"
        "      [\n"
        "        ifelse-value (last play-history = DEFECT)\n"
        "          [DEFECT]\n"
        "          [COOPERATE]\n"
        "      ]\n"
        "  ]")
    stop ]
  if selected-strategy = "unforgiving"
    [ set user-code (word
        "ifelse-value (empty? play-history)\n"
        "  [COOPERATE] \n"
        "  [\n"
        "    ifelse-value ((last play-partner-history = DEFECT) or (last play-history = DEFECT))\n"
        "      [DEFECT]\n"
        "      [COOPERATE]\n"
        "  ]")
    stop ]
end


;;;;;;;;;;;;;;;;;;;;;;
;;; End Strategies ;;;
;;;;;;;;;;;;;;;;;;;;;;

to get-payoff ;;Turtle Procedure
  ifelse [defect-now?] of partner        ;; if the partner has defected
  [
    set play-partner-history lput true play-partner-history  ;; it is recorded in the history of his partner
    ifelse defect-now?                 ;; if this player has defected
    [
       set score score + D-D
       set play-history lput true play-history  ;; it is recorded in this player's history
    ]
    [
       set score score + C-D
       set play-history lput false play-history
    ]
    set total-defects total-defects + 1  ;; used for go-by-majority strategy
    set defect-total defect-total + 1    ;; when detecting a partner's defecting, it is totaled for plotting
  ]
  [
    set play-partner-history lput false play-partner-history
    ifelse defect-now?
    [
      set score score + D-C
      set play-history lput true play-history
    ]
    [
      set score score + C-C
      set play-history lput false play-history
    ]
    set cooperate-total cooperate-total + 1  ;;cooperates are totaled for plotting
  ]
  set-defect-shape
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;            Plotting           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to do-plots  ;;firsts plots the average turnout for provided strategies, then the rest
  plot-strategies
  plot-cooperate-defect
end

to plot-strategies  ;;plots the average scores for each of the given strategies
  set-current-plot "Strategies"

  let i 0
  foreach (but-last strategy-list) [ strategy ->
    set-current-plot-pen strategy
    if ((item i strategy-totals-count) != 0)
    [
      plot-pen-reset
      set-plot-pen-mode 1
      plotxy i ( (item i strategy-totals) / (item i strategy-totals-count) )
    ]
    set i ( i + 1 )
  ]
end

to plot-cooperate-defect ;;plots the total number of times that turtles have cooperated or defected
  set-current-plot "C-D Plot"
  set-current-plot-pen "cooperate"
  plot cooperate-total
  set-current-plot-pen "defect"
  plot defect-total
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Code for interacting with the clients ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; determines which client sent a command, and what the command was
to listen-clients
  while [ hubnet-message-waiting? ]
  [
    hubnet-fetch-message
    ifelse hubnet-enter-message?
    [ create-new-student ]
    [
      ifelse hubnet-exit-message?
      [ remove-student ]
      [ execute-command hubnet-message-tag ]
    ]
  ]
end

;; NetLogo knows what each student turtle is supposed to be
;; doing based on the tag sent by the node:
to execute-command [command]
  if command = "strategy-choice"  ;; the user wants to change his/her strategy, by selecting a pre-made strategy
  [
    ask students with [ user-id = hubnet-message-source ]
    [
      ifelse (allow-strategy-change?) ;; if this is permitted under the current game-mode
      [
        hubnet-send user-id "Errors:" ("")
        set selected-strategy hubnet-message
        set-code
        hubnet-send user-id "strategy" user-code
        send-info-to-clients
        set code-changed? false
      ]
      [
        hubnet-send user-id "Errors:" ("You cannot change your strategy while playing")
        hubnet-send user-id "strategy-choice" (selected-strategy)
      ]
    ]
  ]
  if command = "strategy"             ;; the user has modified the code of the current strategy
  [
     ask students with [ user-id = hubnet-message-source ]
     [
       if (hubnet-message = user-code or not allow-strategy-change?) [ stop ]
       hubnet-send user-id "Errors:" ("")
       ;; code is taken, and tested for accuracy, so students can make more changes before playing another round
       if ( test-strategy hubnet-message )
       [
         set user-code hubnet-message
         set code-changed? true
       ]
     ]
  ]
  if command = "Up"
    [ execute-move 0 ]
  if command = "Down"
    [ execute-move 180 ]
  if command = "Left"
    [ execute-move 270 ]
  if command = "Right"
    [ execute-move 90 ]
  if command = "Up-Left"
    [ execute-move 315 ]
  if command = "Up-Right"
    [ execute-move 45 ]
  if command = "Down-Left"
    [ execute-move 225 ]
  if command = "Down-Right"
    [ execute-move 135 ]
  if command = "Change Appearance"
    [ execute-change-turtle  ]
end

;; Create a turtle, set its shape, color, and position
;; and tell the node what its turtle looks like and where it is
to create-new-student
  create-students 1
  [
    setup-student-vars
    hubnet-send user-id "strategy" user-code
    send-info-to-clients
  ]
end

to execute-move [angle]
  ask students with [user-id = hubnet-message-source ]
  [
      set heading angle
  ]
end

;; sets the turtle variables to appropriate initial values
to setup-student-vars  ;; turtle procedure
  set user-id hubnet-message-source
  set total 0
  setup-turtle-vars
  set selected-strategy "random"
  set code-changed? false
  set-code
  set-unique-shape-and-color
end

;; pick a base-shape and color for the turtle
to set-unique-shape-and-color
  let code random max-possible-codes
  while [member? code used-shape-colors and count students < max-possible-codes]
  [
    set code random max-possible-codes
  ]
  set used-shape-colors (lput code used-shape-colors)
  set base-shape item (code mod length shape-names) shape-names
  set shape base-shape
  set color item (code / length shape-names) colors
end

;; report the string version of the turtle's color
to-report color-string [color-value]
  report item (position color-value colors) color-names
end

;; sends the appropriate monitor information back to the client
to send-info-to-clients
  hubnet-send user-id "You are a:" (word (color-string color) " " base-shape)
  hubnet-send user-id "Your Score:" (score)
  hubnet-send user-id "Your Total:" (total)
  ifelse partner != nobody
  [
    hubnet-send user-id "Partner's Score:" ([score] of partner)
    hubnet-send user-id "Partner's History:" (map [ b -> ifelse-value (b = true) ["D "] ["C "] ] play-partner-history)
    hubnet-send user-id "Your History:" ( map [ b -> ifelse-value (b = true) ["D "] ["C "] ] play-history)
    hubnet-send user-id "Points:" (map [ [b1 b2] ->
      ifelse-value ((b1 = false) and (b2 = false))
        [ C-C ]
        [ ifelse-value ((b1 = false) and (b2 = true))
            [ C-D ]
            [ ifelse-value ((b1 = true) and (b2 = false))
                [ D-C ]
                [ D-D ]
            ]
        ]
      ] play-history play-partner-history)
  ]
  [
    hubnet-send user-id "Partner's Score:" ("")
    hubnet-send user-id "Partner's History:" ("")
    hubnet-send user-id "Your History:" ("")
  ]

end

;; Kill the turtle, set its shape, color, and position
;; and tell the node what its turtle looks like and where it is
to remove-student
  ask students with [user-id = hubnet-message-source]
  [
    set used-shape-colors remove my-code used-shape-colors
    die
  ]
end

;; translates a student turtle's shape and color into a code
to-report my-code
  report (position base-shape shape-names) + (length shape-names) * (position color colors)
end

;; users might want to change their shape and color, so that they can find themselves more easily
to execute-change-turtle
  ask students with [user-id = hubnet-message-source]
  [
    set used-shape-colors remove my-code used-shape-colors
    show-turtle
    set-unique-shape-and-color
    hubnet-send user-id "You are a:" (word (color-string color) " " base-shape)
  ]
end


; Copyright 2003 Uri Wilensky.
; See Info tab for full copyright and license.]]></code><modelSettings/><hubnet><stringInput bottom="409" right="438" top="182" left="13"><variable><![CDATA[strategy]]></variable><stringData kind="string" multiline="false"><![CDATA[null]]></stringData></stringInput><monitor precision="3" bottom="62" right="136" top="13" left="17"><display><![CDATA[You are a:]]></display></monitor><monitor precision="3" bottom="113" right="136" top="64" left="17"><display><![CDATA[Your Total:]]></display></monitor><monitor precision="3" bottom="62" right="286" top="13" left="182"><display><![CDATA[Your Score:]]></display></monitor><monitor precision="3" bottom="62" right="632" top="13" left="290"><display><![CDATA[Your History:]]></display></monitor><monitor precision="3" bottom="112" right="632" top="63" left="290"><display><![CDATA[Partner's History:]]></display></monitor><monitor precision="3" bottom="113" right="285" top="64" left="182"><display><![CDATA[Partner's Score:]]></display></monitor><chooser currentChoice="0" bottom="179" right="175" top="134" left="13"><variable><![CDATA[strategy-choice]]></variable><choices><stringChoice><![CDATA[random]]></stringChoice><stringChoice><![CDATA[cooperate]]></stringChoice><stringChoice><![CDATA[defect]]></stringChoice><stringChoice><![CDATA[go-by-majority]]></stringChoice><stringChoice><![CDATA[tit-for-tat]]></stringChoice><stringChoice><![CDATA[suspicious-tit-for-tat]]></stringChoice><stringChoice><![CDATA[tit-for-two-tats]]></stringChoice><stringChoice><![CDATA[pavlov]]></stringChoice><stringChoice><![CDATA[unforgiving]]></stringChoice></choices></chooser><monitor precision="3" bottom="463" right="501" top="414" left="13"><display><![CDATA[Errors:]]></display></monitor><button actionKey="W" bottom="218" right="578" top="185" left="508"><display><![CDATA[Up]]></display></button><button actionKey="A" bottom="251" right="509" top="218" left="439"><display><![CDATA[Left]]></display></button><button actionKey="D" bottom="251" right="649" top="218" left="577"><display><![CDATA[Right]]></display></button><button actionKey="X" bottom="283" right="578" top="250" left="508"><display><![CDATA[Down]]></display></button><button actionKey="Q" bottom="218" right="509" top="185" left="439"><display><![CDATA[Up-Left]]></display></button><button actionKey="E" bottom="218" right="649" top="185" left="577"><display><![CDATA[Up-Right]]></display></button><button actionKey="Z" bottom="283" right="509" top="250" left="439"><display><![CDATA[Down-Left]]></display></button><button actionKey="C" bottom="283" right="649" top="250" left="577"><display><![CDATA[Down-Right]]></display></button><textbox transparent="false" color="#000000" fontSize="11" bottom="526" right="890" top="297" left="519"><display><![CDATA[A strategy returns COOPERATE or DEFECT

The following variables are available:

* play-history - a list of your moves, as "D" and "C"
* play-partner-history - a list of your partner's moves as "D" and "C"


The following NetLogo primitives may be useful:

* length
* item 
* empty
* filter 
]]></display></textbox><monitor precision="3" bottom="162" right="632" top="113" left="290"><display><![CDATA[Points:]]></display></monitor></hubnet></model>
